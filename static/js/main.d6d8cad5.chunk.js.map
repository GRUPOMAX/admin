{"version":3,"sources":["components/Sidebar.js","components/Popup.js","components/PopupIframe.js","components/Notification.js","components/PopupEquipamentos.js","components/LinkItem.js","pages/MaxFibra.js","firebaseConfig.js","uploadCompaniesToFirebase.js","pages/VirTelecom.js","pages/ReisServices.js","pages/Contact.js","pages/Cadastro.js","pages/ConsultaCpf.js","pages/ConsultaCnpj.js","pages/Login.js","pages/Home.js","components/Header.js","components/UploadImage.js","components/EditarPerfil.js","pages/CriarUsuario.js","firebaseUtils.js","GerenciarAtalhos.js","firebaseMultiShortcutUtils.js","pages/ConfigScreen.js","components/SendNotification.js","components/UsuariosOnline.js","pages/DetalhesDispositivos.js","pages/HomeDashboard.js","components/Notes.js","notesService.js","tasksService.js","components/Tasks.js","components/MonitorVPS.js","GalleryPage.js","components/PaginaEmpresas.js","App.js","reportWebVitals.js","index.js"],"names":["dayjs","locale","Sider","Layout","Title","Text","Typography","Sidebar","_ref","onLogout","holidays","setHolidays","useState","nextHoliday","setNextHoliday","loading","setLoading","location","useLocation","useNavigate","useEffect","async","cachedHolidays","localStorage","getItem","holidaysData","JSON","parse","findNextHoliday","axios","get","data","console","log","setItem","stringify","error","message","fetchHolidays","today","upcomingHolidays","Object","keys","filter","date","isAfter","sort","a","b","isBefore","length","nextHolidayDate","name","dayOfWeek","format","currentPath","pathname","options","/home/max-fibra","href","/home/vir-telecom","/home/reis-services","/home/max-fibra/consultaCNPJ","/home/max-fibra/consultaCPF","/home/max-fibra/cadastro","/home/vir-telecom/Dashboard-virtelecom","/home","/home/editar-perfil","/home/criar-usuario","/home/gerenciar-atalhos","/home/detalhes-dispositivos","/home/home","React","createElement","className","width","theme","Fragment","level","Menu","mode","selectedKeys","map","option","index","Item","key","Link","to","Popup","text","closePopup","dangerouslySetInnerHTML","__html","onClick","PopupIframe","url","dragging","setDragging","position","setPosition","top","left","offset","setOffset","x","y","handleMouseMove","useCallback","e","clientY","clientX","handleMouseUp","window","addEventListener","removeEventListener","style","onMouseDown","button","parseInt","stopPropagation","src","height","frameBorder","title","Notification_Title","Notification_Text","Notifications","userId","notifications","setNotifications","params","where","headers","xc-token","list","fetchNotifications","padding","List","itemLayout","dataSource","renderItem","notification","actions","isRead","Button","type","patch","notificationId","prevNotifications","id","markAsRead","Meta","Badge","dot","strong","description","PopupEquipamentos","losEquipamentos","fetchEquipamentos","Notification","LinkItem","imgSrc","altText","popupText","isIframe","isEquipamentos","showPopup","setShowPopup","showIframePopup","setShowIframePopup","showEquipamentosPopup","setShowEquipamentosPopup","hideTimeout","setHideTimeout","onMouseEnter","handleMouseEnter","clearTimeout","onMouseLeave","handleMouseLeave","timeout","setTimeout","preventDefault","open","rel","alt","closeIframePopup","closeEquipamentosPopup","accessPermissions","Administrador","Desenvolvedor","Financeiro","Vendedor","MaxFibra","userProfile","cargo","Cargo1","filteredSections","links","section","link","_accessPermissions$ca","includes","idx","assign","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","storage","getStorage","uploadCompaniesToFirebase","users","stringUserId","String","user","find","u","Id","empresa","userCompanies","split","company","trim","toLowerCase","setDoc","doc","companies","merge","VirTelecom","cargo1","Cargo","ReisServices","App","Router","Routes","Route","path","element","Contact","Cadastro_Title","Option","Select","Step","Steps","Cadastro","form","Form","useForm","currentStep","setCurrentStep","formData","setFormData","steps","content","label","rules","required","Input","placeholder","InputMask","mask","inputProps","DatePicker","getFieldValue","validator","_","value","Promise","reject","Error","resolve","current","step","onFinish","completeData","values","fetch","method","Content-Type","body","ok","success","prev","Math","max","validateFields","prevData","min","resetFields","htmlType","ConsultaCpf","ConsultaCnpj_Title","ConsultaCnpj_Text","ConsultaCnpj","cnpj","setCnpj","companyData","setCompanyData","setError","fetchCompanyData","proxyUrl","apiUrl","response","encodeURIComponent","status","statusText","Card","maxWidth","borderRadius","layout","cleanedCnpj","replace","validateStatus","help","onChange","target","maxLength","block","nome","abertura","situacao","tipo","porte","natureza_juridica","atividade_principal","code","logradouro","numero","complemento","bairro","municipio","uf","cep","telefone","Date","ultima_atualizacao","toLocaleString","qsa","person","qual","Alert","showIcon","marginTop","Login_Title","Login","onLogin","background","setBackground","navigate","docRef","onSnapshot","snapshot","exists","backgroundUrl","fetchBackground","updateOnlineStatus","isOnline","now","userData","email","password","username","profilePicUrl","profilePic","lastActiveAt","handleLogout","backgroundImage","backgroundSize","backgroundPosition","margin","textAlign","greetingMessage","currentHour","getHours","greeting","getGreetingMessage","Password","Home_Option","AnaliseTecnicaDashboard","lazy","all","__webpack_require__","then","bind","CobrancaDashboard","FinanceiroDashboard","OrdensServicoDashboard","Home","selectedDashboard","setSelectedDashboard","refreshKey","setRefreshKey","blockedClientsCount","setBlockedClientsCount","interval","setInterval","prevKey","clearInterval","json","fetchBlockedClientsCount","renderDashboard","defaultValue","display","backgroundColor","total","getColorForBlockedClients","marginLeft","Suspense","fallback","Spin","size","tip","Header","unreadCount","setUnreadCount","empresas","setEmpresas","carregando","setCarregando","erro","setErro","selectedEmpresa","setSelectedEmpresa","formatKey","unreadNotifications","unsubscribeEmpresas","fetchEmpresas","unsubscribe","docSnap","dados","primeiraEmpresa","catch","handleMenuClick","_ref2","empresasMenu","disabled","notificationMenu","updatedNotification","createdAt_","n","delete","deleteNotification","menu","icon","EditOutlined","UserAddOutlined","SendOutlined","UserOutlined","SettingOutlined","LaptopOutlined","AppstoreOutlined","FileTextOutlined","CheckCircleOutlined","LogoutOutlined","Dropdown","overlay","placement","trigger","count","BellOutlined","fontSize","cursor","SwapOutlined","Avatar","UploadImage","onImageUpload","uploading","setUploading","Upload","customRequest","file","storageRef","ref","uploadBytes","getDownloadURL","showUploadList","UploadOutlined","EditarPerfil","onProfileUpdate","setFieldsValue","updatedProfile","finally","initialValues","CriarUsuario","setProfilePicUrl","payload","post","_error$response","uploadImageToFirebase","uploadTask","uploadBytesResumable","on","downloadURL","getImagesFromFirestore","imagesRef","collection","getDocs","docs","GerenciarAtalhos_Option","GerenciarAtalhos","shortcuts","setShortcuts","isModalVisible","setIsModalVisible","editingShortcut","setEditingShortcut","isMultiShortcut","setIsMultiShortcut","setLinks","imageSource","setImageSource","imageUrl","setImageUrl","predefinedImages","setPredefinedImages","numAtalhos","formattedImages","image","fetchPredefinedImages","gridLayout","gutter","xs","sm","md","lg","xl","xxl","fetchShortcuts","simpleShortcuts","getShortcutsFromFirestore","multiShortcuts","multiShortcutsRef","getMultiShortcutsFromFirestore","combinedShortcuts","resetFormFields","handleDeleteShortcut","shortcutId","arguments","undefined","multiShortcutRef","deleteDoc","deleteMultiShortcutFromFirestore","deleteShortcutFromFirestore","grid","shortcut","hoverable","cover","isMulti","Array","isArray","fieldsToSet","shortcutType","forEach","openEditModal","Popconfirm","onConfirm","okText","cancelText","DeleteOutlined","Tag","color","shape","PlusOutlined","Modal","visible","onCancel","footer","_values$image","_values$image$file","newShortcut","originFileObj","predefinedImage","multiShortcutData","createdAt","getDoc","updatedData","updateDoc","editMultiShortcutInFirestore","prevShortcuts","newId","addDoc","saveMultiShortcutToFirestore","shortcutData","editShortcutInFirestore","saveShortcutToFirestore","listType","maxCount","defaultFileList","handleLinkChange","newLinks","handleAddLink","ConfigScreen","configDocRef","SendNotification_Option","SendNotification","setUsers","fetchUsers","sendNotificationToUsers","userIds","notificationData","bordered","boxShadow","marginBottom","sendToAll","TextArea","rows","valuePropName","Checkbox","borderColor","UsuariosOnline","usuarios","setUsuarios","intervalId","getStatusIndicator","avatar","DetalhesDispositivos_Option","DetalhesDispositivos","statusData","setStatusData","detalhes","setDetalhes","filteredData","setFilteredData","statusSelecionado","setStatusSelecionado","isAdministradorOrDev","contagem","fetchStatusData","columns","dataIndex","render","charAt","toUpperCase","slice","filtered","item","sn","port","allowClear","from","i","Row","Col","span","Table","rowKey","pagination","pageSize","scroll","HomeDashboard_Option","CanceladosDashboardVIRTELECOM","AtivosDashboardVIRTELECOM","BloqueadosDashboardVIRTELECOM","InativosDashboardVIRTELECOM","HomeDashboard","Notes_Title","Notes","setTitle","setContent","notes","setNotes","currentNote","setCurrentNote","fetchNotes","userNotes","q","query","getUserNotes","handleCancel","renderNewStatus","creationDate","startOf","seconds","isSame","truncateText","substring","ReactQuill","modules","toolbar","header","font","align","clipboard","matchVisual","formats","currentDate","expirationDate","updatedAt","addNote","extra","note","showModal","danger","noteRef","noteId","deleteNote","validExpirationDate","isNaN","getTime","updatedNote","updateNote","addTaskToList","timer","senderName","isSender","recipientNames","newTask","listId","completed","Tasks_Option","Tasks","tasks","setTasks","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","newTaskExpirationDate","setNewTaskExpirationDate","selectedUserIds","setSelectedUserIds","setFilter","isPersonalTask","setIsPersonalTask","userName","fetchTasks","querySnapshot","push","getTasksFromList","filteredUsers","handleCompleteTask","task","taskId","updatedTaskData","taskRef","updateTask","handleDeleteTask","deleteTask","filteredTasks","onOk","_users$find","join","taskData","toISOString","recipientUserId","_users$find2","selectedUserName","warn","toDate","checked","MonitorVPS_Header","Content","MonitorVPS_Title","MonitorVPS","terminalOutput","setTerminalOutput","pm2Processes","setPm2Processes","vpsOverview","setVpsOverview","CPU","Memória Total","Memória Usada","Espaço em Disco","Uptime","isError","setIsError","executeCommand","comando","command","result","fetchPm2Monit","fetchVpsOverview","minHeight","ConsoleSqlOutlined","BarChartOutlined","InfoCircleOutlined","proc","cpu","memory","GalleryPage","galleryImages","setGalleryImages","imageName","setImageName","fetchGalleryImages","images","handleUpload","extension","pop","fileName","newFile","File","saveImageToFirestore","handleDeleteImage","imageId","deleteObject","deleteImageFromFirestore","beforeUpload","userMenu","isAuthenticated","setIsAuthenticated","setUserProfile","savedProfile","document","classList","add","remove","checkTimers","timerEnd","Audio","play","removeItem","SidebarLayout","Navigate","userProfileData","HomeDashBoard","PaginaEmpresas","Root","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.d6d8cad5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, Link, useNavigate } from 'react-router-dom';\r\nimport { Layout, Menu, Typography, message } from 'antd';\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/pt-br';\r\nimport './Sidebar.css'\r\n\r\ndayjs.locale('pt-br');  // Configura o dayjs para usar o português\r\n\r\nconst { Sider } = Layout;\r\nconst { Title, Text } = Typography;\r\n\r\nconst Sidebar = ({ onLogout }) => {\r\n  const [holidays, setHolidays] = useState({});\r\n  const [nextHoliday, setNextHoliday] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchHolidays = async () => {\r\n      const cachedHolidays = localStorage.getItem('holidays-data');\r\n\r\n      if (cachedHolidays) {\r\n        const holidaysData = JSON.parse(cachedHolidays);\r\n        setHolidays(holidaysData);\r\n        findNextHoliday(holidaysData);\r\n        setLoading(false);\r\n      } else {\r\n        try {\r\n          const response = await axios.get(\r\n            'https://apidoixc.nexusnerds.com.br/Data/feriados.json'\r\n          );\r\n\r\n          const holidaysData = response.data;\r\n          console.log('Dados recebidos da API:', holidaysData);\r\n\r\n          localStorage.setItem('holidays-data', JSON.stringify(holidaysData));\r\n          setHolidays(holidaysData);\r\n          findNextHoliday(holidaysData);\r\n\r\n          setLoading(false);\r\n        } catch (error) {\r\n          message.error('Erro ao carregar os feriados');\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchHolidays();\r\n  }, []);\r\n\r\n  const findNextHoliday = (holidays) => {\r\n    const today = dayjs();\r\n    const upcomingHolidays = Object.keys(holidays)\r\n      .filter(date => dayjs(date).isAfter(today))\r\n      .sort((a, b) => dayjs(a).isBefore(dayjs(b)) ? -1 : 1);\r\n\r\n    if (upcomingHolidays.length > 0) {\r\n      const nextHolidayDate = upcomingHolidays[0];\r\n      setNextHoliday({\r\n        date: nextHolidayDate,\r\n        name: holidays[nextHolidayDate],\r\n        dayOfWeek: dayjs(nextHolidayDate).format('dddd'),\r\n      });\r\n    } else {\r\n      setNextHoliday(null);  // Nenhum próximo feriado\r\n    }\r\n  };\r\n\r\n  const menuOptions = {\r\n    '/home/max-fibra': [\r\n      { name: 'Dashboard', href: '/home/home' },\r\n      { name: 'Consulta CNPJ', href: '/home/max-fibra/consultaCNPJ' },\r\n      { name: 'Cadastro Vendedor', href: '/home/max-fibra/cadastro' },\r\n    ],\r\n    '/home/vir-telecom': [\r\n      { name: 'Dashboard Vir Telecom', href: '/home/vir-telecom/Dashboard-virtelecom' },\r\n      { name: 'Consultar CNPJ', href: '/home/vir-telecom/consultaCNPJ' }, // Ajustado para ser específico para /home/vir-telecom\r\n    ],\r\n    '/home/reis-services': [\r\n      { name: 'Opção 1 - Reis', href: '/reis-services/opcao1' },\r\n      { name: 'Opção 2 - Reis', href: '/reis-services/opcao2' },\r\n    ],\r\n    '/home/max-fibra/consultaCNPJ': [\r\n      { name: 'Dashboard', href: '/home/max-fibra' },\r\n      { name: 'Max Fibra - Atalhos', href: '/home/max-fibra' },\r\n      { name: 'Consulta CPF', href: '/home/max-fibra/consultaCPF' },\r\n    ],\r\n    '/home/max-fibra/consultaCPF': [\r\n      { name: 'Pagina Inicial', href: '/home/max-fibra' },\r\n      { name: 'Consulta CNPJ', href: '/home/max-fibra/consultaCNPJ' },\r\n    ],\r\n    '/home/max-fibra/cadastro': [\r\n      { name: 'Pagina Inicial', href: '/home/max-fibra' },\r\n    ],\r\n    '/home/vir-telecom/Dashboard-virtelecom': [\r\n      { name: 'Atalhos Vir Telecom', href: '/home/vir-telecom' },\r\n    ], \r\n    '/home': [\r\n      { name: 'Max Fibra', href: '/home/max-fibra' },\r\n      { name: 'Cadastro Vendedor', href: '/home/max-fibra/cadastro' },\r\n    ],\r\n    '/home/editar-perfil': [\r\n      { name: 'Dashboard', href: '/home' },\r\n      { name: 'Max Fibra', href: '/home/max-fibra' },\r\n    ],\r\n    '/home/criar-usuario': [\r\n      { name: 'Dashboard', href: '/home' },\r\n      { name: 'Max Fibra', href: '/home/max-fibra' },\r\n    ],\r\n    '/home/gerenciar-atalhos': [\r\n      { name: 'Dashboard', href: '/home' },\r\n      { name: 'Max Fibra', href: '/home/max-fibra' },\r\n    ],\r\n    '/home/detalhes-dispositivos': [\r\n      { name: 'Dashboard', href: '/home' },\r\n      { name: 'Cadastro Vendedor', href: '/home/max-fibra/cadastro' },\r\n    ],\r\n    '/home/home': [\r\n      { name: 'Max Fibra', href: '/home/max-fibra' },\r\n      { name: 'Cadastro Vendedor', href: '/home/max-fibra/cadastro' },\r\n    ],\r\n};\r\n\r\n\r\n  const currentPath = location.pathname;\r\n  const options = menuOptions[currentPath] || [];\r\n\r\n  const handleLogout = () => {\r\n    onLogout();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Sider className=\"sidebar\" width={250} theme=\"light\">\r\n      <div className=\"sidebar-content\">\r\n        <div className=\"dynamic-menu\">\r\n          {options.length > 0 && (\r\n            <>\r\n              <Title level={4}>Menu</Title>\r\n              <Menu mode=\"inline\" selectedKeys={[currentPath]}>\r\n                {options.map((option, index) => (\r\n                  <Menu.Item key={option.href}>\r\n                    <Link to={option.href}>{option.name}</Link>\r\n                  </Menu.Item>\r\n                ))}\r\n              </Menu>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"next-holiday-container\">\r\n          <Title level={4}>Próximo Feriado</Title>\r\n          {loading ? (\r\n            <p>Carregando...</p>\r\n          ) : nextHoliday ? (\r\n            <Text>\r\n             {nextHoliday.name} em <strong>{dayjs(nextHoliday.date).format('DD/MM/YYYY')}</strong> ({nextHoliday.dayOfWeek})\r\n            </Text>\r\n          ) : (\r\n            <Text>Não há próximos feriados.</Text>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","// src/components/Popup.js\r\nimport React from 'react';\r\nimport './Popup.css';\r\n\r\nconst Popup = ({ text, closePopup }) => {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\" dangerouslySetInnerHTML={{ __html: text }} />\r\n      <button className=\"popup-close\" onClick={closePopup}>Fechar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './PopupIframe.css';\r\n\r\nconst PopupIframe = ({ url, closePopup }) => {\r\n  const [dragging, setDragging] = useState(false);\r\n  const [position, setPosition] = useState({ top: '20px', left: '20px' });\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n\r\n  // Use useCallback to memoize handleMouseMove\r\n  const handleMouseMove = useCallback((e) => {\r\n    if (dragging) {\r\n      setPosition({\r\n        top: `${e.clientY - offset.y}px`,\r\n        left: `${e.clientX - offset.x}px`,\r\n      });\r\n    }\r\n  }, [dragging, offset]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    if (e.button === 0) {\r\n      setDragging(true);\r\n      setOffset({\r\n        x: e.clientX - parseInt(position.left, 10),\r\n        y: e.clientY - parseInt(position.top, 10),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setDragging(false);\r\n  };\r\n\r\n  // Include handleMouseMove in the dependency array\r\n  useEffect(() => {\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    window.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [handleMouseMove]);\r\n\r\n  return (\r\n    <div\r\n      className=\"popup-iframe\"\r\n      style={{ top: position.top, left: position.left }}\r\n      onMouseDown={handleMouseDown}\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <div className=\"popup-iframe-header\">\r\n        <span className=\"popup-iframe-close\" onClick={closePopup}>&times;</span>\r\n        <div className=\"popup-iframe-title\">Gerador de Proposta</div>\r\n      </div>\r\n      <iframe src={url} width=\"100%\" height=\"100%\" frameBorder=\"0\" title=\"Popup Iframe\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupIframe;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { List, Typography, Badge, Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Notifications = ({ userId }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          'https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records',\r\n          {\r\n            params: {\r\n              where: `(userId,eq,${userId})`,\r\n            },\r\n            headers: {\r\n              'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n            },\r\n          }\r\n        );\r\n\r\n        setNotifications(data.list);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar notificações:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, [userId]);\r\n\r\n  const markAsRead = async (notificationId) => {\r\n    try {\r\n      await axios.patch(\r\n        `https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records/${notificationId}`,\r\n        { isRead: true },\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        }\r\n      );\r\n\r\n      // Atualizar a lista de notificações após marcar como lida\r\n      setNotifications((prevNotifications) =>\r\n        prevNotifications.map((notification) =>\r\n          notification.id === notificationId\r\n            ? { ...notification, isRead: true }\r\n            : notification\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Erro ao marcar notificação como lida:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <Title level={3}>Notificações</Title>\r\n      <List\r\n        loading={loading}\r\n        itemLayout=\"horizontal\"\r\n        dataSource={notifications}\r\n        renderItem={(notification) => (\r\n          <List.Item\r\n            actions={[\r\n              !notification.isRead && (\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={() => markAsRead(notification.id)}\r\n                >\r\n                  Marcar como lida\r\n                </Button>\r\n              ),\r\n            ]}\r\n          >\r\n            <List.Item.Meta\r\n              title={\r\n                <Badge dot={!notification.isRead}>\r\n                  <Text strong>{notification.title}</Text>\r\n                </Badge>\r\n              }\r\n              description={notification.message}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","// src/components/PopupEquipamentos.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Notification from './Notification';\r\nimport './Notification.css'; // Importa o CSS para estilizar o componente Notification\r\n\r\nconst PopupEquipamentos = () => {\r\n  const [losEquipamentos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEquipamentos = async () => {\r\n      try {\r\n        //const response = await fetch('/.netlify/functions/proxy');\r\n        //const data = await response.json();\r\n        //setLosEquipamentos(data.filter(equipamento => equipamento.status === 'LOS'));\r\n      } catch (error) {\r\n        console.error('Erro ao buscar equipamentos:', error);\r\n      }\r\n    };\r\n\r\n    fetchEquipamentos();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={losEquipamentos.length > 0 ? 'ONUS OFFLINE' : ''} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupEquipamentos;\r\n","import React, { useState } from 'react';\r\nimport Popup from './Popup';\r\nimport PopupIframe from './PopupIframe';\r\nimport PopupEquipamentos from './PopupEquipamentos';\r\nimport './LinkItem.css';\r\n\r\nconst LinkItem = ({ url, imgSrc, altText, text, popupText, isIframe, isEquipamentos }) => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [showIframePopup, setShowIframePopup] = useState(false);\r\n  const [showEquipamentosPopup, setShowEquipamentosPopup] = useState(false);\r\n  const [hideTimeout, setHideTimeout] = useState(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (popupText || isEquipamentos) {\r\n      if (hideTimeout) {\r\n        clearTimeout(hideTimeout); // Limpa o timeout se o mouse entrar novamente\r\n      }\r\n      setShowPopup(true);\r\n      if (isEquipamentos) {\r\n        setShowEquipamentosPopup(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (popupText || isEquipamentos) {\r\n      const timeout = setTimeout(() => {\r\n        setShowPopup(false);\r\n        setShowEquipamentosPopup(false);\r\n      }, 2000); // Tempo em milissegundos para o popup desaparecer após o mouse sair\r\n      setHideTimeout(timeout);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault(); // Previne o comportamento padrão do link\r\n    if (isIframe) {\r\n      setShowIframePopup(true); // Exibe o popup do iframe se isIframe for verdadeiro\r\n    } else {\r\n      window.open(url, '_blank', 'noopener noreferrer'); // Abre o link em uma nova guia\r\n    }\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n    if (hideTimeout) {\r\n      clearTimeout(hideTimeout); // Limpa o timeout se o popup for fechado manualmente\r\n    }\r\n  };\r\n\r\n  const closeIframePopup = () => {\r\n    setShowIframePopup(false);\r\n  };\r\n\r\n  const closeEquipamentosPopup = () => {\r\n    setShowEquipamentosPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"link-item-container\">\r\n      <div\r\n        className=\"link-item\"\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <a href={url} onClick={handleClick} rel=\"noopener noreferrer\">\r\n          <img src={imgSrc} alt={altText} />\r\n          <p>{text}</p>\r\n        </a>\r\n      </div>\r\n      {showPopup && <Popup text={popupText} closePopup={closePopup} />}\r\n      {showIframePopup && <PopupIframe url={url} closePopup={closeIframePopup} />}\r\n      {showEquipamentosPopup && <PopupEquipamentos closePopup={closeEquipamentosPopup} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkItem;\r\n","import React from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport LinkItem from '../components/LinkItem';\r\nimport './styles/MaxFibra.css';\r\n\r\nconst accessPermissions = {\r\n  Administrador: ['IXC', 'IXCMapas','IXCService','IXCAcs',  'R8Rastreadores', 'OpaSuite', 'CredLocaliza', 'Canva', 'Gmail', 'Trello', 'SmartOLT','Grafana', 'Dpv-Vendas', 'Secullum', 'CredLocaliza', 'PLayHUB', 'Totem', 'Playhub-biblioteca'],\r\n  Desenvolvedor: ['IXC', 'IXCMapas','IXCService','IXCAcs',  'R8Rastreadores', 'OpaSuite', 'CredLocaliza', 'Canva', 'Gmail', 'Trello', 'SmartOLT','Grafana', 'Dpv-Vendas', 'Secullum', 'CredLocaliza', 'PLayHUB', 'Totem', 'Playhub-biblioteca'],\r\n  Financeiro: ['IXC', 'IXCMapas','IXCService','IXCAcs',  'Secullum', 'OpaSuite', 'CredLocaliza', 'Canva', 'Gmail', 'Trello', 'SmartOLT', 'OpaSuite', 'CredLocaliza','SSA'],\r\n  Vendedor: ['Canva', 'Gmail', 'Trello'],\r\n};\r\n\r\nconst MaxFibra = ({ userProfile }) => {\r\n  // Acessando o cargo do usuário\r\n  const cargo = userProfile?.Cargo1;\r\n  console.log('User Profile',userProfile);\r\n\r\n  // Verifique se o cargo está corretamente definido\r\n  if (!userProfile || !cargo) {\r\n    console.error(\"Erro: Cargo não está definido ou userProfile é inválido:\", userProfile);\r\n    return <p>Erro: Perfil de usuário inválido.</p>;\r\n  }\r\n\r\n  const sections = [\r\n    {\r\n      title: 'Programas IXC',\r\n      links: [\r\n        { id: 'IXC', url: 'https://ixc.maxfibraltda.com.br/adm.php', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/IXC-PROVEDOR.png', altText: 'IXC', text: 'IXC', popupText: 'Para acessar esse atalho é <br>necessário fazer <strong> <a href=\"https://ixc.maxfibraltda.com.br/adm.php\" target=\"_blank\" rel=\"noopener noreferrer\">Login</a></strong>'},\r\n        { id: 'IXCMapas', url: 'https://ixc.maxfibraltda.com.br/mapas.php?mode=fiber', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/IXC-IMAP.png', altText: 'IXC - FiberDocs', text: 'IXC - Imap' },\r\n        { id: 'IXCService', url: 'https://ixc.maxfibraltda.com.br/mapas.php?mode=service', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/IXC-SERVICE.png', altText: 'IXC - Service', text: 'IXC - Service' },\r\n        { id: 'IXCAcs', url: 'https://acs.maxfibraltda.com.br/', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/PRO-1-1.gif', altText: 'IXC - ACS', text: 'IXC - ACS' },\r\n      ],\r\n    }, //PROGRAMA ANALISE E MONITORAMENTO  =================\r\n    {\r\n      title: 'Analise e Monitoramento',\r\n      links: [\r\n            { id:'SmartOLT' ,url: 'https://grupomaxltda.smartolt.com/', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/SMART-OLT.png', altText: 'SMART-OLT', text: 'Smart-Olt'},\r\n            { id:'Grafana' , url: 'http://172.25.255.20:3000/login', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/Grafana.png', altText: 'GRAFANA',text: 'Grafana'  },\r\n            { id: 'R8Rastreadores', url: 'https://www.r8rastreadores.com.br/map', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/06/R8-RASTREIO-1.jpg', altText: 'R8 - RASTREIO', text: 'R8 Rastreadores' },\r\n          ],\r\n    },\r\n    //PROGRAMA ADMINISTRAÇÃO  ==========================\r\n    {\r\n      title: 'Administração e Controle',\r\n      links: [\r\n        { id:'Secullum' ,url: 'https://autenticador.secullum.com.br/Authorization?response_type=code&client_id=3&redirect_uri=https%3A%2F%2Fpontoweb.secullum.com.br%2FAuth', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/Secullum.png', altText: 'SECULLUM', text: 'Secullum - Ponto'},\r\n        { id:'CredLocaliza' ,url: 'https://credlocaliza.com.br/sistema/account/login',imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/CRED-LOCALIZA.jpg', altText: 'CredLocaliza', text: 'CredLocaliza' },\r\n        { id:'PLayHUB' ,url: 'https://www.playhub.com.br/APP/Login',imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/07/Copia-de-PRO.gif', altText: 'PlayHub', text: 'PlayHub' },\r\n        { id:'Totem' ,url: 'https://maxfibra.myog.io/admin/',imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/08/DATACAKE.png', altText: 'Area Administração - Totem', text: 'Area Administração - Totem' },\r\n      ],\r\n    },\r\n    //PROGRAMA PROGRAMAS UTEIS  ========================\r\n    {\r\n      title: 'Programas úteis',\r\n      links: [\r\n        { id:'Canva' ,url: 'https://www.canva.com/pt_br/',imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/Canva.png', altText: 'Canva',text: 'Canva', popupText: 'Para acessar esse atalho é <br> necessário está conectado em uma <br>conta do <strong>Grupo Max</strong>' },\r\n        { id:'Gmail' ,url: 'https://mail.google.com/mail',imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/gmail.png', altText: 'Gmail', text: 'Gmail' },\r\n        { id:'trello' ,url: 'https://trello.com/u/grupomax4/boards',imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/Trello.png', altText: 'Trello', text: 'Trello' },\r\n        { id:'Playhub-biblioteca' ,url: 'https://warnerbros.ent.box.com/s/ykklojfiaf7taxwfnwsdapsybbbxjrev',imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/PRO-3.gif',altText: 'Driver', text: 'Driver - PlayHub'},\r\n          ],\r\n    },\r\n    //PROGRAMA PROGRAMAS UTEIS  ========================\r\n  ];\r\n\r\n  // Filtrando os links com base no cargo do usuário\r\n  const filteredSections = sections.map((section) => ({\r\n    ...section,\r\n    links: section.links.filter((link) => accessPermissions[cargo]?.includes(link.id)),\r\n  }));\r\n\r\n  return (\r\n    <div className=\"max-fibra\">\r\n      <Sidebar />\r\n      <div className=\"content-max-fibra\">\r\n        {filteredSections.map((section, index) => (\r\n          <div key={index}>\r\n            <h2>{section.title}</h2>\r\n            <div className=\"link-container-max-fibra\">\r\n              {section.links.length > 0 ? (\r\n                section.links.map((link, idx) => (\r\n                  <LinkItem key={idx} {...link} />\r\n                ))\r\n              ) : (\r\n                <p>Sem Autorização</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaxFibra;\r\n","// src/firebaseConfig.js\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\"; // Para o Firestore\r\nimport { getStorage } from \"firebase/storage\"; // Para o Storage\r\n\r\n// Configurações do Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCy9jt4EMilBN677Dam8Gd7olePTVkk4xs\",\r\n  authDomain: \"area-administrativa---pc.firebaseapp.com\",\r\n  projectId: \"area-administrativa---pc\",\r\n  storageBucket: \"area-administrativa---pc.appspot.com\",\r\n  messagingSenderId: \"240808376953\",\r\n  appId: \"1:240808376953:web:68b63459fbfaed7b4e72a8\",\r\n  measurementId: \"G-TKRTWX0EXH\"\r\n};\r\n\r\n// Inicialize o Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Inicialize o Firestore e o Storage\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\n\r\nexport { db, storage };\r\n","import { doc, setDoc } from \"firebase/firestore\";\r\nimport axios from 'axios';\r\nimport { db } from './firebaseConfig';\r\n\r\nconst uploadCompaniesToFirebase = async (userProfile) => {\r\n  if (!userProfile) {\r\n    console.error('Nenhum perfil de usuário fornecido.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Solicita dados da API\r\n    const response = await axios.get('https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records', {\r\n      headers: {\r\n        'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n      },\r\n    });\r\n\r\n    const users = response.data.list;\r\n    const stringUserId = String(userProfile.id);\r\n\r\n    // Encontra o usuário específico na lista\r\n    const user = users.find(u => String(u.Id) === stringUserId);\r\n\r\n    if (user && user.empresa) {\r\n      // Divide a string de empresas em um array\r\n      const userCompanies = user.empresa.split(',').map(company => company.trim().toLowerCase());\r\n\r\n      // Salva ou atualiza as empresas no Firebase\r\n      await setDoc(doc(db, \"users\", stringUserId), {\r\n        companies: userCompanies,\r\n      }, { merge: true });\r\n\r\n      console.log(\"Empresas associadas ao usuário foram salvas no Firebase:\", userCompanies);\r\n    } else {\r\n      console.error('Usuário não tem empresas associadas ou não foi encontrado.');\r\n    }\r\n  } catch (error) {\r\n    console.error('Erro ao buscar ou salvar os dados do usuário:', error);\r\n  }\r\n};\r\n\r\nexport default uploadCompaniesToFirebase;\r\n","// src/pages/VirTelecom.js\r\n\r\nimport React from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport LinkItem from '../components/LinkItem';\r\nimport './styles/VirTelecom.css';\r\n\r\n// Definindo permissões de acesso com base no cargo do usuário\r\nconst accessPermissions = {\r\n  Administrador: ['ISP', 'PortalOperacional', 'OpaSuite', 'Chatwoot', 'DFV', 'ConsultaCPF', 'Canva', 'Trello'],\r\n  Financeiro: ['DFV', 'ConsultaCPF', 'Canva', 'Trello'],\r\n  Vendedor: ['OpaSuite', 'Chatwoot', 'Canva', 'Trello'],\r\n};\r\n\r\nconst VirTelecom = ({ userProfile }) => {\r\n  // Verifique se userProfile e Cargo1 estão corretamente definidos\r\n  const cargo = userProfile?.Cargo1 || userProfile?.cargo1 || userProfile?.Cargo;\r\n  if (!userProfile || !cargo) {\r\n    console.error(\"Erro: Cargo não está definido ou userProfile é inválido:\", userProfile);\r\n    return <p>Erro: Perfil de usuário inválido.</p>;\r\n  }\r\n\r\n  const sections = [\r\n    {\r\n      title: 'Programas Administração',\r\n      links: [\r\n        { id: 'ISP', url: 'https://vir.ispcloud.com.br', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/06/ISP-CLOUD.jpg', altText: 'ISP-Cloud', text: 'ISP' },\r\n        { id: 'PortalOperacional', url: 'https://portaloperacional.vtal.com.br/portal', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/07/PORTAL-VTAL.jpg', altText: 'Portal Operacional', text: 'Portal Operacional', popupText: 'Caso a Tela esteja em Branco <br>Clique <strong> <a href=\"https://portaloperacional.vtal.com.br/\" target=\"_blank\" rel=\"noopener noreferrer\">Login</a></strong>' },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Atendimento ao Publico',\r\n      links: [\r\n        { id: 'OpaSuite', url: 'https://vir.opasuite.com.br', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/06/OPA-VIR.jpg', altText: 'Opa! Suite', text: 'OpaSuite!' },\r\n        { id: 'Chatwoot', url: 'https://chatwoot.nexusnerds.com.br', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/06/PRO-1.gif', altText: 'Chatwoot', text: 'Chatwoot' },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Administração e Controle',\r\n      links: [\r\n        { id: 'DFV', url: 'https://app.powerbi.com/view?r=eyJrIjoiMjAzODkwOTQtOTRiOS00OGM0LTgzMzktOWE4YzZjNzdiNmUyIiwidCI6IjljZTY2NzI4LThmZmQtNDEzNS1hZTFkLTNiMmUyNjVlMjhlOSJ9', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/07/powerBI.jpg', altText: 'DFV', text: 'DFV', isIframe: true },\r\n        { id: 'ConsultaCPF', url: 'https://servicos.receita.fazenda.gov.br/Servicos/CPF/ConsultaSituacao/ConsultaPublica.asp', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/08/PRO.gif', altText: 'CPF CONSULTA', text: 'Consulta CPF' },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Programas úteis',\r\n      links: [\r\n        { id: 'Canva', url: 'https://www.canva.com/pt_br/', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/Canva.png', altText: 'Canva', text: 'Canva', popupText: 'Para acessar esse atalho é <br> necessário estar conectado em uma <br>conta do <strong>Grupo Max</strong>' },\r\n        { id: 'Trello', url: 'https://trello.com/u/grupomax4/boards', imgSrc: 'https://maxfibraltda.com.br/wp-content/uploads/2024/05/Trello.png', altText: 'Trello', text: 'Trello' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Filtrando os links com base no cargo do usuário\r\n  const filteredSections = sections.map((section) => ({\r\n    ...section,\r\n    links: section.links.filter((link) => accessPermissions[cargo]?.includes(link.id)),\r\n  }));\r\n\r\n  return (\r\n    <div className=\"home-virtelecom\">\r\n      <Sidebar />\r\n      <div className=\"content-virtelecom\">\r\n        {filteredSections.map((section, index) => (\r\n          <div key={index}>\r\n            <h2>{section.title}</h2>\r\n            <div className=\"link-container-virtelecom\">\r\n              {section.links.length > 0 ? (\r\n                section.links.map((link, idx) => (\r\n                  <LinkItem key={idx} {...link} />\r\n                ))\r\n              ) : (\r\n                <p>Sem Autorização</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirTelecom;\r\n","import React from 'react';\r\n\r\nconst ReisServices = () => {\r\n  return (\r\n    <div>\r\n      <h1>Reis Services</h1>\r\n      <p>Conteúdo da página Reis Services.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReisServices;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport MaxFibra from './MaxFibra'; // Corrigir caminho se necessário\r\nimport VirTelecom from './VirTelecom';\r\nimport ReisServices from './ReisServices';\r\nimport Contact from './Contact';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route path=\"/max-fibra\" element={<MaxFibra />} />\r\n          <Route path=\"/vir-telecom\" element={<VirTelecom />} />\r\n          <Route path=\"/reis-services\" element={<ReisServices />} />\r\n          <Route path=\"/contact\" element={<Contact />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Form, Input, Button, Typography, Select, Steps, DatePicker, message } from 'antd';\r\nimport InputMask from 'react-input-mask'; // Importar o react-input-mask\r\nimport 'antd/dist/reset.css'; // Importar os estilos do Ant Design\r\nimport './styles/Cadastro.css';\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst Cadastro = () => {\r\n  const [form] = Form.useForm();\r\n  const [currentStep, setCurrentStep] = React.useState(0);\r\n  const [formData, setFormData] = React.useState({});\r\n\r\n  const webhookUrl = 'https://webhook.nexusnerds.com.br/webhook/7b6905d3-0548-464a-a620-9bbdffe66b97';\r\n\r\n  const steps = [\r\n    {\r\n      title: 'Passo 1',\r\n      content: (\r\n        <div className=\"form-container\">\r\n          <Form.Item\r\n            name=\"NomeCompleto\"\r\n            label=\"Nome Completo\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu nome completo!' }]}\r\n          >\r\n            <Input placeholder=\"Digite seu nome completo\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"CPF_FISICO\"\r\n            label=\"CPF\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu CPF!' }]}\r\n          >\r\n            <InputMask mask=\"999.999.999-99\" placeholder=\"Digite seu CPF\">\r\n              {(inputProps) => <Input {...inputProps} />}\r\n            </InputMask>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"RG\"\r\n            label=\"RG\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu RG!' }]}\r\n          >\r\n            <Input placeholder=\"Digite seu RG\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"NASCIMENTO\"\r\n            label=\"Data de Nascimento\"\r\n            rules={[{ required: true, message: 'Por favor, insira sua data de nascimento!' }]}\r\n          >\r\n            <DatePicker placeholder=\"Selecione a data\" format=\"DD/MM/YYYY\" />\r\n          </Form.Item>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Passo 2',\r\n      content: (\r\n        <div className=\"form-container\">\r\n          <Form.Item\r\n            name=\"EMAIL_CONTATO\"\r\n            label=\"Email\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu email!' }]}\r\n          >\r\n            <Input placeholder=\"Digite seu email\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Tel_01\"\r\n            label=\"Telefone 1\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu telefone!' }]}\r\n          >\r\n            <InputMask mask=\"(99) 99999-9999\" placeholder=\"Digite seu telefone\">\r\n              {(inputProps) => <Input {...inputProps} />}\r\n            </InputMask>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Tel_02\"\r\n            label=\"Telefone 2\"\r\n            rules={[\r\n              { required: true, message: 'Por favor, insira seu telefone!' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('Tel_01') !== value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('O Telefone 2 não pode ser igual ao Telefone 1.'));\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <InputMask mask=\"(99) 99999-9999\" placeholder=\"Digite um segundo telefone (opcional)\">\r\n              {(inputProps) => <Input {...inputProps} />}\r\n            </InputMask>\r\n          </Form.Item>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Passo 3',\r\n      content: (\r\n        <div className=\"form-container\">\r\n          <Form.Item\r\n            name=\"Cidade\"\r\n            label=\"Cidade\"\r\n            rules={[{ required: true, message: 'Por favor, insira sua cidade!' }]}\r\n          >\r\n            <Input placeholder=\"Digite sua cidade\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Bairro\"\r\n            label=\"Bairro\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu bairro!' }]}\r\n          >\r\n            <Input placeholder=\"Digite seu bairro\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Endereco_Completo\"\r\n            label=\"End.: Completo\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu endereço!' }]}\r\n          >\r\n            <Input placeholder=\"Digite seu endereço completo\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"cep_residencia\"\r\n            label=\"CEP\"\r\n            rules={[{ required: true, message: 'Por favor, insira seu CEP!' }]}\r\n          >\r\n            <InputMask mask=\"99999-999\" placeholder=\"Digite seu CEP\">\r\n              {(inputProps) => <Input {...inputProps} />}\r\n            </InputMask>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"n_residencia\"\r\n            label=\"Nª da Residência\"\r\n            rules={[{ required: true, message: 'Por favor, insira o número da residência!' }]}\r\n          >\r\n            <Input placeholder=\"Digite o número da residência\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"complemento\"\r\n            label=\"Complemento\"\r\n            rules={[{ required: false }]}\r\n          >\r\n            <Input placeholder=\"Digite o complemento (opcional)\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Referencia_Endereco\"\r\n            label=\"Ref.: de Endereço\"\r\n            rules={[{ required: false }]}\r\n          >\r\n            <Input placeholder=\"Digite a referência de endereço (opcional)\" />\r\n          </Form.Item>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Passo 4',\r\n      content: (\r\n        <div className=\"form-container\">\r\n          <Form.Item\r\n            name=\"Plano_Selecionado\"\r\n            label=\"Plano Selecionado\"\r\n            rules={[{ required: true, message: 'Por favor, selecione um plano!' }]}\r\n          >\r\n            <Select placeholder=\"Selecione um plano\">\r\n              <Option value=\"17\">Turbo R$  99,90</Option>\r\n              <Option value=\"15\">Infinity R$ 169,90</Option>\r\n              <Option value=\"14\">Gold R$ 129,90</Option>\r\n              <Option value=\"13\">Retenção R$ 59,90</Option>\r\n              <Option value=\"23\">Streaming</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"streaming_Adicional\"\r\n            label=\"Streaming Adicional\"\r\n            rules={[{ required: false }]}\r\n          >\r\n            <Select placeholder=\"Selecione uma opção de streaming\">\r\n              <Option value=\"Streaming_Telas\">Streaming Telas</Option>\r\n              <Option value=\"Streaming_ChromeCast\">Streaming + ChomeCast</Option>\r\n              <Option value=\"Nao\">Não</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Data_Vencimento\"\r\n            label=\"Data de Vencimento\"\r\n            rules={[{ required: true, message: 'Por favor, insira a data de vencimento!' }]}\r\n          >\r\n            <Select placeholder=\"Selecione a data Vencimento\">\r\n              <Option value=\"5\">Dia 05</Option>\r\n              <Option value=\"10\">Dia 10</Option>\r\n              <Option value=\"20\">Dia 20</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Passo 5',\r\n      content: (\r\n        <div className=\"form-container\">\r\n          <Form.Item\r\n            name=\"vendedor\"\r\n            label=\"Vendedor\"\r\n            rules={[{ required: true, message: 'Por favor, insira o nome do vendedor!' }]}\r\n          >\r\n              <Select placeholder=\"Selecione o Vendedor\">\r\n              <Option value=\"Tatiara\">Tatiara Kister</Option>\r\n              <Option value=\"Fabio\">Fabio Morais</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const next = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        ...values,\r\n      }));\r\n      setCurrentStep((prev) => Math.min(prev + 1, steps.length - 1));\r\n      form.resetFields();\r\n    } catch (error) {\r\n      console.error('Erro ao validar os campos: ', error);\r\n    }\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrentStep((prev) => Math.max(prev - 1, 0));\r\n  };\r\n\r\n  const handleFinish = async (values) => {\r\n    try {\r\n      const completeData = { ...formData, ...values };\r\n\r\n      // Envia os dados para o webhook\r\n      const response = await fetch(webhookUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(completeData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        message.success('Dados enviados com sucesso!');\r\n      } else {\r\n        message.error('Falha ao enviar os dados. Tente novamente.');\r\n      }\r\n    } catch (error) {\r\n      message.error('Erro ao conectar com o webhook.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cadastro-container\">\r\n      <Title level={2}>Cadastro</Title>\r\n      <Steps current={currentStep} className=\"steps\">\r\n        {steps.map((step) => (\r\n          <Step key={step.title} title={step.title} />\r\n        ))}\r\n      </Steps>\r\n      <div className=\"steps-content\">\r\n        <Form\r\n          form={form}\r\n          onFinish={handleFinish}\r\n        >\r\n          {steps[currentStep].content}\r\n          <div className=\"steps-action\">\r\n            {currentStep > 0 && (\r\n              <Button type=\"default\" className=\"btn-prev\" onClick={prev}>\r\n                Voltar\r\n              </Button>\r\n            )}\r\n            {currentStep < steps.length - 1 && (\r\n              <Button type=\"primary\" className=\"btn-next\" onClick={next}>\r\n                Seguir\r\n              </Button>\r\n            )}\r\n            {currentStep === steps.length - 1 && (\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"btn-next\">\r\n                Concluir\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cadastro;\r\n","// src/pages/ConsultaCpf.js\r\n\r\nimport React from 'react';\r\nimport './styles/ConsultaCpf.css';// Importe o CSS para estilização\r\n\r\nconst ConsultaCpf = () => {\r\n  return (\r\n    <div className=\"consulta-cpf\">\r\n      <h1>Consulta CPF</h1>\r\n      <iframe \r\n        className=\"iframe-consulta\" \r\n        src=\"https://servicos.receita.fazenda.gov.br/Servicos/CPF/ConsultaSituacao/ConsultaPublica.asp\"\r\n        title=\"Consulta CPF\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ConsultaCpf;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Card, Typography, Alert } from 'antd';\r\nimport axios from 'axios';\r\nimport './styles/ConsultaCnpj.css';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst ConsultaCnpj = () => {\r\n  const [cnpj, setCnpj] = useState('');\r\n  const [companyData, setCompanyData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async () => {\r\n    setError('');\r\n\r\n    const cleanedCnpj = cnpj.replace(/[^\\d]+/g, '');\r\n\r\n    if (cleanedCnpj.length !== 14) {\r\n      setError('Por favor, insira um CNPJ válido com 14 dígitos.');\r\n      return;\r\n    }\r\n\r\n    await fetchCompanyData(cleanedCnpj);\r\n  };\r\n\r\n  const fetchCompanyData = async (cnpj) => {\r\n    try {\r\n      const proxyUrl = 'https://api.allorigins.win/raw?url=';\r\n      const apiUrl = `https://www.receitaws.com.br/v1/cnpj/${cnpj}`;\r\n      const response = await axios.get(proxyUrl + encodeURIComponent(apiUrl));\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(`Erro na resposta da API: ${response.status} ${response.statusText}`);\r\n      }\r\n\r\n      const data = response.data;\r\n\r\n      if (data.status === 'ERROR') {\r\n        throw new Error(data.message || 'Erro desconhecido');\r\n      }\r\n\r\n      setCompanyData(data);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar dados:', error);\r\n      setError(error.message);\r\n      setCompanyData(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"consulta-cnpj-container\">\r\n<Card style={{ maxWidth: 800, width: '100%', padding: '20px', borderRadius: '8px' }}>\r\n\r\n<Title level={3}>Consulta de CNPJ</Title>\r\n        <Form layout=\"vertical\" onFinish={handleSubmit}>\r\n          <Form.Item\r\n            label=\"Digite o CNPJ\"\r\n            validateStatus={error ? \"error\" : \"\"}\r\n            help={error || \"\"}\r\n          >\r\n            <Input\r\n              value={cnpj}\r\n              onChange={(e) => setCnpj(e.target.value)}\r\n              placeholder=\"00.000.000/0000-00\"\r\n              maxLength={18}\r\n            />\r\n          </Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            Consultar\r\n          </Button>\r\n        </Form>\r\n\r\n        {companyData && (\r\n          <div className=\"company-data\">\r\n            <Title level={4}>{companyData.nome}</Title>\r\n            <p><Text strong>CNPJ:</Text> {companyData.cnpj}</p>\r\n            <p><Text strong>Abertura:</Text> {companyData.abertura}</p>\r\n            <p><Text strong>Situação:</Text> {companyData.situacao}</p>\r\n            <p><Text strong>Tipo:</Text> {companyData.tipo}</p>\r\n            <p><Text strong>Porte:</Text> {companyData.porte}</p>\r\n            <p><Text strong>Natureza Jurídica:</Text> {companyData.natureza_juridica}</p>\r\n            <p><Text strong>Atividade Principal:</Text> {companyData.atividade_principal[0].text} ({companyData.atividade_principal[0].code})</p>\r\n            <p><Text strong>Endereço:</Text> {companyData.logradouro}, {companyData.numero} {companyData.complemento}, {companyData.bairro}, {companyData.municipio} - {companyData.uf}, CEP: {companyData.cep}</p>\r\n            <p><Text strong>Telefone:</Text> {companyData.telefone}</p>\r\n            <p><Text strong>Última Atualização:</Text> {new Date(companyData.ultima_atualizacao).toLocaleString()}</p>\r\n            <Title level={5}>Quadro de Sócios e Administradores:</Title>\r\n            <ul>\r\n              {companyData.qsa.map(person => (\r\n                <li key={person.nome}>{person.nome} - {person.qual}</li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"footer\">\r\n              <Text strong>Consulta realizada em:</Text> {new Date().toLocaleString()} - <Text strong>by Jota</Text>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <Alert message=\"Erro\" description={error} type=\"error\" showIcon style={{ marginTop: 20 }} />\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConsultaCnpj;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, Input, Button, Card, Typography, message } from 'antd';\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport { getDoc, doc, onSnapshot } from 'firebase/firestore';\r\nimport { db } from '../firebaseConfig';\r\nimport './styles/Login.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [background, setBackground] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Função que gera a saudação baseada na hora do dia\r\n  const getGreetingMessage = (username) => {\r\n    const currentHour = new Date().getHours();\r\n    let greeting;\r\n\r\n    if (currentHour < 12) {\r\n      greeting = 'Bom dia';\r\n    } else if (currentHour < 18) {\r\n      greeting = 'Boa tarde';\r\n    } else {\r\n      greeting = 'Boa noite';\r\n    }\r\n\r\n    return `${greeting}, ${username}! Bem-vindo(a) de volta!`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchBackground = async () => {\r\n      try {\r\n        const docRef = doc(db, 'appConfig', 'loginBackground');\r\n        const unsubscribe = onSnapshot(docRef, (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            const data = snapshot.data();\r\n            setBackground(data.backgroundUrl);\r\n            console.log('Background atualizado:', data.backgroundUrl);\r\n          } else {\r\n            console.log('Nenhuma configuração de fundo encontrada.');\r\n          }\r\n        });\r\n\r\n        return () => unsubscribe();\r\n      } catch (error) {\r\n        console.error('Erro ao carregar o fundo:', error);\r\n      }\r\n    };\r\n\r\n    fetchBackground();\r\n  }, []);\r\n\r\n  const updateOnlineStatus = async (user, isOnline) => {\r\n    try {\r\n      const now = dayjs().format('YYYY-MM-DD HH:mm:ss');\r\n      const userData = {\r\n        Id: user.id,\r\n        name: user.name,\r\n        email: user.email,\r\n        password: user.password,\r\n        Cargo1: user.Cargo1,\r\n        username: user.username,\r\n        profilePicUrl: user.profilePic,\r\n        isOnline: isOnline,\r\n        lastActiveAt: now,\r\n      };\r\n\r\n      console.log('Atualizando status para:', userData);\r\n\r\n      const response = await axios.patch(\r\n        'https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records',\r\n        userData,\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log('Resposta da API ao atualizar status:', response.data);\r\n    } catch (error) {\r\n      console.error(`Erro ao atualizar o status ${isOnline ? 'online' : 'offline'}:`, error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n        const { data } = await axios.get('https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records', {\r\n            params: {\r\n                where: `(username,eq,${values.username})`,\r\n            },\r\n            headers: {\r\n                'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n            },\r\n        });\r\n\r\n        console.log('Dados retornados do NocoDB:', data);\r\n\r\n        if (data.list.length > 0) {\r\n            const user = data.list[0];\r\n            if (user.password === values.password) {\r\n                const userProfile = {\r\n                    id: user.Id, // Certifique-se de que \"Id\" está correto\r\n                    name: user.name || user.username,\r\n                    email: user.email,\r\n                    profilePic: user.profilePicUrl,\r\n                    Cargo1: user.Cargo1,\r\n                    empresa: user.empresa,\r\n                };\r\n\r\n                console.log('userProfile criado:', userProfile);\r\n\r\n                await updateOnlineStatus(userProfile, true); // Atualiza o status para online\r\n                onLogin(userProfile); // Passa os dados do usuário para o componente pai\r\n\r\n                // Adiciona a saudação aqui\r\n                const greetingMessage = getGreetingMessage(userProfile.name || userProfile.username);\r\n                message.success(greetingMessage);\r\n\r\n                navigate('/home');\r\n            } else {\r\n                message.error('Senha incorreta.');\r\n            }\r\n        } else {\r\n            message.error('Usuário não encontrado.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Erro na autenticação:', error);\r\n        message.error('Erro na autenticação.');\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\n\r\n  const handleLogout = async (user) => {\r\n    try {\r\n      console.log('Fazendo logout do usuário:', user);\r\n      await updateOnlineStatus(user, false); // Atualiza o status para offline\r\n    } catch (error) {\r\n      console.error('Erro ao atualizar o status offline:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('beforeunload', () => handleLogout(onLogin()));\r\n    return () => {\r\n      window.removeEventListener('beforeunload', () => handleLogout(onLogin()));\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\" style={{ backgroundImage: `url(${background})`, backgroundSize: 'cover', backgroundPosition: 'center' }}>\r\n      <div className=\"login-form-wrapper\">\r\n        <Card style={{ maxWidth: 400, margin: 'auto', padding: 20 }}>\r\n          <Title level={3} style={{ textAlign: 'center' }}>Login</Title>\r\n          <Form layout=\"vertical\" onFinish={handleLogin}>\r\n            <Form.Item\r\n              label=\"Usuário\"\r\n              name=\"username\"\r\n              rules={[{ required: true, message: 'Por favor, insira seu usuário!' }]}\r\n            >\r\n              <Input placeholder=\"Digite seu usuário\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Senha\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: 'Por favor, insira sua senha!' }]}\r\n            >\r\n              <Input.Password placeholder=\"Digite sua senha\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n                Entrar\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useCallback, Suspense } from 'react';\r\nimport { Select, Spin } from 'antd';\r\nimport './styles/Home.css'; // Importando o CSS separado\r\n\r\nconst { Option } = Select;\r\n\r\n// Usando React.lazy para carregar os dashboards sob demanda\r\nconst AnaliseTecnicaDashboard = React.lazy(() => import('./AnaliseTecnicaDashboard'));\r\nconst CobrancaDashboard = React.lazy(() => import('./CobrancaDashboard'));\r\nconst FinanceiroDashboard = React.lazy(() => import('./FinanceiroDashboard'));\r\nconst OrdensServicoDashboard = React.lazy(() => import('./OrdensServicoDashboard'));\r\n\r\nconst Home = () => {\r\n  const [selectedDashboard, setSelectedDashboard] = useState('analiseTecnica');\r\n  const [refreshKey, setRefreshKey] = useState(0); // Usado para forçar a re-renderização\r\n  const [blockedClientsCount, setBlockedClientsCount] = useState(0); // Estado para o número de clientes bloqueados\r\n\r\n  // Efeito para reiniciar o dashboard automaticamente\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setRefreshKey((prevKey) => prevKey + 1); // Atualiza a chave de reinicialização, forçando a re-renderização\r\n    }, 60000); // Reinicia a cada 60 segundos\r\n\r\n    return () => clearInterval(interval); // Limpa o intervalo ao desmontar o componente\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch the blocked clients count when the component mounts\r\n    const fetchBlockedClientsCount = async () => {\r\n      try {\r\n        const response = await fetch('https://apidoixc.nexusnerds.com.br/Data/ClientesBloquados.json');\r\n        const data = await response.json();\r\n        setBlockedClientsCount(data.length); // Supondo que o JSON contém uma lista de clientes bloqueados\r\n      } catch (error) {\r\n        console.error('Erro ao buscar dados:', error);\r\n      }\r\n    };\r\n\r\n    fetchBlockedClientsCount();\r\n  }, []);\r\n\r\n  const getColorForBlockedClients = (total) => {\r\n    if (total > 50) {\r\n      return 'red';\r\n    } else if (total > 20) {\r\n      return 'orange';\r\n    } else {\r\n      return 'green';\r\n    }\r\n  };\r\n\r\n  const renderDashboard = useCallback(() => {\r\n    switch (selectedDashboard) {\r\n      case 'analiseTecnica':\r\n        return <AnaliseTecnicaDashboard key={refreshKey} />;\r\n      case 'cobranca':\r\n        return <CobrancaDashboard key={refreshKey} />;\r\n      case 'financeiro':\r\n        return <FinanceiroDashboard key={refreshKey} />;\r\n      case 'ordensServico':\r\n        return <OrdensServicoDashboard key={refreshKey} />;\r\n      default:\r\n        return <AnaliseTecnicaDashboard key={refreshKey} />;\r\n    }\r\n  }, [selectedDashboard, refreshKey]);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-selector\">\r\n        <h3>Selecione o Dashboard</h3>\r\n        <Select\r\n          defaultValue=\"analiseTecnica\"\r\n          style={{ width: 200 }}\r\n          onChange={(value) => setSelectedDashboard(value)}\r\n        >\r\n          <Option value=\"analiseTecnica\">Análise Técnica</Option>\r\n          <Option value=\"cobranca\">\r\n            Cobrança\r\n            <span \r\n              className=\"blinking-dot\"\r\n              style={{\r\n                display: 'inline-block',\r\n                width: '6px',\r\n                height: '6px',\r\n                borderRadius: '50%',\r\n                backgroundColor: getColorForBlockedClients(blockedClientsCount),\r\n                marginLeft: '10px'\r\n              }}\r\n            />\r\n          </Option>\r\n          <Option value=\"financeiro\">Financeiro</Option>\r\n          <Option value=\"ordensServico\">Ordens de Serviço</Option>\r\n        </Select>\r\n      </div>\r\n      <div className=\"dashboard-content\">\r\n        {/* Suspense para exibir um carregador enquanto o dashboard é carregado */}\r\n        <Suspense fallback={<Spin size=\"large\" tip=\"Carregando dashboard...\" />}>\r\n          {renderDashboard()}\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Avatar, Dropdown, Menu, Badge, Button, message } from 'antd';\r\nimport { UserOutlined, LogoutOutlined, EditOutlined, UserAddOutlined, SettingOutlined, BellOutlined, AppstoreOutlined, SwapOutlined, SendOutlined, LaptopOutlined, FileTextOutlined, CheckCircleOutlined } from '@ant-design/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { db } from '../firebaseConfig';\r\nimport { doc, onSnapshot } from \"firebase/firestore\";\r\nimport axios from 'axios';\r\nimport uploadCompaniesToFirebase from '../uploadCompaniesToFirebase';\r\nimport './Header.css';\r\n\r\nconst Header = ({ userProfile, onLogout }) => {\r\n  const navigate = useNavigate();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [empresas, setEmpresas] = useState([]);\r\n  const [carregando, setCarregando] = useState(true);\r\n  const [erro, setErro] = useState(null);\r\n  const [selectedEmpresa, setSelectedEmpresa] = useState(null);\r\n\r\n  // Função para formatar a chave da empresa para uso na URL\r\n  const formatKey = (key) => {\r\n    return key\r\n      .toLowerCase()  // Converter para minúsculas\r\n      .replace(/\\s+/g, '-')  // Substituir espaços por hífens\r\n      .replace(/[^a-z0-9-]/g, '');  // Remover caracteres não alfanuméricos e hífens\r\n  };\r\n\r\n  const fetchEmpresas = () => {\r\n    if (!userProfile || !userProfile.id) {\r\n      console.error('UserID não está disponível.');\r\n      setErro(\"UserID não está disponível.\");\r\n      setCarregando(false);\r\n      return;\r\n    }\r\n\r\n    console.log(\"Iniciando a busca de empresas no Firebase para o usuário:\", userProfile.id);\r\n\r\n    const docRef = doc(db, \"users\", String(userProfile.id));\r\n\r\n    // Escuta em tempo real para mudanças no documento do Firebase\r\n    const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n      if (docSnap.exists()) {\r\n        const dados = docSnap.data();\r\n        console.log(\"Dados recuperados do documento Firebase:\", dados);\r\n\r\n        if (dados.companies && dados.companies.length > 0) {\r\n          console.log(\"Empresas encontradas:\", dados.companies);\r\n          setEmpresas(dados.companies);\r\n\r\n          // Define a empresa inicial como a primeira do array e redireciona\r\n          const primeiraEmpresa = dados.companies[0];\r\n          setSelectedEmpresa(primeiraEmpresa);\r\n          navigate(`/home/${formatKey(primeiraEmpresa)}`);\r\n        } else {\r\n          console.log(\"Nenhuma empresa encontrada no documento.\");\r\n          setEmpresas([]);\r\n        }\r\n      } else {\r\n        console.error('Nenhum documento encontrado para esse usuário.');\r\n        setErro('Nenhum documento encontrado para esse usuário.');\r\n      }\r\n      setCarregando(false);\r\n    }, (error) => {\r\n      console.error('Erro ao buscar dados do Firebase:', error);\r\n      setErro('Erro ao buscar dados do Firebase');\r\n      setCarregando(false);\r\n    });\r\n\r\n    // Limpeza da escuta quando o componente é desmontado\r\n    return () => {\r\n      console.log(\"Limpeza da escuta do Firebase.\");\r\n      unsubscribe();\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      if (userProfile) {\r\n        try {\r\n          const { data } = await axios.get('https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records', {\r\n            params: {\r\n              where: `(userId,eq,${userProfile.id})`,\r\n            },\r\n            headers: {\r\n              'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n            },\r\n          });\r\n          const unreadNotifications = data.list.filter(notification => !notification.isRead);\r\n          setNotifications(data.list);\r\n          setUnreadCount(unreadNotifications.length);\r\n        } catch (error) {\r\n          console.error('Erro ao buscar notificações:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n    const unsubscribeEmpresas = fetchEmpresas(); // Chama a função para buscar as empresas\r\n\r\n    // Chama a função para atualizar as empresas no Firebase\r\n    if (userProfile && userProfile.empresa) {\r\n      console.log(\"Chamando uploadCompaniesToFirebase\");\r\n      uploadCompaniesToFirebase(userProfile)\r\n        .then(() => console.log(\"Dados enviados para o Firebase\"))\r\n        .catch(error => console.error(\"Erro ao enviar dados para o Firebase:\", error));\r\n    }\r\n\r\n    // Limpeza da escuta quando o componente é desmontado\r\n    return () => {\r\n      if (unsubscribeEmpresas) unsubscribeEmpresas();\r\n    };\r\n  }, [userProfile]);\r\n\r\n  const markAsRead = async (notification) => {\r\n    try {\r\n      const updatedNotification = {\r\n        Id: notification.Id,\r\n        title: notification.title,\r\n        userId: notification.userId,\r\n        message: notification.message,\r\n        isRead: true,\r\n        createdAt_: notification.createdAt_,\r\n      };\r\n\r\n      const response = await axios.patch(\r\n        'https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records',\r\n        updatedNotification,\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        }\r\n      );\r\n\r\n      setNotifications(prev =>\r\n        prev.map(n => (n.Id === notification.Id ? { ...n, isRead: true } : n))\r\n      );\r\n      setUnreadCount(prev => prev - 1);\r\n    } catch (error) {\r\n      console.error('Erro ao marcar notificação como lida:', error);\r\n    }\r\n  };\r\n\r\n  const handleMenuClick = ({ key }) => {\r\n    switch (key) {\r\n      case 'editProfile':\r\n        navigate('/home/editar-perfil');\r\n        break;\r\n      case 'createUser':\r\n        navigate('/home/criar-usuario');\r\n        break;\r\n      case 'sendNotification':\r\n        navigate('/home/send-notification');\r\n        break;\r\n      case 'config':\r\n        navigate('/home/config');\r\n        break;\r\n      case 'manageShortcuts':\r\n        navigate('/home/gerenciar-atalhos');\r\n        break;\r\n      case 'usuariosOnline':\r\n        navigate('/home/usuarios-online');\r\n        break;\r\n      case 'notas':\r\n        navigate('/home/notas');\r\n        break;\r\n      case 'tarefas':\r\n        navigate('/home/tarefas');\r\n        break;\r\n      case 'monitorVPS':\r\n        navigate('/home/monitor-vps');\r\n        break;\r\n      case 'galeria':\r\n        navigate('/home/galeria');\r\n        break;\r\n      case 'logout':\r\n        onLogout();\r\n        break;\r\n      default:\r\n        // Formatar e navegar para caminhos dinâmicos\r\n        navigate(`/home/${formatKey(key)}`);\r\n        break;\r\n    }\r\n  };\r\n  \r\n  const empresasMenu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {carregando ? (\r\n        <Menu.Item disabled>Carregando empresas...</Menu.Item>\r\n      ) : (\r\n        empresas.length > 0 ? (\r\n          empresas.map((empresa) => (\r\n            <Menu.Item key={empresa}>\r\n              {empresa}\r\n            </Menu.Item>\r\n          ))\r\n        ) : (\r\n          <Menu.Item disabled>\r\n            Nenhuma empresa disponível\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  const deleteNotification = async (notification) => {\r\n    try {\r\n      await axios.delete(\r\n        'https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records',\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n          data: { Id: notification.Id },\r\n        }\r\n      );\r\n\r\n      setNotifications(prevNotifications =>\r\n        prevNotifications.filter(n => n.Id !== notification.Id)\r\n      );\r\n\r\n      setUnreadCount(prev => (prev > 0 ? prev - 1 : 0));\r\n      message.success('Notificação deletada com sucesso.');\r\n    } catch (error) {\r\n      console.error('Erro ao deletar notificação:', error);\r\n      message.error('Erro ao deletar a notificação.');\r\n    }\r\n  };\r\n\r\n  const notificationMenu = (\r\n    <Menu>\r\n      {notifications.length > 0 ? (\r\n        notifications.map(notification => (\r\n          <Menu.Item key={notification.Id} onClick={() => markAsRead(notification)}>\r\n            {notification.title} - {notification.message}\r\n            <Button type=\"link\" onClick={(e) => { e.stopPropagation(); deleteNotification(notification); }}>Deletar</Button>\r\n          </Menu.Item>\r\n        ))\r\n      ) : (\r\n        <Menu.Item>Você não tem notificações.</Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      <Menu.Item key=\"editProfile\" icon={<EditOutlined />}>\r\n        Editar Perfil\r\n      </Menu.Item>\r\n      {(userProfile.Cargo1 === 'Administrador' || userProfile.Cargo1 === 'Desenvolvedor') && (\r\n        <>\r\n          <Menu.Item key=\"createUser\" icon={<UserAddOutlined />}>\r\n            Criar Usuário\r\n          </Menu.Item>\r\n          <Menu.Item key=\"sendNotification\" icon={<SendOutlined />}>\r\n            Enviar Notificação\r\n          </Menu.Item>\r\n          <Menu.Item key=\"usuariosOnline\" icon={<UserOutlined />}>\r\n            Usuários Online\r\n          </Menu.Item>\r\n        </>\r\n      )}\r\n      {userProfile.Cargo1 === 'Desenvolvedor' && (\r\n        <>\r\n          <Menu.Item key=\"config\" icon={<SettingOutlined />}>\r\n            Configurações\r\n          </Menu.Item>\r\n          <Menu.Item key=\"monitorVPS\" icon={<LaptopOutlined />}>\r\n            Monitor VPS\r\n          </Menu.Item>\r\n          <Menu.Item key=\"galeria\" icon={<AppstoreOutlined />}>\r\n            Galeria\r\n          </Menu.Item>\r\n        </>\r\n      )}\r\n      <Menu.Item key=\"notas\" icon={<FileTextOutlined />}>\r\n        Notas\r\n      </Menu.Item>\r\n      <Menu.Item key=\"tarefas\" icon={<CheckCircleOutlined />}>\r\n        Tarefas\r\n      </Menu.Item>\r\n      <Menu.Item key=\"manageShortcuts\" icon={<AppstoreOutlined />}>\r\n        Atalhos Pessoais\r\n      </Menu.Item>\r\n      <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\r\n        Sair\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-left\">\r\n        <div className=\"user-info\">\r\n          <span>{userProfile.name}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Dropdown overlay={notificationMenu} placement=\"bottomRight\" trigger={['click']}>\r\n          <div className=\"notification-icon\">\r\n            <Badge count={unreadCount} className=\"notification-count\">\r\n              <BellOutlined style={{ fontSize: '24px', cursor: 'pointer' }} />\r\n            </Badge>\r\n          </div>\r\n        </Dropdown>\r\n        <Dropdown overlay={empresasMenu} placement=\"bottomRight\" trigger={['click']}>\r\n          <div className=\"switch-icon\">\r\n            {selectedEmpresa ? (\r\n              <span>{selectedEmpresa}</span>\r\n            ) : (\r\n              <SwapOutlined style={{ fontSize: '24px', cursor: 'pointer' }} />\r\n            )}\r\n          </div>\r\n        </Dropdown>\r\n        <Dropdown overlay={menu} placement=\"bottomRight\" trigger={['click']}>\r\n          <Avatar\r\n            size={48}\r\n            src={userProfile.profilePic || null}\r\n            icon={!userProfile.profilePic && <UserOutlined />}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// src/components/UploadImage.js\r\nimport React, { useState } from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from '../firebaseConfig'; // Importe sua configuração\r\n\r\nconst UploadImage = ({ onImageUpload }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleUpload = async ({ file }) => {\r\n    setUploading(true);\r\n    const storageRef = ref(storage, `images/${file.name}`);\r\n\r\n    try {\r\n      // Faz o upload da imagem\r\n      await uploadBytes(storageRef, file);\r\n\r\n      // Obtém a URL da imagem armazenada\r\n      const url = await getDownloadURL(storageRef);\r\n      onImageUpload(url); // Passe a URL de volta ao componente pai ou faça o que precisar com ela\r\n      message.success('Imagem carregada com sucesso!');\r\n    } catch (error) {\r\n      message.error('Erro ao carregar a imagem.');\r\n      console.error('Erro ao carregar a imagem no Firebase:', error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Upload\r\n      customRequest={handleUpload}\r\n      showUploadList={false}\r\n    >\r\n      <Button icon={<UploadOutlined />} loading={uploading}>\r\n        Carregar Imagem\r\n      </Button>\r\n    </Upload>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","// src/components/EditarPerfil.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport axios from 'axios';\r\nimport UploadImage from './UploadImage'; // Importe o componente de upload\r\nimport './EditarPerfil.css';\r\n\r\nconst EditarPerfil = ({ userProfile, onProfileUpdate }) => {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userProfile && userProfile.id) {\r\n      // Buscar os dados do usuário com base no ID\r\n      axios\r\n        .get(`https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records/${userProfile.id}`, {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        })\r\n        .then((response) => {\r\n          const userData = response.data;\r\n          if (userData) {\r\n            form.setFieldsValue({\r\n              name: userData.name,\r\n              email: userData.email,\r\n              password: userData.password,\r\n              profilePicUrl: userData.profilePicUrl,\r\n              Cargo1: userData.Cargo1,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erro ao buscar dados do usuário:', error);\r\n          message.error('Erro ao buscar dados do usuário.');\r\n        });\r\n    } else {\r\n      message.error('ID do usuário não está definido.');\r\n    }\r\n  }, [userProfile, form]);\r\n\r\n  const handleImageUpload = (url) => {\r\n    form.setFieldsValue({ profilePicUrl: url });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    if (!userProfile || !userProfile.id) {\r\n      message.error('ID do usuário não está definido.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    axios\r\n      .patch(\r\n        `https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records`,\r\n        {\r\n          Id: userProfile.id,\r\n          email: values.email,\r\n          password: values.password,\r\n          Cargo1: values.Cargo1,\r\n          name: values.name,\r\n          profilePicUrl: values.profilePicUrl,\r\n        },\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        const updatedProfile = {\r\n          ...userProfile,\r\n          name: values.name,\r\n          email: values.email,\r\n          profilePic: values.profilePicUrl,\r\n        };\r\n        onProfileUpdate(updatedProfile);\r\n        message.success('Perfil atualizado com sucesso!');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao atualizar o perfil:', error);\r\n        message.error('Erro ao atualizar o perfil.');\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"editar-perfil-container\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={handleSubmit}\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          profilePicUrl: '',\r\n          Cargo1: '',\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Nome\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Por favor, insira seu nome!' }]}\r\n        >\r\n          <Input placeholder=\"Digite seu nome Completo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: 'Por favor, insira seu email!' }]}\r\n        >\r\n          <Input placeholder=\"Digite seu email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Senha\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Por favor, insira sua senha!' }]}\r\n        >\r\n          <Input.Password placeholder=\"Digite sua senha\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"URL da Foto de Perfil\"\r\n          name=\"profilePicUrl\"\r\n          rules={[{ required: false, message: 'Por favor, insira a URL da sua foto de perfil!' }]}\r\n        >\r\n          <Input placeholder=\"Digite a URL da sua foto de perfil\" disabled />\r\n        </Form.Item>\r\n        <Form.Item label=\"Upload de Foto\">\r\n          <UploadImage onImageUpload={handleImageUpload} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Cargo\"\r\n          name=\"Cargo1\"\r\n          rules={[{ required: true, message: 'Por favor, selecione seu cargo!' }]}\r\n        >\r\n          <Input value={userProfile.Cargo1} disabled />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n            Salvar Alterações\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditarPerfil;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Select, message } from 'antd';\r\nimport axios from 'axios';\r\nimport UploadImage from '../components/UploadImage'; // Importe o componente de upload\r\nimport './styles/CriarUsuario.css';\r\n\r\nconst CriarUsuario = () => {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [profilePicUrl, setProfilePicUrl] = useState('');\r\n\r\n  const handleImageUpload = (url) => {\r\n    setProfilePicUrl(url);\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    setLoading(true);\r\n\r\n    const payload = {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n      Cargo1: values.Cargo1,\r\n      username: values.username,\r\n      profilePicUrl: profilePicUrl,\r\n      empresa: values.empresa,\r\n    };\r\n\r\n    console.log('Payload enviado:', payload); // Adicione este log para inspecionar o payload\r\n\r\n    axios\r\n      .post(\r\n        'https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records',\r\n        payload,\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log('Resposta da API:', response.data); // Log da resposta da API\r\n        message.success('Usuário criado com sucesso!');\r\n        form.resetFields();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao criar usuário:', error.response?.data || error.message); // Log do erro detalhado\r\n        message.error('Erro ao criar usuário.');\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"criar-usuario-container\">\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={handleSubmit}\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          username: '',\r\n          Cargo1: '',\r\n          empresa: '', // Valor inicial para a seleção única de empresa\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Nome\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Por favor, insira o nome!' }]}\r\n        >\r\n          <Input placeholder=\"Digite o nome completo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: 'Por favor, insira o email!' }]}\r\n        >\r\n          <Input placeholder=\"Digite o email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Senha\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Por favor, insira a senha!' }]}\r\n        >\r\n          <Input.Password placeholder=\"Digite a senha\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Nome de Usuário (Login)\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Por favor, insira o nome de usuário!' }]}\r\n        >\r\n          <Input placeholder=\"Digite o nome de usuário\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Cargo\"\r\n          name=\"Cargo1\"\r\n          rules={[{ required: true, message: 'Por favor, selecione o cargo!' }]}\r\n        >\r\n          <Select placeholder=\"Selecione o cargo\">\r\n            <Select.Option value=\"Administrador\">Administrador</Select.Option>\r\n            <Select.Option value=\"Financeiro\">Financeiro</Select.Option>\r\n            <Select.Option value=\"Vendedor\">Vendedor</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Empresa\"\r\n          name=\"empresa\"\r\n          rules={[{ required: true, message: 'Por favor, selecione uma empresa!' }]}\r\n        >\r\n          <Select placeholder=\"Selecione a empresa\">\r\n            <Select.Option value=\"Max Fibra\">Max Fibra</Select.Option>\r\n            <Select.Option value=\"Vir Telecom\">Vir Telecom</Select.Option>\r\n            <Select.Option value=\"Reis Services\">Reis Services</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Upload de Foto\">\r\n          <UploadImage onImageUpload={handleImageUpload} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n            Criar Usuário\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CriarUsuario;\r\n","import { ref, uploadBytesResumable, getDownloadURL, deleteObject  } from 'firebase/storage';\r\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore'; // Certifique-se de importar getDoc e setDoc\r\nimport { storage, db } from './firebaseConfig';\r\n\r\n\r\n\r\n\r\n// Função para verificar e criar o documento do usuário no Firestore\r\nexport const ensureUserDocumentExists = async (userId) => {\r\n  const userDocRef = doc(db, 'users', String(userId));\r\n  const userDocSnap = await getDoc(userDocRef);\r\n\r\n  if (!userDocSnap.exists()) {\r\n    // Documento não existe, vamos criá-lo\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        companies: [] // ou qualquer estrutura inicial que você deseja\r\n      });\r\n      console.log(`Documento criado para o usuário ${userId}`);\r\n    } catch (error) {\r\n      console.error(`Erro ao criar documento para o usuário ${userId}:`, error);\r\n      throw error;\r\n    }\r\n  } else {\r\n    console.log(`Documento já existe para o usuário ${userId}`);\r\n  }\r\n};\r\n\r\n// Função para fazer upload de imagem no Firebase Storage\r\nexport const uploadImageToFirebase = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const storageRef = ref(storage, `images/${file.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      null,\r\n      (error) => {\r\n        console.error('Erro durante o upload da imagem:', error);\r\n        reject(error);\r\n      },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n          resolve(downloadURL);\r\n        }).catch((error) => {\r\n          console.error('Erro ao obter a URL de download:', error);\r\n          reject(error);\r\n        });\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\n// Função para salvar atalho no Firestore\r\nexport const saveShortcutToFirestore = async (userId, shortcutData) => {\r\n  try {\r\n    const docRef = await addDoc(collection(db, `users/${userId}/shortcuts`), shortcutData);\r\n    return docRef.id;\r\n  } catch (error) {\r\n    console.error(\"Erro ao salvar atalho no Firestore:\", error);\r\n    throw new Error(\"Erro ao salvar atalho no Firestore: \" + error.message);\r\n  }\r\n};\r\n\r\n// Função para obter atalhos do Firestore\r\nexport const getShortcutsFromFirestore = async (userId) => {\r\n  try {\r\n    const snapshot = await getDocs(collection(db, `users/${userId}/shortcuts`));\r\n    return snapshot.docs.map((doc) => ({\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"Erro ao obter atalhos do Firestore:\", error);\r\n    throw new Error(\"Erro ao obter atalhos do Firestore: \" + error.message);\r\n  }\r\n};\r\n\r\n// Função para editar um atalho no Firestore\r\nexport const editShortcutInFirestore = async (userId, shortcutId, updatedData) => {\r\n  try {\r\n    const docRef = doc(db, `users/${userId}/shortcuts`, shortcutId);\r\n    await updateDoc(docRef, updatedData);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Erro ao editar o atalho no Firestore:\", error);\r\n    throw new Error(\"Erro ao editar o atalho no Firestore: \" + error.message);\r\n  }\r\n};\r\n\r\n// Função para apagar um atalho do Firestore\r\nexport const deleteShortcutFromFirestore = async (userId, shortcutId) => {\r\n  try {\r\n    const docRef = doc(db, `users/${userId}/shortcuts`, shortcutId);\r\n    await deleteDoc(docRef);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Erro ao apagar o atalho no Firestore:\", error);\r\n    throw new Error(\"Erro ao apagar o atalho no Firestore: \" + error.message);\r\n  }\r\n};\r\n\r\n// Função para salvar a URL da imagem de fundo no Firestore\r\nexport const saveBackgroundConfig = async (backgroundUrl) => {\r\n  try {\r\n    await setDoc(doc(db, 'config', 'loginBackground'), { url: backgroundUrl });\r\n  } catch (error) {\r\n    throw new Error('Erro ao salvar configuração de fundo: ' + error.message);\r\n  }\r\n};\r\n\r\n// Função para obter a URL da imagem de fundo do Firestore\r\nexport const getBackgroundConfig = async () => {\r\n  try {\r\n    const docRef = doc(db, 'config', 'loginBackground');\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      return docSnap.data().url;\r\n    } else {\r\n      console.log('Nenhuma configuração de fundo encontrada.');\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    throw new Error('Erro ao obter configuração de fundo: ' + error.message);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const getMultiShortcutsFromFirestore = async (userId) => {\r\n  try {\r\n    const multiShortcutsRef = collection(db, 'users', userId, 'multiShortcuts');\r\n    const snapshot = await getDocs(multiShortcutsRef);\r\n    const multiShortcuts = snapshot.docs.map(doc => ({\r\n      id: doc.id,\r\n      ...doc.data()\r\n    }));\r\n    return multiShortcuts;\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar multi atalhos: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n// Função para obter imagens do Firestore\r\nexport const getImagesFromFirestore = async () => {\r\n  try {\r\n    const imagesRef = collection(db, 'galleryImages'); // Supondo que você tenha uma coleção chamada 'galleryImages'\r\n    const snapshot = await getDocs(imagesRef);\r\n    const images = snapshot.docs.map(doc => ({\r\n      id: doc.id,\r\n      url: doc.data().url, // A URL da imagem armazenada no Firestore\r\n      label: doc.data().label || `Imagem ${doc.id}` // Nome ou label da imagem\r\n    }));\r\n    return images;\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar imagens da galeria: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para salvar imagens na coleção 'galleryImages' com o nome\r\nexport const saveImageToFirestore = async (imageUrl, imageName) => {\r\n  try {\r\n    const docRef = await addDoc(collection(db, 'galleryImages'), { \r\n      url: imageUrl,\r\n      label: imageName // Salvando o nome da imagem no campo 'label'\r\n    });\r\n    return docRef.id;\r\n  } catch (error) {\r\n    console.error(\"Erro ao salvar imagem na galeria: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteImageFromFirestore = async (imageId, imageUrl) => {\r\n  try {\r\n    // Deleta o documento do Firestore\r\n    await deleteDoc(doc(db, 'galleryImages', imageId));\r\n\r\n    // Deleta a imagem do Firebase Storage\r\n    const storageRef = ref(storage, imageUrl);\r\n    await deleteObject(storageRef);\r\n\r\n  } catch (error) {\r\n    console.error(\"Erro ao apagar a imagem: \", error);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Modal, Input, Button, List, Card, Popconfirm, Select, Form, Upload, Tag, message } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport { \r\n    uploadImageToFirebase, \r\n    saveShortcutToFirestore, \r\n    getShortcutsFromFirestore, \r\n    editShortcutInFirestore, \r\n    deleteShortcutFromFirestore,\r\n    getImagesFromFirestore // Importa a função para buscar as imagens\r\n} from './firebaseUtils';\r\nimport { getMultiShortcutsFromFirestore, saveMultiShortcutToFirestore, deleteMultiShortcutFromFirestore, editMultiShortcutInFirestore } from './firebaseMultiShortcutUtils';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport { db } from './firebaseConfig';\r\n\r\nimport './GerenciarAtalhos.css';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst GerenciarAtalhos = ({ userProfile }) => {\r\n  const [form] = Form.useForm(); \r\n  const [loading, setLoading] = useState(false);\r\n  const [shortcuts, setShortcuts] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editingShortcut, setEditingShortcut] = useState(null);\r\n  const [isMultiShortcut, setIsMultiShortcut] = useState(false);\r\n  const [links, setLinks] = useState(['']);\r\n  const [imageSource, setImageSource] = useState(\"upload\"); \r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [predefinedImages, setPredefinedImages] = useState([]); // Estado para armazenar as imagens pré-definidas\r\n\r\n  const numAtalhos = shortcuts.length;\r\n\r\n  // Função para carregar as imagens pré-definidas do Firestore\r\n  const fetchPredefinedImages = async () => {\r\n    try {\r\n      const images = await getImagesFromFirestore();\r\n      const formattedImages = images.map(image => ({\r\n        value: image.url,\r\n        label: image.label\r\n      }));\r\n      setPredefinedImages(formattedImages);\r\n    } catch (error) {\r\n      message.error('Erro ao carregar as imagens: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPredefinedImages();\r\n  }, []);\r\n\r\n  const gridLayout = {\r\n    gutter: 24,\r\n    xs: 1,\r\n    sm: 2,\r\n    md: 2,\r\n    lg: 3,\r\n    xl: 3,\r\n    xxl: numAtalhos === 3 ? 3 : 2,\r\n  };\r\n\r\n  const fetchShortcuts = useCallback(async () => {\r\n    if (userProfile?.id) {\r\n      try {\r\n        const simpleShortcuts = await getShortcutsFromFirestore(userProfile.id);\r\n        console.log('Simple shortcuts fetched from Firebase:', simpleShortcuts);\r\n  \r\n        const multiShortcuts = await getMultiShortcutsFromFirestore(userProfile.id);\r\n        console.log('Multi shortcuts fetched from Firebase:', multiShortcuts);\r\n  \r\n        const combinedShortcuts = [...simpleShortcuts, ...multiShortcuts];\r\n        setShortcuts(combinedShortcuts);\r\n      } catch (error) {\r\n        message.error('Erro ao buscar atalhos: ' + error.message);\r\n      }\r\n    }\r\n  }, [userProfile?.id]);\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchShortcuts();\r\n  }, [fetchShortcuts]);\r\n\r\n  const handleMultiShortcutChange = (value) => {\r\n    setIsMultiShortcut(value === 'multi');\r\n    form.setFieldsValue({\r\n      url: '',\r\n      links: ['']\r\n    });\r\n  };\r\n\r\n  const handleLinkChange = (index, value) => {\r\n    const newLinks = [...links];\r\n    newLinks[index] = value;\r\n    setLinks(newLinks);\r\n  };\r\n  \r\n  const handleAddLink = () => {\r\n    setLinks([...links, '']);\r\n  };\r\n  \r\n\r\n  const resetFormFields = () => {\r\n    form.resetFields(); \r\n    setLinks(['']); \r\n    setIsMultiShortcut(false); \r\n    setImageSource('upload'); \r\n    setImageUrl(''); \r\n  };\r\n\r\n  const handleAddOrEditShortcut = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      let imageUrl = values.image;\r\n  \r\n      if (imageSource === 'upload' && values.image?.file?.originFileObj) {\r\n        imageUrl = await uploadImageToFirebase(values.image.file.originFileObj);\r\n      } else if (imageSource === 'predefined') {\r\n        imageUrl = values.predefinedImage;\r\n      } else if (imageSource === 'url') {\r\n        imageUrl = values.imageUrl;\r\n      }\r\n  \r\n      let newShortcut;\r\n  \r\n      if (isMultiShortcut) {\r\n        const multiShortcutData = {\r\n          links,\r\n          imgSrc: imageUrl,\r\n          altText: values.altText,\r\n          createdAt: new Date(),\r\n        };\r\n  \r\n        if (editingShortcut) {\r\n          const docRef = doc(db, `users/${userProfile.id}/multiShortcuts/${editingShortcut.id}`);\r\n          const docSnap = await getDoc(docRef);\r\n  \r\n          if (docSnap.exists()) {\r\n            console.log(\"Editando Multi Atalho com ID:\", editingShortcut.id);\r\n            await editMultiShortcutInFirestore(userProfile.id, editingShortcut.id, multiShortcutData);\r\n            message.success('Multi Atalho atualizado com sucesso!');\r\n            setShortcuts((prevShortcuts) =>\r\n              prevShortcuts.map((shortcut) =>\r\n                shortcut.id === editingShortcut.id ? { ...shortcut, ...multiShortcutData } : shortcut\r\n              )\r\n            );\r\n          } else {\r\n            message.error('Erro: O multi atalho que você está tentando editar não existe.');\r\n            setIsModalVisible(false);\r\n            return;\r\n          }\r\n        } else {\r\n          const newId = await saveMultiShortcutToFirestore(userProfile.id, multiShortcutData);\r\n          newShortcut = { id: newId, ...multiShortcutData };\r\n          setShortcuts((prevShortcuts) => [...prevShortcuts, newShortcut]);\r\n          message.success('Multi Atalho adicionado com sucesso!');\r\n        }\r\n      } else {\r\n        const shortcutData = {\r\n          url: values.url,\r\n          imgSrc: imageUrl,\r\n          altText: values.altText,\r\n          text: values.altText,\r\n        };\r\n  \r\n        if (editingShortcut) {\r\n          const docRef = doc(db, `users/${userProfile.id}/shortcuts/${editingShortcut.id}`);\r\n          const docSnap = await getDoc(docRef);\r\n  \r\n          if (docSnap.exists()) {\r\n            console.log(\"Editando Atalho com ID:\", editingShortcut.id);\r\n            await editShortcutInFirestore(userProfile.id, editingShortcut.id, shortcutData);\r\n            message.success('Atalho atualizado com sucesso!');\r\n            setShortcuts((prevShortcuts) =>\r\n              prevShortcuts.map((shortcut) =>\r\n                shortcut.id === editingShortcut.id ? { ...shortcut, ...shortcutData } : shortcut\r\n              )\r\n            );\r\n          } else {\r\n            message.error('Erro: O atalho que você está tentando editar não existe.');\r\n            setIsModalVisible(false);\r\n            return;\r\n          }\r\n        } else {\r\n          const newId = await saveShortcutToFirestore(userProfile.id, shortcutData);\r\n          newShortcut = { id: newId, ...shortcutData };\r\n          setShortcuts((prevShortcuts) => [...prevShortcuts, newShortcut]);\r\n          message.success('Atalho adicionado com sucesso!');\r\n        }\r\n      }\r\n  \r\n      setIsModalVisible(false);\r\n      setEditingShortcut(null);\r\n      resetFormFields(); \r\n    } catch (error) {\r\n      console.error('Erro ao salvar o atalho no Firestore:', error.message);\r\n      message.error('Erro ao salvar o atalho: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteShortcut = async (shortcutId, isMultiShortcut = false) => {\r\n    try {\r\n      if (isMultiShortcut) {\r\n        await deleteMultiShortcutFromFirestore(userProfile.id, shortcutId);\r\n      } else {\r\n        await deleteShortcutFromFirestore(userProfile.id, shortcutId);\r\n      }\r\n      message.success('Atalho excluído com sucesso!');\r\n      fetchShortcuts(); \r\n    } catch (error) {\r\n      message.error('Erro ao excluir o atalho: ' + error.message);\r\n    }\r\n  };\r\n\r\n// Função para abrir o modal de edição\r\nconst openEditModal = (shortcut) => {\r\n  setEditingShortcut(shortcut);\r\n  setIsModalVisible(true);\r\n\r\n  // Verifica se o atalho é do tipo Multi Atalho e se os links estão presentes\r\n  const isMulti = Array.isArray(shortcut.links) && shortcut.links.length > 0;\r\n  setIsMultiShortcut(isMulti);\r\n\r\n  // Log para verificar o conteúdo dos links recebidos do Firebase\r\n  console.log(\"Links recebidos do Firebase:\", shortcut.links);\r\n\r\n  // Define os links no estado, garantindo que estejam no formato correto\r\n  setLinks(isMulti ? shortcut.links : ['']);\r\n\r\n  // Atualiza os valores do formulário com os dados recebidos\r\n  const fieldsToSet = {\r\n      altText: shortcut.altText || '',\r\n      url: !isMulti ? shortcut.url : '', // Limpa a URL se for Multi Atalho\r\n      imageSource: 'upload', // Define a fonte de imagem padrão como 'upload'\r\n      imageUrl: shortcut.imgSrc || '', // Usa a URL da imagem existente\r\n      shortcutType: isMulti ? 'multi' : 'single', // Define o tipo de atalho\r\n  };\r\n\r\n  // Se for multi, precisamos setar os campos de links individualmente\r\n  if (isMulti) {\r\n      shortcut.links.forEach((link, index) => {\r\n          fieldsToSet[`link${index}`] = link;\r\n      });\r\n  }\r\n\r\n  form.setFieldsValue(fieldsToSet);\r\n};\r\n  \r\n  return (\r\n    <div className=\"gerenciar-atalhos\">\r\n      <div className=\"shortcut-list\">\r\n        <List\r\n          grid={gridLayout}\r\n          dataSource={shortcuts}\r\n          renderItem={(shortcut) => (\r\n            <List.Item className=\"atalho-item\">\r\n              <Card\r\n                hoverable\r\n                cover={<img alt={shortcut.altText} src={shortcut.imgSrc} />}\r\n                actions={[\r\n                  <EditOutlined key=\"edit\" onClick={() => openEditModal(shortcut)} />,\r\n                  <Popconfirm\r\n                    title=\"Tem certeza que deseja excluir este atalho?\"\r\n                    onConfirm={() => handleDeleteShortcut(shortcut.id, Array.isArray(shortcut.links))}\r\n                    okText=\"Sim\"\r\n                    cancelText=\"Não\"\r\n                  >\r\n                    <DeleteOutlined key=\"delete\" />\r\n                  </Popconfirm>,\r\n                ]}\r\n              >\r\n                <Card.Meta\r\n                  title={(\r\n                    <>\r\n                      {shortcut.altText || shortcut.text}\r\n                      {Array.isArray(shortcut.links) && shortcut.links.length > 0 && (\r\n                        <Tag color=\"green\" style={{ marginLeft: '8px' }}>\r\n                          Multi Atalho\r\n                        </Tag>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                  description={\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        if (Array.isArray(shortcut.links) && shortcut.links.length > 0) {\r\n                          shortcut.links.forEach((link) => window.open(link, '_blank'));\r\n                        } else {\r\n                          window.open(shortcut.url, '_blank');\r\n                        }\r\n                      }}\r\n                    >\r\n                      Acessar\r\n                    </a>\r\n                  }\r\n                />\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"circle\"\r\n        icon={<PlusOutlined />}\r\n        size=\"large\"\r\n        className=\"add-shortcut-btn\"\r\n        onClick={() => setIsModalVisible(true)}\r\n      />\r\n\r\n      <Modal\r\n        title={editingShortcut ? 'Editar Atalho' : 'Adicionar Atalho'}\r\n        visible={isModalVisible}\r\n        onCancel={() => {\r\n          setIsModalVisible(false);\r\n          setEditingShortcut(null);\r\n          resetFormFields(); \r\n        }}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form} \r\n          onFinish={handleAddOrEditShortcut}\r\n          layout=\"vertical\"\r\n          initialValues={editingShortcut || { url: '', altText: '', image: '' }}\r\n        >\r\n          <Form.Item\r\n            label=\"Título\"\r\n            name=\"altText\"\r\n            rules={[{ required: true, message: 'Por favor, insira o título!' }]}\r\n          >\r\n            <Input placeholder=\"Digite o título do atalho\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Fonte da Imagem\"\r\n            name=\"imageSource\"\r\n            rules={[{ required: true, message: 'Por favor, selecione a fonte da imagem!' }]}\r\n          >\r\n            <Select value={imageSource} onChange={setImageSource}>\r\n              <Option value=\"upload\">Carregar Imagem</Option>\r\n              <Option value=\"predefined\">Selecionar do Banco de Imagens</Option>\r\n              <Option value=\"url\">Inserir URL da Imagem</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          {imageSource === 'upload' && (\r\n            <Form.Item\r\n              label=\"Imagem\"\r\n              name=\"image\"\r\n              rules={[{ required: true, message: 'Por favor, insira a imagem do atalho!' }]}>\r\n              <Upload listType=\"picture\" maxCount={1} defaultFileList={editingShortcut ? [{ url: editingShortcut.imgSrc }] : []}>\r\n                <Button icon={<UploadOutlined />}>Carregar Imagem</Button>\r\n              </Upload>\r\n            </Form.Item>\r\n          )}\r\n\r\n          {imageSource === 'predefined' && (\r\n            <Form.Item\r\n              label=\"Imagem Predefinida\"\r\n              name=\"predefinedImage\"\r\n              rules={[{ required: true, message: 'Por favor, selecione uma imagem predefinida!' }]}>\r\n              <Select placeholder=\"Escolha uma imagem\">\r\n                {predefinedImages.map(image => (\r\n                  <Option key={image.value} value={image.value}>{image.label}</Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          )}\r\n\r\n          {imageSource === 'url' && (\r\n            <Form.Item\r\n              label=\"URL da Imagem\"\r\n              name=\"imageUrl\"\r\n              rules={[{ required: true, message: 'Por favor, insira a URL da imagem!' }]}>\r\n              <Input\r\n                placeholder=\"Digite a URL da imagem\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n\r\n          <Form.Item\r\n              label=\"Tipo de Atalho\"\r\n              name=\"shortcutType\"\r\n              rules={[{ required: true, message: 'Por favor, selecione o tipo de atalho!' }]}\r\n          >\r\n              <Select value={isMultiShortcut ? 'multi' : 'single'} onChange={handleMultiShortcutChange}>\r\n                  <Option value=\"single\">Atalho Único</Option>\r\n                  <Option value=\"multi\">Multi Atalho</Option>\r\n              </Select>\r\n          </Form.Item>\r\n\r\n          {isMultiShortcut ? (\r\n              <>\r\n                  {links.map((link, index) => (\r\n                      <Form.Item\r\n                          key={index}\r\n                          label={`Link ${index + 1}`}\r\n                          name={`link${index}`}\r\n                          rules={[{ required: true, message: `Por favor, insira o link ${index + 1}!` }]}\r\n                      >\r\n                          <Input\r\n                              placeholder={`Digite o link ${index + 1}`}\r\n                              value={link}\r\n                              onChange={(e) => handleLinkChange(index, e.target.value)}\r\n                          />\r\n                      </Form.Item>\r\n                  ))}\r\n                  <Button onClick={handleAddLink} style={{ marginTop: 10 }}>\r\n                      Adicionar Mais\r\n                  </Button>\r\n              </>\r\n          ) : (\r\n              <Form.Item\r\n                  label=\"URL\"\r\n                  name=\"url\"\r\n                  rules={[{ required: true, message: 'Por favor, insira a URL!' }]}\r\n              >\r\n                  <Input placeholder=\"Digite a URL do atalho\" />\r\n              </Form.Item>\r\n          )}\r\n\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\r\n            {editingShortcut ? 'Salvar Alterações' : 'Adicionar Atalho'}\r\n          </Button>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GerenciarAtalhos;\r\n","import { collection, getDocs, addDoc, deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from './firebaseConfig';\r\n\r\n// Função para salvar multi atalhos no Firestore\r\nexport const saveMultiShortcutToFirestore = async (userId, multiShortcutData) => {\r\n  try {\r\n    const docRef = await addDoc(collection(db, `users/${userId}/multiShortcuts`), multiShortcutData);\r\n    return docRef.id;\r\n  } catch (error) {\r\n    console.error(\"Erro ao salvar multi atalho no Firestore:\", error);\r\n    throw new Error(\"Erro ao salvar multi atalho no Firestore: \" + error.message);\r\n  }\r\n};\r\n\r\n\r\n// Função para buscar multi atalhos do Firestore\r\nexport const getMultiShortcutsFromFirestore = async (userId) => {\r\n    try {\r\n      const multiShortcutsRef = collection(db, `users/${userId}/multiShortcuts`);\r\n      const snapshot = await getDocs(multiShortcutsRef);\r\n      \r\n      // Adicione logs para verificar o conteúdo do snapshot\r\n      console.log(\"Snapshot de multi atalhos:\", snapshot);\r\n      \r\n      const multiShortcuts = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      \r\n      // Adicione logs para verificar os dados mapeados\r\n      console.log(\"Multi atalhos mapeados:\", multiShortcuts);\r\n      \r\n      return multiShortcuts;\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar multi atalhos: \", error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n\r\n// Função para editar multi atalhos no Firestore\r\nexport const editMultiShortcutInFirestore = async (userId, shortcutId, updatedData) => {\r\n  try {\r\n    const docRef = doc(db, `users/${userId}/multiShortcuts`, shortcutId);\r\n    await updateDoc(docRef, updatedData);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Erro ao editar multi atalho no Firestore:\", error);\r\n    throw new Error(\"Erro ao editar multi atalho no Firestore: \" + error.message);\r\n  }\r\n};\r\n\r\n// Função para deletar multi atalhos no Firestore\r\nexport const deleteMultiShortcutFromFirestore = async (userId, shortcutId) => {\r\n  try {\r\n    const multiShortcutRef = doc(db, `users/${userId}/multiShortcuts`, shortcutId);\r\n    await deleteDoc(multiShortcutRef);\r\n    console.log(`Multi Atalho ${shortcutId} deletado com sucesso.`);\r\n  } catch (error) {\r\n    console.error(\"Erro ao deletar multi atalho do Firestore:\", error);\r\n    throw new Error(\"Erro ao deletar multi atalho: \" + error.message);\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Upload, message, Card } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { uploadImageToFirebase } from '../firebaseUtils';\r\nimport { setDoc, doc } from 'firebase/firestore';\r\nimport { db } from '../firebaseConfig';\r\n\r\nconst ConfigScreen = ({ userProfile }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  if (userProfile?.Cargo1 !== 'Desenvolvedor') {\r\n    return <p>Acesso negado. Somente desenvolvedores podem acessar esta página.</p>;\r\n  }\r\n\r\n  const handleSaveBackground = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      let backgroundUrl = values.backgroundUrl;\r\n      if (values.image?.file?.originFileObj) {\r\n        backgroundUrl = await uploadImageToFirebase(values.image.file.originFileObj);\r\n      }\r\n\r\n      // Salva a URL no Firestore usando setDoc (cria ou atualiza o documento)\r\n      const configDocRef = doc(db, 'appConfig', 'loginBackground');\r\n      await setDoc(configDocRef, { backgroundUrl }, { merge: true });\r\n\r\n      message.success('Fundo da tela de login atualizado com sucesso!');\r\n    } catch (error) {\r\n      message.error('Erro ao atualizar o fundo da tela de login: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"config-screen-container\">\r\n      <Card style={{ maxWidth: 500, margin: 'auto' }}>\r\n        <h2>Configurações</h2>\r\n        <Form layout=\"vertical\" onFinish={handleSaveBackground}>\r\n          <Form.Item\r\n            label=\"URL da Imagem de Fundo\"\r\n            name=\"backgroundUrl\"\r\n            rules={[{ required: false, message: 'Por favor, insira a URL da imagem!' }]}\r\n          >\r\n            <Input placeholder=\"Digite a URL da imagem de fundo\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Ou Carregue uma Imagem\" name=\"image\">\r\n            <Upload listType=\"picture\" maxCount={1}>\r\n              <Button icon={<UploadOutlined />}>Carregar Imagem</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\r\n            Salvar Fundo\r\n          </Button>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, Select, Checkbox, message, Card } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nconst SendNotification = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const { data } = await axios.get('https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records', {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        });\r\n        setUsers(data.list);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar usuários:', error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleSendNotification = async (values) => {\r\n    try {\r\n      const notificationData = {\r\n        title: values.title,\r\n        message: values.message,\r\n        isRead: false,\r\n        createdAt_: null,\r\n      };\r\n\r\n      if (values.sendToAll) {\r\n        const userIds = users.map(user => user.Id);\r\n        await sendNotificationToUsers(userIds, notificationData);\r\n      } else {\r\n        await sendNotificationToUsers(values.userIds, notificationData);\r\n      }\r\n\r\n      message.success('Notificação enviada com sucesso!');\r\n      form.resetFields();\r\n    } catch (error) {\r\n      console.error('Erro ao enviar notificação:', error);\r\n      message.error('Erro ao enviar a notificação.');\r\n    }\r\n  };\r\n\r\n  const sendNotificationToUsers = async (userIds, notificationData) => {\r\n    for (const userId of userIds) {\r\n      await axios.post(\r\n        'https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records',\r\n        {\r\n          ...notificationData,\r\n          userId,\r\n        },\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>\r\n      <Card bordered={false} style={{ boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)', borderRadius: '8px' }}>\r\n        <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Enviar Notificação</h2>\r\n        <Form form={form} onFinish={handleSendNotification} layout=\"vertical\">\r\n          <Form.Item\r\n            label=\"Título\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: 'Por favor, insira o título da notificação.' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Mensagem\"\r\n            name=\"message\"\r\n            rules={[{ required: true, message: 'Por favor, insira a mensagem da notificação.' }]}\r\n          >\r\n            <Input.TextArea rows={4} />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"sendToAll\" valuePropName=\"checked\">\r\n            <Checkbox>Enviar para todos os usuários</Checkbox>\r\n          </Form.Item>\r\n\r\n          {!form.getFieldValue('sendToAll') && (\r\n            <Form.Item\r\n              label=\"Selecione os usuários\"\r\n              name=\"userIds\"\r\n              rules={[{ required: true, message: 'Por favor, selecione ao menos um usuário.' }]}\r\n            >\r\n              <Select mode=\"multiple\" placeholder=\"Selecione os usuários\">\r\n                {users.map(user => (\r\n                  <Option key={user.Id} value={user.Id}>\r\n                    {user.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          )}\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block style={{ backgroundColor: '#1890ff', borderColor: '#1890ff' }}>\r\n              Enviar Notificação\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendNotification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { List, Avatar, Card, Badge } from 'antd';\r\nimport './UsuariosOnline.css'; // Para adicionar estilos personalizados\r\n\r\nconst UsuariosOnline = () => {\r\n  const [usuarios, setUsuarios] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsuariosOnline = async () => {\r\n      try {\r\n        const { data } = await axios.get('https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records', {\r\n          params: {\r\n            where: `(isOnline,eq,true)`, // Filtra apenas os usuários que estão online\r\n          },\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        });\r\n        setUsuarios(data.list);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar usuários online:', error);\r\n      }\r\n    };\r\n\r\n    // Inicia a verificação a cada 3 segundos\r\n    const intervalId = setInterval(fetchUsuariosOnline, 3000);\r\n\r\n    // Limpa o intervalo ao desmontar o componente\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const getStatusIndicator = (isOnline) => {\r\n    return (\r\n      <Badge\r\n        status={isOnline ? 'success' : 'error'}\r\n        text={isOnline ? 'Online Agora' : 'Offline'}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"usuarios-online-container\">\r\n      <Card title=\"Usuários Online\" bordered={false}>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={usuarios}\r\n          renderItem={(user) => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={user.profilePicUrl || 'https://via.placeholder.com/150'} />}\r\n                title={\r\n                  <div className=\"user-title\">\r\n                    {user.name || user.username} {getStatusIndicator(user.isOnline)}\r\n                  </div>\r\n                }\r\n                description={\r\n                  <>\r\n                    <div className=\"last-active\">\r\n                      Última Atividade: {new Date(user.lastActiveAt).toLocaleString()}\r\n                    </div>\r\n                  </>\r\n                }\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsuariosOnline;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Card, Table, Row, Col, Form, Input, Select, Button } from 'antd';\r\nimport './styles/DetalhesDispositivos.css';\r\n\r\nconst { Option } = Select;\r\n\r\nconst DetalhesDispositivos = ({ userProfile }) => {\r\n  const [statusData, setStatusData] = useState({});\r\n  const [detalhes, setDetalhes] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const [statusSelecionado, setStatusSelecionado] = useState(null);\r\n\r\n  const isAdministradorOrDev = userProfile?.Cargo1 === 'Administrador' || userProfile?.Cargo1 === 'Desenvolvedor';\r\n\r\n  useEffect(() => {\r\n    if (!isAdministradorOrDev) {\r\n      navigate('/home'); // Redireciona se o usuário não tiver permissão\r\n    }\r\n  }, [isAdministradorOrDev, navigate]);\r\n\r\n  useEffect(() => {\r\n    const fetchStatusData = async () => {\r\n      try {\r\n        const { data } = await axios.get('https://apidoixc.nexusnerds.com.br/Data/Resultados_Status.json');\r\n        setStatusData(data.contagem);\r\n        setDetalhes(data.detalhes);\r\n        setFilteredData(data.detalhes); // Inicia com todos os dados sem filtro\r\n      } catch (error) {\r\n        console.error('Erro ao buscar os dados de status:', error);\r\n      }\r\n    };\r\n\r\n    fetchStatusData();\r\n  }, []);\r\n\r\n  const handleFilter = (values) => {\r\n    setStatusSelecionado(values.status); // Atualiza o status selecionado\r\n    const filtered = detalhes.filter((item) => {\r\n      return (\r\n        (values.status ? item.status === values.status : true) &&\r\n        (values.sn ? item.sn.toLowerCase().includes(values.sn.toLowerCase()) : true) &&\r\n        (values.port ? item.port === values.port : true) &&\r\n        (values.bairro ? item.bairro === values.bairro : true)\r\n      );\r\n    });\r\n    setFilteredData(filtered);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (text) => (\r\n        <span style={{ color: text === 'online' ? 'green' : text === 'desligado' ? 'orange' : 'red' }}>\r\n          {text === 'offline' ? 'Desligado' : text.charAt(0).toUpperCase() + text.slice(1)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'SN',\r\n      dataIndex: 'sn',\r\n      key: 'sn',\r\n    },\r\n    {\r\n      title: 'Porta',\r\n      dataIndex: 'port',\r\n      key: 'port',\r\n    },\r\n    {\r\n      title: 'Bairro',\r\n      dataIndex: 'bairro',\r\n      key: 'bairro',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"detalhes-dispositivos-container\">\r\n      <h2>\r\n        Detalhes dos Dispositivos \r\n        {statusSelecionado ? ` (${statusSelecionado.charAt(0).toUpperCase() + statusSelecionado.slice(1)} - ${filteredData.length})` : ''}\r\n      </h2>\r\n      <Form layout=\"inline\" form={form} onFinish={handleFilter} style={{ marginBottom: 20 }}>\r\n        <Form.Item name=\"status\" label=\"Status\">\r\n          <Select placeholder=\"Selecione o status\" allowClear style={{ width: 150 }}>\r\n            <Option value=\"online\">Online</Option>\r\n            <Option value=\"offline\">Desligado</Option>\r\n            <Option value=\"los\">Perda de Sinal (LOS)</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"sn\" label=\"SN\">\r\n          <Input placeholder=\"Digite o SN\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"port\" label=\"Porta\">\r\n          <Select placeholder=\"Selecione a Porta\" allowClear style={{ width: 100 }}>\r\n            {Array.from({ length: 13 }, (_, i) => i + 1).map((port) => (\r\n              <Option key={port} value={port}>\r\n                {port}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"bairro\" label=\"Bairro\">\r\n          <Select placeholder=\"Selecione o Bairro\" allowClear style={{ width: 300 }}>\r\n            <Option value=\"BAIRRO ARLINDO VILLASCHI 1-VILONE\">BAIRRO ARLINDO VILLASCHI 1-VILONE</Option>\r\n            <Option value=\"BAIRRO SOTECO\">BAIRRO SOTECO</Option>\r\n            <Option value=\"BAIRRO AREINHA\">BAIRRO AREINHA</Option>\r\n            <Option value=\"BAIRRO VALE DO SOL\">BAIRRO VALE DO SOL</Option>\r\n            <Option value=\"BAIRRO CAXIAS DO SUL\">BAIRRO CAXIAS DO SUL</Option>\r\n            <Option value=\"AV GURAPARI\">AV GURAPARI</Option>\r\n            <Option value=\"BAIRRO NOVA BETHANIA\">BAIRRO NOVA BETHANIA</Option>\r\n            <Option value=\"BAIRRO UNIVERSAL\">BAIRRO UNIVERSAL</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Filtrar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Card title=\"Detalhes dos Dispositivos\">\r\n            <Table\r\n              columns={columns}\r\n              dataSource={filteredData}\r\n              rowKey=\"sn\"\r\n              pagination={{ pageSize: 5 }}\r\n              scroll={{ x: true }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetalhesDispositivos;\r\n","import React, { useState, useEffect, useCallback, Suspense } from 'react';\r\nimport { Select, Spin } from 'antd';\r\nimport './styles/HomeDashboard.css'; // Importando o CSS separado\r\n\r\nconst { Option } = Select;\r\n\r\n// Usando React.lazy para carregar os dashboards sob demanda\r\nconst CanceladosDashboardVIRTELECOM = React.lazy(() => import('./CanceladosDashboardVIRTELECOM'));\r\nconst AtivosDashboardVIRTELECOM = React.lazy(() => import('./AtivosDashboardVIRTELECOM'));\r\nconst BloqueadosDashboardVIRTELECOM = React.lazy(() => import('./BloqueadosDashboardVIRTELECOM'));\r\nconst InativosDashboardVIRTELECOM = React.lazy(() => import('./InativosDashboardVIRTELECOM'));\r\n\r\nconst HomeDashboard = () => {\r\n  const [selectedDashboard, setSelectedDashboard] = useState('ativosVIRTELECOM');\r\n  const [refreshKey, setRefreshKey] = useState(0); // Usado para forçar a re-renderização\r\n\r\n  // Efeito para reiniciar o dashboard automaticamente\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      // Atualiza a chave de reinicialização, forçando a re-renderização\r\n      setRefreshKey((prevKey) => prevKey + 1);\r\n    }, 60000); // Reinicia a cada 60 segundos\r\n\r\n    return () => clearInterval(interval); // Limpa o intervalo ao desmontar o componente\r\n  }, []);\r\n\r\n  const renderDashboard = useCallback(() => {\r\n    switch (selectedDashboard) {\r\n      case 'canceladosVIRTELECOM':\r\n        return <CanceladosDashboardVIRTELECOM key={refreshKey} />;\r\n      case 'ativosVIRTELECOM':\r\n        return <AtivosDashboardVIRTELECOM key={refreshKey} />;\r\n      case 'bloqueadosVIRTELECOM':\r\n        return <BloqueadosDashboardVIRTELECOM key={refreshKey} />;\r\n      case 'inativosVIRTELECOM':\r\n        return <InativosDashboardVIRTELECOM key={refreshKey} />;\r\n      default:\r\n        return <CanceladosDashboardVIRTELECOM key={refreshKey} />;\r\n    }\r\n  }, [selectedDashboard, refreshKey]);\r\n\r\n  return (\r\n    <div className=\"dashboard-container-Virtelecom\">\r\n      <div className=\"dashboard-selector\">\r\n        <h3>Selecione o Dashboard</h3>\r\n        <Select\r\n          defaultValue=\"ativosVIRTELECOM\"\r\n          style={{ width: 200 }}\r\n          onChange={(value) => setSelectedDashboard(value)}\r\n        >\r\n\r\n          <Option value=\"ativosVIRTELECOM\">Ativos</Option>\r\n          <Option value=\"bloqueadosVIRTELECOM\">Bloqueados</Option>\r\n          <Option value=\"canceladosVIRTELECOM\">Cancelados</Option>\r\n          <Option value=\"inativosVIRTELECOM\">Inativos</Option>\r\n        </Select>\r\n      </div>\r\n      <div className=\"dashboard-content\">\r\n        {/* Suspense para exibir um carregador enquanto o dashboard é carregado */}\r\n        <Suspense fallback={<Spin size=\"large\" tip=\"Carregando dashboard...\" />}>\r\n          {renderDashboard()}\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeDashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Button, Modal, Input, Card, Typography } from 'antd';\r\nimport { addNote, getUserNotes, updateNote, deleteNote } from '../notesService';\r\nimport dayjs from 'dayjs';\r\nimport './Notes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Notes = ({ userProfile }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [notes, setNotes] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [currentNote, setCurrentNote] = useState(null);\r\n\r\n  const userId = userProfile.id;\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, [userId]);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const userNotes = await getUserNotes(userId);\r\n      setNotes(userNotes);\r\n    } catch (error) {\r\n      console.error(\"Erro ao recuperar notas:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddNote = async () => {\r\n    if (userId && title && content) {\r\n      try {\r\n        const currentDate = new Date();\r\n        await addNote(userId, title, content, currentDate);\r\n        setTitle(''); // Reseta o título após adicionar a nota\r\n        setContent(''); // Reseta o conteúdo após adicionar a nota\r\n        fetchNotes();\r\n      } catch (error) {\r\n        console.error(\"Erro ao adicionar nota: \", error);\r\n      }\r\n    } else {\r\n      console.error('Dados incompletos: userId, title, content são necessários.');\r\n    }\r\n  };\r\n\r\n  const showModal = (note) => {\r\n    setCurrentNote(note);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    setCurrentNote(null);\r\n  };\r\n\r\n  const handleUpdateNote = async () => {\r\n    if (currentNote) {\r\n      try {\r\n        let validExpirationDate = currentNote.expirationDate;\r\n  \r\n        // Verifica se a data está em um formato de timestamp (por exemplo, Firebase Timestamp)\r\n        if (validExpirationDate && validExpirationDate.seconds) {\r\n          validExpirationDate = new Date(validExpirationDate.seconds * 1000);\r\n        }\r\n  \r\n        // Verifica se validExpirationDate é uma instância válida de Date\r\n        if (!(validExpirationDate instanceof Date) || isNaN(validExpirationDate.getTime())) {\r\n          throw new Error('Invalid time value');\r\n        }\r\n  \r\n        const updatedNote = {\r\n          ...currentNote,\r\n          expirationDate: validExpirationDate,\r\n        };\r\n  \r\n        await updateNote(\r\n          updatedNote.id,\r\n          updatedNote.title,\r\n          updatedNote.content,\r\n          updatedNote.expirationDate\r\n        );\r\n        fetchNotes();\r\n        handleCancel();\r\n      } catch (error) {\r\n        console.error(\"Erro ao atualizar nota: \", error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteNote = async () => {\r\n    if (currentNote && currentNote.id) {\r\n      try {\r\n        await deleteNote(currentNote.id);\r\n        fetchNotes();\r\n        handleCancel();\r\n      } catch (error) {\r\n        console.error(\"Erro ao deletar nota: \", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderNewStatus = (creationDate) => {\r\n    const today = dayjs().startOf('day');\r\n    const noteDate = dayjs(creationDate.seconds * 1000).startOf('day');\r\n    return noteDate.isSame(today) ? 'Novo' : '';\r\n  };\r\n\r\n  const truncateText = (text, maxLength) => {\r\n    if (text.length <= maxLength) return text;\r\n    return text.substring(0, maxLength) + '...';\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes-container\">\r\n      <Title level={2}>Notas</Title>\r\n      <Card className=\"note-input-card\">\r\n        <Input\r\n          size=\"large\"\r\n          className=\"notes-input\"\r\n          value={title} // Usando o estado separado para criação\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Título\"\r\n        />\r\n        <ReactQuill\r\n          value={content} // Usando o estado separado para criação\r\n          onChange={setContent}\r\n          modules={{\r\n            toolbar: [\r\n              [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n              ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n              [{ 'color': [] }, { 'background': [] }],\r\n              [{ 'align': [] }],\r\n              ['link', 'image'],\r\n              ['clean']\r\n            ],\r\n            clipboard: {\r\n              matchVisual: false,\r\n            },\r\n          }}\r\n          formats={[\r\n            'header', 'font', 'list', 'bullet', 'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'color', 'background', 'align', 'link', 'image'\r\n          ]}\r\n          placeholder=\"Escreva sua nota aqui...\"\r\n          className=\"note-editor\"\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleAddNote}\r\n          className=\"add-note-button\"\r\n        >\r\n          Adicionar Nota\r\n        </Button>\r\n      </Card>\r\n\r\n      <Title level={3} style={{ marginTop: '30px', textAlign: 'center', color: '#2c3e50' }}>\r\n        Minhas Notas\r\n      </Title>\r\n      <div className=\"notes-list\">\r\n        {notes.map((item) => (\r\n          <Card\r\n            key={item.id}\r\n            className=\"note-card\"\r\n            title={item.title}\r\n            extra={<span style={{ color: 'orange' }}>{renderNewStatus(item.expirationDate)}</span>}\r\n          >\r\n            <div className=\"note-content\">\r\n              <div dangerouslySetInnerHTML={{ __html: truncateText(item.content, 100) }} />\r\n            </div>\r\n            <div className=\"note-footer\">\r\n              <Button type=\"link\" onClick={() => showModal(item)}>Ver Mais</Button>\r\n              <span>\r\n                {item.expirationDate\r\n                  ? dayjs(item.expirationDate.seconds * 1000).format('DD/MM/YYYY')\r\n                  : 'Sem data'}\r\n              </span>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      <Modal\r\n        title={currentNote?.title}\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          <Button key=\"delete\" danger onClick={handleDeleteNote}>\r\n            Deletar\r\n          </Button>,\r\n          <Button key=\"cancel\" onClick={handleCancel}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={handleUpdateNote}>\r\n            Atualizar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Input\r\n          value={currentNote?.title || ''}\r\n          onChange={(e) => setCurrentNote({ ...currentNote, title: e.target.value })}\r\n          placeholder=\"Título\"\r\n          style={{ marginBottom: 20 }}\r\n        />\r\n        <ReactQuill\r\n          value={currentNote?.content || ''}\r\n          onChange={(content) => setCurrentNote({ ...currentNote, content })}\r\n          modules={{\r\n            toolbar: [\r\n              [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n              ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n              [{ 'color': [] }, { 'background': [] }],\r\n              [{ 'align': [] }],\r\n              ['link', 'image'],\r\n              ['clean']\r\n            ],\r\n            clipboard: {\r\n              matchVisual: false,\r\n            },\r\n          }}\r\n          formats={[\r\n            'header', 'font', 'list', 'bullet', 'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'color', 'background', 'align', 'link', 'image'\r\n          ]}\r\n          placeholder=\"Escreva sua nota aqui...\"\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","// src/notesService.js\r\nimport { db } from './firebaseConfig';\r\nimport { collection, addDoc, getDocs, updateDoc, deleteDoc, doc, query, where } from 'firebase/firestore';\r\n\r\nexport const addNote = async (userId, title, content, expirationDate) => {\r\n    try {\r\n        const noteRef = await addDoc(collection(db, 'notes'), {\r\n            userId,\r\n            title,\r\n            content,\r\n            expirationDate: expirationDate ? new Date(expirationDate) : null,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n        });\r\n        return noteRef;\r\n    } catch (error) {\r\n        console.error(\"Erro ao adicionar nota ao Firestore: \", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getUserNotes = async (userId) => {\r\n    try {\r\n        const q = query(collection(db, 'notes'), where('userId', '==', userId));\r\n        const querySnapshot = await getDocs(q);\r\n        const notes = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n        return notes;\r\n    } catch (error) {\r\n        console.error(\"Erro ao recuperar notas do Firestore: \", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateNote = async (noteId, title, content, expirationDate) => {\r\n    try {\r\n        const noteRef = doc(db, 'notes', noteId);\r\n        await updateDoc(noteRef, {\r\n            title,\r\n            content,\r\n            expirationDate: expirationDate ? new Date(expirationDate) : null,\r\n            updatedAt: new Date(),\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Erro ao atualizar nota no Firestore: \", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deleteNote = async (noteId) => {\r\n    try {\r\n        const noteRef = doc(db, 'notes', noteId);\r\n        await deleteDoc(noteRef);\r\n    } catch (error) {\r\n        console.error(\"Erro ao deletar nota no Firestore: \", error);\r\n        throw error;\r\n    }\r\n};\r\n","import { db } from \"./firebaseConfig\";\r\nimport {\r\n  collection,\r\n  doc, // Adicione esta linha para corrigir o erro\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  getDocs,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\n// Função para adicionar uma tarefa a uma lista\r\nexport const addTaskToList = async (userId, title, description, timer, expirationDate, senderName, isSender, recipientNames) => {\r\n  const newTask = {\r\n    listId: userId,\r\n    title,\r\n    description,\r\n    expirationDate,\r\n    createdAt: new Date(),\r\n    completed: false,\r\n    senderName: senderName || 'Desconhecido', // Armazena o nome do remetente\r\n    isSender: isSender !== undefined ? isSender : true, // Armazena se o usuário é o remetente\r\n    recipientNames: recipientNames || 'Desconhecido' // Armazena os nomes dos destinatários\r\n  };\r\n\r\n  // Só adiciona o campo timer se ele não for undefined\r\n  if (timer !== undefined) {\r\n    newTask.timer = timer;\r\n  }\r\n\r\n  const docRef = await addDoc(collection(db, \"tasks\"), newTask);\r\n  return docRef.id;\r\n};\r\n\r\n\r\n// Função para buscar as tarefas de uma lista\r\nexport const getTasksFromList = async (listId) => {\r\n  const q = query(collection(db, \"tasks\"), where(\"listId\", \"==\", listId));\r\n  const querySnapshot = await getDocs(q);\r\n  const tasks = [];\r\n  querySnapshot.forEach((doc) => {\r\n    tasks.push({ id: doc.id, ...doc.data() });\r\n  });\r\n  return tasks;\r\n};\r\n\r\n// Função para atualizar uma tarefa\r\nexport const updateTask = async (taskId, updatedTaskData) => {\r\n  const taskRef = doc(db, \"tasks\", taskId);\r\n  await updateDoc(taskRef, updatedTaskData);\r\n};\r\n\r\n// Função para deletar uma tarefa\r\nexport const deleteTask = async (taskId) => {\r\n  const taskRef = doc(db, \"tasks\", taskId);\r\n  await deleteDoc(taskRef);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, Input, List, DatePicker, Select, Tag, Checkbox } from 'antd';\r\nimport { \r\n  addTaskToList, \r\n  getTasksFromList, \r\n  updateTask, \r\n  deleteTask \r\n} from '../tasksService';\r\nimport dayjs from 'dayjs';\r\nimport axios from 'axios';\r\nimport './Tasks.css';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Tasks = ({ userProfile }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [newTaskTitle, setNewTaskTitle] = useState('');\r\n  const [newTaskDescription, setNewTaskDescription] = useState('');\r\n  const [newTaskExpirationDate, setNewTaskExpirationDate] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\r\n  const [filter, setFilter] = useState('all');\r\n  const [isPersonalTask, setIsPersonalTask] = useState(false); // Estado para o checkbox \"Tarefa Pessoal\"\r\n\r\n  const userId = userProfile?.id;\r\n  const userName = userProfile?.name;\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchTasks();\r\n      fetchUsers();\r\n    }\r\n  }, [userId]);\r\n\r\n  const fetchTasks = async () => {\r\n    console.log('Carregando tarefas...');\r\n    const tasks = await getTasksFromList(userId);\r\n    console.log('Tarefas carregadas:', tasks);\r\n    setTasks(tasks);\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      console.log('Carregando usuários...');\r\n      const { data } = await axios.get('https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records', {\r\n        headers: {\r\n          'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n        },\r\n      });\r\n      // Remove o próprio usuário da lista de destinatários\r\n      const filteredUsers = data.list.filter(user => user.name !== userName);\r\n      setUsers(filteredUsers);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar usuários:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddTask = async () => {\r\n    if (!newTaskTitle) {\r\n      console.warn('Título da tarefa ausente.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const senderName = isPersonalTask ? 'Tarefa Pessoal' : userProfile?.name || 'Desconhecido';\r\n      let recipientNames = '';\r\n\r\n      // Define recipientNames como \"Tarefa Pessoal\" se for uma tarefa pessoal\r\n      if (isPersonalTask) {\r\n        recipientNames = 'Tarefa Pessoal';\r\n      } else {\r\n        // Constrói uma string com os nomes dos destinatários\r\n        if (selectedUserIds.length > 0) {\r\n          recipientNames = selectedUserIds\r\n            .map(id => users.find(user => user.Id === id)?.name || 'Desconhecido')\r\n            .join(', ');\r\n        }\r\n      }\r\n\r\n      const taskData = {\r\n        title: newTaskTitle,\r\n        description: newTaskDescription || '',\r\n        userId: userId,\r\n        createdAt: new Date(),\r\n        completed: false,\r\n        senderName: senderName,\r\n        isSender: true,\r\n        expirationDate: newTaskExpirationDate ? dayjs(newTaskExpirationDate).toISOString() : null,\r\n        recipientNames: recipientNames || 'Desconhecido'\r\n      };\r\n\r\n      console.log('Dados da tarefa antes de enviar ao Firebase:', JSON.stringify(taskData, null, 2));\r\n\r\n      // Adiciona a tarefa ao Firebase\r\n      const taskId = await addTaskToList(\r\n        userId,\r\n        taskData.title,\r\n        taskData.description,\r\n        undefined, \r\n        taskData.expirationDate,\r\n        taskData.senderName,\r\n        taskData.isSender,\r\n        taskData.recipientNames\r\n      );\r\n      console.log('Tarefa criada com ID:', taskId);\r\n\r\n      // Se não for uma tarefa pessoal, encaminha a tarefa para os destinatários\r\n      if (!isPersonalTask && selectedUserIds.length > 0) {\r\n        for (const recipientUserId of selectedUserIds) {\r\n          const selectedUserName = users.find(user => user.Id === recipientUserId)?.name || 'Desconhecido';\r\n          console.log('Tarefa encaminhada para o usuário:', selectedUserName);\r\n\r\n          await addTaskToList(\r\n            recipientUserId,\r\n            `Tarefa Encaminhada: ${newTaskTitle}`,\r\n            taskData.description,\r\n            undefined,\r\n            taskData.expirationDate,\r\n            taskData.senderName,\r\n            false,\r\n            recipientNames\r\n          );\r\n        }\r\n      }\r\n\r\n      setNewTaskTitle('');\r\n      setNewTaskDescription('');\r\n      setNewTaskExpirationDate(null);\r\n      setSelectedUserIds([]);\r\n      setIsPersonalTask(false); // Reseta o estado do checkbox\r\n      fetchTasks();\r\n      setIsModalVisible(false);\r\n    } catch (error) {\r\n      console.error('Erro ao adicionar tarefa:', error);\r\n    }\r\n  };\r\n\r\n  const handleCompleteTask = async (task) => {\r\n    console.log('Concluindo tarefa:', task);\r\n    await updateTask(task.id, { completed: true });\r\n    fetchTasks();\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    console.log('Excluindo tarefa ID:', taskId);\r\n    await deleteTask(taskId);\r\n    fetchTasks();\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    if (filter === 'all') return true;\r\n    if (filter === 'pending') return !task.completed;\r\n    if (filter === 'completed') return task.completed;\r\n    if (filter === 'sent') return task.isSender === true;\r\n    if (filter === 'received') return task.isSender === false;\r\n    return true;\r\n  });\r\n\r\n  const renderTaskItem = (task) => {\r\n    const isSender = task.isSender;\r\n\r\n    return (\r\n      <List.Item>\r\n        <div className=\"task-item\">\r\n          <div>\r\n            <h4>{task.title}</h4>\r\n            <p>{task.description || 'Sem descrição'}</p>\r\n            <p>Data de Expiração: {task.expirationDate ? dayjs(task.expirationDate).format('DD/MM/YYYY') : 'Nenhuma'}</p>\r\n            {isSender ? (\r\n              <p>Enviado para: {task.recipientNames || 'Desconhecido'}</p>\r\n            ) : (\r\n              <p>Recebido de: {task.senderName || 'Desconhecido'}</p>\r\n            )}\r\n            {task.completed && <Tag color=\"green\">Concluída</Tag>}\r\n            {!task.completed && <Tag color=\"red\">Pendente</Tag>}\r\n          </div>\r\n          <div className=\"task-actions\">\r\n            {!task.completed && (\r\n              <Button onClick={() => handleCompleteTask(task)}>\r\n                Concluir\r\n              </Button>\r\n            )}\r\n            <Button type=\"danger\" onClick={() => handleDeleteTask(task.id)}>\r\n              Deletar\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </List.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n<div className=\"tasks-container\">\r\n  <div className=\"tasks-header\">\r\n    <h2>Minhas Tarefas</h2>\r\n    <Button type=\"primary\" onClick={() => setIsModalVisible(true)}>\r\n      Adicionar Tarefa\r\n    </Button>\r\n    <Select value={filter} onChange={setFilter} style={{ width: 200, marginLeft: '1rem' }}>\r\n      <Option value=\"all\">Todas</Option>\r\n      <Option value=\"pending\">Pendentes</Option>\r\n      <Option value=\"completed\">Concluídas</Option>\r\n      <Option value=\"sent\">Enviadas</Option>\r\n      <Option value=\"received\">Recebidas</Option>\r\n    </Select>\r\n  </div>\r\n\r\n  <List\r\n    bordered\r\n    dataSource={filteredTasks}\r\n    renderItem={renderTaskItem}\r\n  />\r\n\r\n  <Modal\r\n    title=\"Adicionar Nova Tarefa\"\r\n    visible={isModalVisible}\r\n    onCancel={() => setIsModalVisible(false)}\r\n    onOk={handleAddTask}\r\n    className=\"tasks-modal\" // Caso deseje aplicar estilos adicionais específicos ao modal\r\n  >\r\n    <Input\r\n      value={newTaskTitle}\r\n      onChange={(e) => setNewTaskTitle(e.target.value)}\r\n      placeholder=\"Título da Tarefa\"\r\n      style={{ marginBottom: '1rem' }}\r\n    />\r\n    <Input.TextArea\r\n      value={newTaskDescription}\r\n      onChange={(e) => setNewTaskDescription(e.target.value)}\r\n      placeholder=\"Descrição da Tarefa\"\r\n      style={{ marginBottom: '1rem' }}\r\n    />\r\n    <DatePicker\r\n      value={newTaskExpirationDate ? dayjs(newTaskExpirationDate) : null}\r\n      onChange={(date) => setNewTaskExpirationDate(date ? date.toDate() : null)}\r\n      placeholder=\"Escolha a data de expiração\"\r\n      style={{ marginBottom: '1rem', display: 'block' }}\r\n    />\r\n    <Checkbox\r\n      checked={isPersonalTask}\r\n      onChange={(e) => setIsPersonalTask(e.target.checked)}\r\n      style={{ marginBottom: '1rem' }}\r\n    >\r\n      Tarefa Pessoal\r\n    </Checkbox>\r\n    {!isPersonalTask && (\r\n      <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"Encaminhar para usuários\"\r\n        value={selectedUserIds}\r\n        onChange={setSelectedUserIds}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {users.map(user => (\r\n          <Option key={user.Id} value={user.Id}>\r\n            {user.name}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    )}\r\n  </Modal>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Button, Typography, Row, Col, Card } from 'antd';\r\nimport { ConsoleSqlOutlined, BarChartOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport './MonitorVPS.css'; // Certifique-se de que esse arquivo existe e está corretamente configurado\r\n\r\nconst { Header, Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nfunction MonitorVPS() {\r\n  const [terminalOutput, setTerminalOutput] = useState('');\r\n  const [pm2Processes, setPm2Processes] = useState([]);\r\n  const [vpsOverview, setVpsOverview] = useState({\r\n    CPU: 'N/A',\r\n    'Memória Total': 'N/A',\r\n    'Memória Usada': 'N/A',\r\n    'Espaço em Disco': 'N/A',\r\n    Uptime: 'N/A'\r\n  });\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const executeCommand = async (command) => {\r\n    try {\r\n      const response = await fetch('https://api.comand.nexusnerds.com.br/executar-comando', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ comando: command }),\r\n      });\r\n\r\n      const result = await response.text();\r\n      setTerminalOutput(prev => prev + '\\n' + result);\r\n      setIsError(false);\r\n    } catch (error) {\r\n      console.error(`Erro de execução: ${error.message}`);\r\n      setTerminalOutput(prev => prev + '\\nErro de execução: ' + error.message);\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  const fetchPm2Monit = async () => {\r\n    try {\r\n      const response = await fetch('https://api.comand.nexusnerds.com.br/executar-comando', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ comando: 'pm2 monit' }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setPm2Processes(data);\r\n        setIsError(false);\r\n      } else {\r\n        setPm2Processes([]);\r\n        setIsError(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Erro ao buscar PM2 monit: ${error.message}`);\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  const fetchVpsOverview = async () => {\r\n    try {\r\n      const response = await fetch('https://api.comand.nexusnerds.com.br/vps-overview', {\r\n        method: 'GET',\r\n      });\r\n\r\n      const data = await response.json();\r\n      setVpsOverview(data);\r\n      setIsError(false);\r\n    } catch (error) {\r\n      console.error(`Erro ao buscar visão geral da VPS: ${error.message}`);\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPm2Monit();\r\n    fetchVpsOverview();\r\n\r\n    const intervalId = setInterval(() => {\r\n      fetchPm2Monit();\r\n      fetchVpsOverview();\r\n    }, 180000); // 180000ms = 3 minutos\r\n\r\n    return () => clearInterval(intervalId); // Limpa o intervalo quando o componente for desmontado\r\n  }, []);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Header style={{ backgroundColor: '#001529', padding: '0 16px' }}>\r\n        <Title level={3} style={{ color: '#fff', margin: 0 }}>Monitoramento da VPS</Title>\r\n      </Header>\r\n      <Content style={{ padding: '24px' }}>\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} md={8}>\r\n            <Card title=\"Terminal\" bordered={false} style={{ minHeight: 300 }}>\r\n              <pre>{terminalOutput || 'Terminal vazio...'}</pre>\r\n              <div style={{ marginTop: 16 }}>\r\n                <Button type=\"primary\" icon={<ConsoleSqlOutlined />} onClick={() => executeCommand('uname -a')}>Sistema</Button>\r\n                <Button type=\"primary\" icon={<BarChartOutlined />} onClick={() => executeCommand('df -h')} style={{ marginLeft: 8 }}>Espaço em Disco</Button>\r\n                <Button type=\"primary\" icon={<InfoCircleOutlined />} onClick={() => executeCommand('uptime')} style={{ marginLeft: 8 }}>Uptime</Button>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} md={8}>\r\n            <Card title=\"PM2 Monit\" bordered={false} style={{ minHeight: 300 }}>\r\n              {pm2Processes.length > 0 ? (\r\n                pm2Processes.map((proc, index) => (\r\n                  <div key={index}>\r\n                    <strong>Nome:</strong> {proc.name} | <strong>Status:</strong> {proc.status} | <strong>CPU:</strong> {proc.cpu}% | <strong>Memória:</strong> {proc.memory}\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>Nenhuma informação disponível</p>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n          <Col xs={24} md={8}>\r\n            <Card title=\"Visão Geral da VPS\" bordered={false} style={{ minHeight: 300 }}>\r\n              <div><strong>CPU:</strong> {vpsOverview.CPU}</div>\r\n              <div><strong>Memória Total:</strong> {vpsOverview['Memória Total']} MB</div>\r\n              <div><strong>Memória Usada:</strong> {vpsOverview['Memória Usada']} MB</div>\r\n              <div><strong>Espaço em Disco:</strong> {vpsOverview['Espaço em Disco']}</div>\r\n              <div><strong>Uptime:</strong> {vpsOverview.Uptime}</div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MonitorVPS;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Upload, Button, Input, Card, message, Popconfirm } from 'antd';\r\nimport { UploadOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { uploadImageToFirebase, getImagesFromFirestore, saveImageToFirestore, deleteImageFromFirestore } from './firebaseUtils';\r\nimport './GalleryPage.css'\r\n\r\nconst GalleryPage = () => {\r\n  const [galleryImages, setGalleryImages] = useState([]);\r\n  const [imageName, setImageName] = useState(''); // Estado para armazenar o nome da imagem\r\n\r\n  const fetchGalleryImages = async () => {\r\n    try {\r\n      const images = await getImagesFromFirestore();\r\n      setGalleryImages(images);\r\n    } catch (error) {\r\n      message.error('Erro ao carregar a galeria: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGalleryImages();\r\n  }, []);\r\n\r\n  const beforeUpload = (file) => {\r\n    if (!imageName.trim()) {\r\n      message.error('Por favor, insira um nome para a imagem antes de fazer o upload.');\r\n      return false; // Impede o upload se o nome da imagem não foi inserido\r\n    }\r\n    handleUpload(file);\r\n    return false; // Impede que o Upload do Ant Design faça o upload automaticamente\r\n  };\r\n\r\n  const handleUpload = async (file) => {\r\n    try {\r\n      if (!file) {\r\n        throw new Error('Arquivo não encontrado ou estrutura incorreta.');\r\n      }\r\n\r\n      const extension = file.name.split('.').pop(); // Obtém a extensão do arquivo\r\n      const fileName = `${imageName}.${extension}`; // Concatena o nome da imagem com a extensão\r\n\r\n      // Cria um novo objeto File com o nome atualizado\r\n      const newFile = new File([file], fileName, { type: file.type });\r\n\r\n      const imageUrl = await uploadImageToFirebase(newFile); // Faz o upload da imagem para o Firebase Storage\r\n      await saveImageToFirestore(imageUrl, imageName); // Salva a URL da imagem no Firestore com o nome correto\r\n      message.success('Imagem enviada com sucesso!');\r\n      setImageName(''); // Limpa o campo de nome da imagem após o upload\r\n      fetchGalleryImages(); // Atualiza a galeria após o upload\r\n    } catch (error) {\r\n      message.error('Erro ao enviar a imagem: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = async (imageId, imageUrl) => {\r\n    try {\r\n      await deleteImageFromFirestore(imageId, imageUrl); // Função que apaga a imagem do Firestore e Firebase Storage\r\n      message.success('Imagem apagada com sucesso!');\r\n      fetchGalleryImages(); // Atualiza a galeria após a exclusão\r\n    } catch (error) {\r\n      message.error('Erro ao apagar a imagem: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <h2>Galeria de Imagens</h2>\r\n\r\n      <Input \r\n        className=\"gallery-input\"\r\n        placeholder=\"Digite o nome da imagem\"\r\n        value={imageName}\r\n        onChange={(e) => setImageName(e.target.value)}\r\n      />\r\n\r\n      <Upload beforeUpload={beforeUpload} showUploadList={false}>\r\n        <Button icon={<UploadOutlined />} className=\"gallery-upload-btn\">Carregar Imagem</Button>\r\n      </Upload>\r\n\r\n      <div className=\"gallery-cards\">\r\n        {galleryImages.map((image) => (\r\n          <Card\r\n            key={image.id}\r\n            hoverable\r\n            className=\"gallery-card\"\r\n            cover={<img alt={image.label} src={image.url} />}\r\n            actions={[\r\n              <Popconfirm\r\n                title=\"Tem certeza que deseja apagar esta imagem?\"\r\n                onConfirm={() => handleDeleteImage(image.id, image.url)}\r\n                okText=\"Sim\"\r\n                cancelText=\"Não\"\r\n              >\r\n                <DeleteOutlined style={{ color: 'red' }} />\r\n              </Popconfirm>,\r\n            ]}\r\n          >\r\n            <Card.Meta title={image.label} /> {/* Exibindo o nome da imagem corretamente */}\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GalleryPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { doc, getDoc } from \"firebase/firestore\"; \r\nimport { Avatar, Dropdown, Menu, Badge } from 'antd';\r\nimport { UserOutlined, LogoutOutlined, BellOutlined, SwapOutlined } from '@ant-design/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { db } from '../firebaseConfig';\r\nimport axios from 'axios';\r\nimport './Header.css';\r\n\r\nconst Header = ({ userProfile, onLogout }) => {\r\n  const navigate = useNavigate();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [empresas, setEmpresas] = useState([]);\r\n  const [carregando, setCarregando] = useState(true);\r\n  const [erro, setErro] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      if (userProfile) {\r\n        try {\r\n          const { data } = await axios.get('https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records', {\r\n            params: {\r\n              where: `(userId,eq,${userProfile.id})`,\r\n            },\r\n            headers: {\r\n              'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n            },\r\n          });\r\n          const unreadNotifications = data.list.filter(notification => !notification.isRead);\r\n          setNotifications(data.list);\r\n          setUnreadCount(unreadNotifications.length);\r\n        } catch (error) {\r\n          console.error('Erro ao buscar notificações:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const fetchEmpresas = async () => {\r\n      if (!userProfile || !userProfile.id) {\r\n        console.error('UserID não está disponível.');\r\n        setErro(\"UserID não está disponível.\");\r\n        setCarregando(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log(\"Iniciando a busca de empresas no Firebase para o usuário:\", userProfile.id);\r\n\r\n        // Recupere as empresas do Firebase\r\n        const docRef = doc(db, \"users\", String(userProfile.id));\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          const dados = docSnap.data();\r\n          console.log(\"Dados recuperados do documento Firebase:\", dados);\r\n\r\n          if (dados.companies) {\r\n            console.log(\"Empresas encontradas:\", dados.companies);\r\n            setEmpresas(dados.companies);\r\n          } else {\r\n            console.log(\"Nenhuma empresa encontrada no documento.\");\r\n            setEmpresas([]);\r\n          }\r\n        } else {\r\n          console.error('Nenhum documento encontrado para esse usuário.');\r\n          setErro('Nenhum documento encontrado para esse usuário.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao buscar dados do Firebase:', error);\r\n        setErro('Erro ao buscar dados do Firebase');\r\n      } finally {\r\n        setCarregando(false);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n    fetchEmpresas();\r\n  }, [userProfile]);\r\n\r\n  const markAsRead = async (notification) => {\r\n    try {\r\n      const updatedNotification = {\r\n        Id: notification.Id,\r\n        title: notification.title,\r\n        userId: notification.userId,\r\n        message: notification.message,\r\n        isRead: true,\r\n        createdAt_: notification.createdAt_,\r\n      };\r\n\r\n      const response = await axios.patch(\r\n        'https://nocodb.nexusnerds.com.br/api/v2/tables/myd2oats63ype1t/records',\r\n        updatedNotification,\r\n        {\r\n          headers: {\r\n            'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n          },\r\n        }\r\n      );\r\n\r\n      setNotifications(prev =>\r\n        prev.map(n => (n.Id === notification.Id ? { ...n, isRead: true } : n))\r\n      );\r\n      setUnreadCount(prev => prev - 1);\r\n    } catch (error) {\r\n      console.error('Erro ao marcar notificação como lida:', error);\r\n    }\r\n  };\r\n\r\n  const handleMenuClick = ({ key }) => {\r\n    if (key === 'logout') {\r\n      onLogout();\r\n    } else {\r\n      navigate(`/home/${key}`);\r\n    }\r\n  };\r\n\r\n  const empresasMenu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      {empresas.length > 0 ? (\r\n        empresas.map((empresa, index) => (\r\n          <Menu.Item key={empresa}>\r\n            {empresa}\r\n          </Menu.Item>\r\n        ))\r\n      ) : (\r\n        <Menu.Item disabled>\r\n          {carregando ? 'Carregando empresas...' : 'Nenhuma empresa disponível'}\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  const notificationMenu = (\r\n    <Menu>\r\n      {notifications.length > 0 ? (\r\n        notifications.map(notification => (\r\n          <Menu.Item key={notification.Id} onClick={() => markAsRead(notification)}>\r\n            {notification.title} - {notification.message}\r\n          </Menu.Item>\r\n        ))\r\n      ) : (\r\n        <Menu.Item>Você não tem notificações.</Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  const userMenu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      <Menu.Item key=\"editProfile\" icon={<UserOutlined />}>\r\n        Editar Perfil\r\n      </Menu.Item>\r\n      <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\r\n        Sair\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-left\">\r\n        <div className=\"user-info\">\r\n          <span>{userProfile.name}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Dropdown overlay={notificationMenu} placement=\"bottomRight\" trigger={['click']}>\r\n          <div className=\"notification-icon\">\r\n            <Badge count={unreadCount} className=\"notification-count\">\r\n              <BellOutlined style={{ fontSize: '24px', cursor: 'pointer' }} />\r\n            </Badge>\r\n          </div>\r\n        </Dropdown>\r\n        <Dropdown overlay={empresasMenu} placement=\"bottomRight\" trigger={['click']}>\r\n          <div className=\"switch-icon\">\r\n            <SwapOutlined style={{ fontSize: '24px', cursor: 'pointer' }} />\r\n          </div>\r\n        </Dropdown>\r\n        <Dropdown overlay={userMenu} placement=\"bottomRight\" trigger={['click']}>\r\n          <Avatar\r\n            size={48}\r\n            src={userProfile.profilePic || null}\r\n            icon={!userProfile.profilePic && <UserOutlined />}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter as Router, Route, Routes, Navigate, useLocation, useNavigate } from 'react-router-dom';\r\nimport MaxFibra from './pages/MaxFibra';\r\nimport CompanySelector from './components/CompanySelector';\r\nimport VirTelecom from './pages/VirTelecom';\r\nimport ReisServices from './pages/ReisServices';\r\nimport Contact from './pages/Contact';\r\nimport Cadastro from './pages/Cadastro';\r\nimport Sidebar from './components/Sidebar';\r\nimport ConsultaCpf from './pages/ConsultaCpf';\r\nimport ConsultaCnpj from './pages/ConsultaCnpj';\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\nimport Header from './components/Header';\r\nimport EditarPerfil from './components/EditarPerfil';\r\nimport CriarUsuario from './pages/CriarUsuario';\r\nimport GerenciarAtalhos from './GerenciarAtalhos';\r\nimport ConfigScreen from './pages/ConfigScreen';\r\nimport SendNotification from './components/SendNotification';\r\nimport UsuariosOnline from './components/UsuariosOnline';\r\nimport DetalhesDispositivos from './pages/DetalhesDispositivos'; // Importe a nova página\r\nimport HomeDashBoard from './pages/HomeDashboard';\r\nimport Notes from './components/Notes';\r\nimport Tasks from './components/Tasks';\r\nimport MonitorVPS from './components/MonitorVPS';\r\nimport GalleryPage from './GalleryPage';\r\nimport PaginaEmpresas from './components/PaginaEmpresas';\r\n\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    return localStorage.getItem('isAuthenticated') === 'true';\r\n  });\r\n\r\n  const [userProfile, setUserProfile] = useState(() => {\r\n    const savedProfile = localStorage.getItem('userProfile');\r\n    return savedProfile ? JSON.parse(savedProfile) : null;\r\n  });\r\n\r\n  const location = useLocation();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const isLoginPage = location.pathname === '/' || location.pathname === '/login';\r\n    if (isLoginPage) {\r\n      document.body.classList.add('login-background');\r\n    } else {\r\n      document.body.classList.remove('login-background');\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const checkTimers = () => {\r\n      const tasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n      const now = new Date().getTime();\r\n      tasks.forEach(task => {\r\n        if (task.timerEnd) {\r\n          const timeRemaining = task.timerEnd - now;\r\n          if (timeRemaining <= 0) {\r\n            // Toca o alarme\r\n            const audio = new Audio('/alert.mp3');\r\n            audio.play();\r\n            // Atualiza o localStorage para remover o timer concluído\r\n            task.timerEnd = null;\r\n          }\r\n        }\r\n      });\r\n      localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    };\r\n\r\n    const interval = setInterval(checkTimers, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  \r\n  const updateOnlineStatus = async (isOnline) => {\r\n    if (userProfile) {\r\n      const now = new Date().toISOString();\r\n      const userData = {\r\n        name: userProfile.name,\r\n        email: userProfile.email,\r\n        password: userProfile.password,\r\n        Cargo1: userProfile.Cargo1,\r\n        username: userProfile.username,\r\n        profilePicUrl: userProfile.profilePic,\r\n        isOnline: isOnline,\r\n        lastActiveAt: now,\r\n        empresa: userProfile.empresa\r\n      };\r\n  \r\n      try {\r\n        await axios.patch(\r\n          'https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records',\r\n          userData,\r\n          {\r\n            headers: {\r\n              'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n            },\r\n          }\r\n        );\r\n        console.log('Status do usuário atualizado:', isOnline ? 'Online' : 'Offline');\r\n      } catch (error) {\r\n        console.error('Erro ao atualizar o status online:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogin = (userData) => {\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n    const userProfileData = { ...userData, name: userData.name || userData.username };\r\n    setUserProfile(userProfileData);\r\n    localStorage.setItem('userProfile', JSON.stringify(userProfileData));\r\n    updateOnlineStatus(true); // Atualiza para \"online\" quando o usuário fizer login\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    if (userProfile) {\r\n      const now = new Date().toISOString();\r\n      const userData = {\r\n        Id: userProfile.id,\r\n        name: userProfile.name,\r\n        email: userProfile.email,\r\n        password: userProfile.password,\r\n        Cargo1: userProfile.Cargo1,\r\n        username: userProfile.username,\r\n        profilePicUrl: userProfile.profilePic,\r\n        isOnline: false,\r\n        lastActiveAt: now,\r\n        empresa: userProfile.empresa\r\n      };\r\n  \r\n      try {\r\n        await axios.patch(\r\n          'https://nocodb.nexusnerds.com.br/api/v2/tables/m0wcogamwt1qc5e/records',\r\n          userData,\r\n          {\r\n            headers: {\r\n              'xc-token': 'ZqFzoCRvPCyzSRAIKPMbnOaLwR6laivSdxcpXiA5',\r\n            },\r\n          }\r\n        );\r\n        console.log('Status do usuário atualizado para offline.');\r\n  \r\n        setIsAuthenticated(false);\r\n        localStorage.removeItem('isAuthenticated');\r\n        localStorage.removeItem('userProfile');\r\n        navigate('/login');\r\n      } catch (error) {\r\n        console.error('Erro ao atualizar o status online para offline:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = (updatedProfile) => {\r\n    const updatedData = { ...userProfile, ...updatedProfile, name: updatedProfile.name || updatedProfile.username };\r\n    setUserProfile(updatedData);\r\n    localStorage.setItem('userProfile', JSON.stringify(updatedData));\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${location.pathname === '/cadastro' ? 'cadastro-page' : ''}`}>\r\n      {isAuthenticated && userProfile && <Header userProfile={userProfile} onLogout={handleLogout} />}\r\n\r\n      <Routes>\r\n        {isAuthenticated && userProfile ? (\r\n          <>\r\n            <Route\r\n              path=\"/home/*\"\r\n              element={\r\n                <SidebarLayout\r\n                  onLogout={handleLogout}\r\n                  userProfile={userProfile}\r\n                  onProfileUpdate={handleProfileUpdate}\r\n                />\r\n              }\r\n            />\r\n            <Route path=\"*\" element={<Navigate to=\"/home\" replace />} />\r\n          </>\r\n        ) : (\r\n          <Route path=\"*\" element={<Login onLogin={handleLogin} />} />\r\n        )}\r\n      </Routes>\r\n\r\n      <div className=\"mobile-warning\">\r\n        <img src=\"https://i.ibb.co/g9KDtqK/warning.png\" alt=\"Aviso\" />\r\n        <p>O aplicativo está disponível apenas para desktop.</p>\r\n      </div>\r\n    </div>\r\n  ); \r\n};\r\n\r\nconst SidebarLayout = ({ onLogout, userProfile, onProfileUpdate }) => (\r\n  <>\r\n    <Sidebar onLogout={onLogout} />\r\n    <div className=\"layout-container\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home  userProfile={userProfile}/>} />\r\n        <Route path=\"/detalhes-dispositivos\" element={<DetalhesDispositivos userProfile={userProfile}/>} /> {/* Nova rota */}\r\n        <Route path=\"/max-fibra\" element={<MaxFibra userProfile={userProfile} />} />\r\n        <Route path=\"/max-fibra/consultaCPF\" element={<ConsultaCpf />} />\r\n        <Route path=\"/max-fibra/consultaCNPJ\" element={<ConsultaCnpj />} />\r\n        <Route path=\"/vir-telecom\" element={<VirTelecom userProfile={userProfile}/>} />\r\n        <Route path=\"/reis-services\" element={<ReisServices userProfile={userProfile}/>} />\r\n        <Route path=\"/contact\" element={<Contact />} />\r\n        <Route path=\"/max-fibra/cadastro\" element={<Cadastro />} />\r\n        <Route path=\"/criar-usuario\" element={<CriarUsuario />} />\r\n        <Route path=\"/editar-perfil\" element={<EditarPerfil userProfile={userProfile} onProfileUpdate={onProfileUpdate} />} />\r\n        <Route path=\"/gerenciar-atalhos\" element={<GerenciarAtalhos userProfile={userProfile} />} />\r\n        <Route path=\"/config\" element={<ConfigScreen userProfile={userProfile} />} />\r\n        <Route path=\"/send-notification\" element={<SendNotification userProfile={userProfile} />} />\r\n        <Route path=\"/usuarios-online\" element={<UsuariosOnline userProfile={userProfile}/>} />\r\n        <Route path=\"/vir-telecom/Dashboard-virtelecom\" element={<HomeDashBoard userProfile={userProfile}/>} />\r\n        <Route path=\"/notas\" element={<Notes userProfile={userProfile}/>} />\r\n        <Route path=\"/tarefas\" element={<Tasks userProfile={userProfile}/>} />\r\n        <Route path=\"/monitor-vps\" element={<MonitorVPS userProfile={userProfile}/>} />\r\n        <Route path=\"/galeria\" element={<GalleryPage userProfile={userProfile}/>} />\r\n        <Route path=\"/paginaEmpresa\" element={<PaginaEmpresas userProfile={userProfile}/>} />\r\n\r\n\r\n\r\n        <Route path=\"*\" element={<Navigate to=\"/home\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst Root = () => (\r\n  <Router basename=\"/\">\r\n    <App />\r\n  </Router>\r\n);\r\n\r\nexport default Root;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}