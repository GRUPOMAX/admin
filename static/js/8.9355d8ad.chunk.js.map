{"version":3,"sources":["pages/CobrancaDashboard.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","Search","Input","console","log","window","innerWidth","innerHeight","CobrancaDashboard","React","memo","clientes","setClientes","useState","filteredClientes","setFilteredClientes","loading","setLoading","searchTerm","setSearchTerm","currentPage","setCurrentPage","pageSize","useEffect","async","response","fetch","data","json","error","fetchClientes","filtered","filter","cliente","razao","toLowerCase","includes","endereco","indexOfLastCliente","indexOfFirstCliente","currentClientes","slice","handlePrintShortcut","e","ctrlKey","key","preventDefault","print","addEventListener","removeEventListener","createElement","className","placeholder","onChange","target","value","enterButton","length","map","id_cliente","telefone_celular","telefone_comercial","Pagination","current","total","page","style","marginTop","textAlign"],"mappings":"gHAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAA,EAAA,KAIA,MAAMQ,OAAEA,GAAWC,IACnBC,QAAQC,gBAAgBC,OAAOC,yBAAyBD,OAAOE,iBAE/D,MAAMC,EAAoBC,IAAMC,KAAK,KACnC,MAAOC,EAAUC,GAAeC,mBAAS,KAClCC,EAAkBC,GAAuBF,mBAAS,KAClDG,EAASC,GAAcJ,oBAAS,IAChCK,EAAYC,GAAiBN,mBAAS,KACtCO,EAAaC,GAAkBR,mBAAS,IACxCS,GAAYT,mBAAS,IAE5BU,oBAAU,KACcC,WACpB,IACEP,GAAW,GACX,MAAMQ,QAAiBC,MAAM,kEACvBC,QAAaF,EAASG,OAC5BhB,EAAYe,GACZZ,EAAoBY,GACpB,MAAOE,GACP1B,QAAQ0B,MAAM,wBAAyBA,GACxC,QACCZ,GAAW,KAIfa,IACC,IAEHP,oBAAU,KAER,MAAMQ,EAAWpB,EAASqB,OAAQC,GAChCA,EAAQC,MAAMC,cAAcC,SAASlB,EAAWiB,gBAChDF,EAAQI,SAASF,cAAcC,SAASlB,EAAWiB,gBAErDpB,EAAoBgB,GACpBV,EAAe,IACd,CAACH,EAAYP,IAEhB,MAKM2B,EAAqBlB,EAAcE,EACnCiB,EAAsBD,EAAqBhB,EAC3CkB,EAAkB1B,EAAiB2B,MAAMF,EAAqBD,GAiBpE,OAfAf,oBAAU,KACR,MAAMmB,EAAuBC,IACvBA,EAAEC,SAAqB,MAAVD,EAAEE,MACjBF,EAAEG,iBACFzC,OAAO0C,UAMX,OAFA1C,OAAO2C,iBAAiB,UAAWN,GAE5B,KACLrC,OAAO4C,oBAAoB,UAAWP,KAEvC,IAEC1B,EACKP,IAAAyC,cAAA,WAAK,iBAIZzC,IAAAyC,cAAA,OAAKC,UAAU,gCACb1C,IAAAyC,cAAA,UAAI,uBACJzC,IAAAyC,cAACjD,EAAM,CACLkD,UAAU,gBACVC,YAAY,oCACZC,SAAWV,GAAMxB,EAAcwB,EAAEW,OAAOC,OACxCC,aAAW,IAEb/C,IAAAyC,cAAA,SAAG,iCAA+BpC,EAAiB2C,QACnDhD,IAAAyC,cAAA,SAAOC,UAAU,kBACf1C,IAAAyC,cAAA,aACEzC,IAAAyC,cAAA,UACEzC,IAAAyC,cAAA,UAAI,cACJzC,IAAAyC,cAAA,UAAI,mBACJzC,IAAAyC,cAAA,UAAI,eACJzC,IAAAyC,cAAA,UAAI,oBACJzC,IAAAyC,cAAA,UAAI,wBAGRzC,IAAAyC,cAAA,aACGV,EAAgBkB,IAAKzB,GACpBxB,IAAAyC,cAAA,MAAIL,IAAKZ,EAAQ0B,YACflD,IAAAyC,cAAA,UAAKjB,EAAQ0B,YACblD,IAAAyC,cAAA,UAAKjB,EAAQC,OACbzB,IAAAyC,cAAA,UAAKjB,EAAQI,UACb5B,IAAAyC,cAAA,UAAKjB,EAAQ2B,kBACbnD,IAAAyC,cAAA,UAAKjB,EAAQ4B,oBAAsB,WAK3CpD,IAAAyC,cAACY,IAAU,CACTC,QAAS3C,EACT4C,MAAOlD,EAAiB2C,OACxBnC,SAAUA,EACV+B,SAhEoBY,IACxB5C,EAAe4C,IAgEXC,MAAO,CAAEC,UAAW,GAAIC,UAAW,eAM5B5D","file":"static/js/8.9355d8ad.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Input, Pagination } from 'antd';\r\nimport './styles/CobrancaDashboard.css';\r\n\r\nconst { Search } = Input;\r\nconsole.log(`Largura: ${window.innerWidth}px, Altura: ${window.innerHeight}px`);\r\n\r\nconst CobrancaDashboard = React.memo(() => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [filteredClientes, setFilteredClientes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize] = useState(15); // Define 15 itens por página\r\n\r\n  useEffect(() => {\r\n    const fetchClientes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch('https://apidoixc.nexusnerds.com.br/Data/ClientesBloquados.json');\r\n        const data = await response.json();\r\n        setClientes(data);\r\n        setFilteredClientes(data); // Inicialmente, a lista filtrada é a mesma que a original\r\n      } catch (error) {\r\n        console.error('Erro ao buscar dados:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchClientes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filtra os clientes com base no termo de busca\r\n    const filtered = clientes.filter((cliente) =>\r\n      cliente.razao.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      cliente.endereco.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredClientes(filtered);\r\n    setCurrentPage(1); // Reseta para a primeira página ao buscar\r\n  }, [searchTerm, clientes]);\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  // Calcula o índice inicial e final dos clientes que devem ser exibidos na página atual\r\n  const indexOfLastCliente = currentPage * pageSize;\r\n  const indexOfFirstCliente = indexOfLastCliente - pageSize;\r\n  const currentClientes = filteredClientes.slice(indexOfFirstCliente, indexOfLastCliente);\r\n\r\n  useEffect(() => {\r\n    const handlePrintShortcut = (e) => {\r\n      if (e.ctrlKey && e.key === 'p') {\r\n        e.preventDefault();\r\n        window.print(); // Força a impressão\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handlePrintShortcut);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handlePrintShortcut);\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cobranca-dashboard-container\">\r\n      <h2>Clientes Bloqueados</h2>\r\n      <Search\r\n        className=\"custom-search\"\r\n        placeholder=\"Buscar por nome ou endereço...\"\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        enterButton\r\n      />\r\n      <p>Total de clientes bloqueados: {filteredClientes.length}</p>\r\n      <table className=\"clientes-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID Cliente</th>\r\n            <th>Razão Social</th>\r\n            <th>Endereço</th>\r\n            <th>Telefone Celular</th>\r\n            <th>Telefone Comercial</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentClientes.map((cliente) => (\r\n            <tr key={cliente.id_cliente}>\r\n              <td>{cliente.id_cliente}</td>\r\n              <td>{cliente.razao}</td>\r\n              <td>{cliente.endereco}</td>\r\n              <td>{cliente.telefone_celular}</td>\r\n              <td>{cliente.telefone_comercial || 'N/A'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        current={currentPage}\r\n        total={filteredClientes.length}\r\n        pageSize={pageSize}\r\n        onChange={handlePageChange}\r\n        style={{ marginTop: 20, textAlign: 'center' }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CobrancaDashboard;\r\n"],"sourceRoot":""}