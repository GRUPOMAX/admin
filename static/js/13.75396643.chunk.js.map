{"version":3,"sources":["../node_modules/xlsx/xlsx.mjs"],"names":["__webpack_require__","d","__webpack_exports__","writeFileSync","utils","XLSX","version","current_codepage","current_ansi","VALID_ANSI","CS2CP","0","1","2","77","128","129","130","134","136","161","162","163","177","178","186","204","222","238","255","69","set_ansi","cp","indexOf","set_cp","reset_cp","utf16beread","data","o","i","length","String","fromCharCode","charCodeAt","join","$cptable","_getchar","x","_getansi","DENSE","DIF_XL","Base64_map","Base64_encode","input","c1","c2","c3","e1","e2","e3","e4","isNaN","charAt","Base64_decode","replace","has_buf","Buffer","process","versions","node","Buffer_from","nbfs","from","e","buf","enc","bind","new_raw_buf","len","alloc","Uint8Array","Array","new_unsafe_buf","allocUnsafe","s2a","s","split","map","s2ab","ArrayBuffer","view","a2s","isArray","c","bconcat","bufs","concat","isBuffer","maxlen","set","apply","slice","call","chr0","chr1","_strrev","pad0","v","t","fill","pad_","rpad_","p2_32","Math","pow","pad0r","round","pad0r1","pad0r2","SSF_isgeneral","days","months","table_fmt","3","4","9","10","11","12","13","14","15","16","17","18","19","20","21","22","37","38","39","40","45","46","47","48","49","56","SSF_default_map","5","6","7","8","23","24","25","26","27","28","29","30","31","50","51","52","53","54","55","57","58","59","60","61","62","67","68","70","71","72","73","74","75","76","78","79","80","81","82","SSF_default_str","63","64","65","66","41","42","43","44","SSF_frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","SSF_parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","m","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","SSF_fix_hijri","SSFbasedate","SSFdnthresh","getTime","SSFbase1904","datenum_local","epoch","getTimezoneOffset","SSF_strip_decimal","SSF_general_num","V","log","LOG10E","toPrecision","w","toFixed","toExponential","SSF_small_exp","substr","SSF_large_exp","SSF_normalize_exp","toUpperCase","SSF_general","toString","SSF_format","Error","SSF_write_date","type","fmt","val","ss0","ss","tt","outl","commaify","j","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","rnd","dd","dec","_frac","write_num_flt","match","ffmt","idx","write_num","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","r","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","min","max","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","lastIndexOf","SSF_abstime","fmt_is_date","cfregex2","chkcond","thresh","parseFloat","choose_fmt","f","in_str","SSF_split_fmt","l","lat","m1","m2","dateNF","table","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","eval_fmt","SSF_load","undefined","SSF_load_table","tbl","make_ssf","dateNFregex","CRC32","T0","n","Int32Array","signed_crc_table","TT","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","CFB","fs","exports","dirname","p","filename","write_dos_date","hms","getHours","getMinutes","getSeconds","write_shift","ymd","parse_extra_field","blob","prep_blob","flags","read_shift","sz","tgt","mtime","atime","ctime","mt","get_fs","parse","file","options","parse_zip","root","di","row","test","mboundary","boundary","FileIndex","FullPaths","init_cfb","start_di","fcnt","line","parse_mime","parse_mad","mver","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","ssz","fat_addrs","mv","chk","HEADER_SIGNATURE","check_get_mver","header","shift","check_shifts","dir_cnt","sectors","nsectors","ceil","sectorify","sleuth_fat","cnt","ENDOFCHAIN","sector","__readInt32LE","push","sector_list","sl","chkd","buf_chain","modulus","k","seen","addr","nodes","__toBuffer","make_sector_list","name","Paths","files","mini","minifat_store","pl","namelen","__utf16le","color","R","clsid","state","start","size","ct","read_date","storage","get_sector_list","content","get_mfat_entry","read_directory","FI","FP","dad","build_full_paths","raw","entry","payload","MSSZ","new_buf","offset","__readUInt32LE","cfb","CLSID","nm","find","rebuild_cfb","seed_cfb","gc","_file","pop","now","fullPaths","Object","create","HEADER_CLSID","sort","Z","namecmp","elt","_write","_opts","fileType","fp","fi","ca","cstr","dispcnt","csl","qp","get_content_type","write_quoted_printable","write_base64_76","write_mad","cdirs","method","compression","start_cd","crcs","sz_cd","namebuf","outbuf","_zlib","deflateRawSync","_deflate","write_zip","mini_size","fat_size","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","consts","DIFSECT","FATSECT","_nm","copy","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","CLEN_ORDER","LEN_LN","DST_LN","bit_swap_8","use_typed_arrays","bitswap8","bit_swap_n","b","rev","read_bits_2","bl","h","read_bits_3","read_bits_5","read_bits_7","read_bits_n","write_bits_3","write_bits_1","write_bits_8","write_bits_16","realloc","a","zero_fill_array","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","cleni","fix_lmap","fix_dmap","dlens","_deflateRaw","DST_LN_RE","LEN_LN_RE","boff","write_stored","addrs","hash","mlen","len_eb","dst_eb","write_huff_fixed","off","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","h1","h2","_inflate","usz","woff","OL","max_len_1","max_len_2","bits","code","dst","inflate","warn_or_throw","wrn","msg","console","error","csz","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setHours","setMinutes","setSeconds","parse_dos_date","_csz","_usz","ef","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","_inflateRawSync","cfb_add","unsafe","ContentTypeMap","htm","xml","gif","jpg","png","mso","thmx","sh33tj5","ctype","ext","text","encoded","si","end","tmp","fdata","fname","cte","trim","oi","parse_quoted_printable","fpath","cfb_gc","path","UCFullPaths","UCPaths","UCPath","read","readFileSync","read_file","write","writeFile","cfb_new","cfb_del","splice","cfb_mov","old_name","new_name","ReadShift","CheckField","use_zlib","zlib","message","_inflateRaw","_fs","blobify","a2u","write_dl","Deno","TextEncoder","encode","utf8write","IE_SaveFile","Blob","navigator","msSaveBlob","saveAs","URL","document","createElement","createObjectURL","url","chrome","downloads","download","revokeObjectURL","setTimeout","href","body","appendChild","click","removeChild","$","File","Folder","open","encoding","close","keys","ks","o2","prototype","hasOwnProperty","evert_key","obj","key","K","evert","evert_num","basedate","datenum","refdate","dnthresh","refoffset","numdate","setTime","good_pd_date_1","good_pd_date","good_pd","parseDate","fixdate","cc2str","arr","debomit","TextDecoder","decode","€","‚","ƒ","„","…","†","‡","ˆ","‰","Š","‹","Œ","Ž","‘","’","“","”","•","–","—","˜","™","š","›","œ","ž","Ÿ","dup","JSON","stringify","fuzzynum","Number","isFinite","NaN","wt","lower_months","fuzzydate","getYear","lower","zip_add_file","zip","res","widx","ridx","utf8decode","zip_new","XML_HEADER","encodings","&quot;","&apos;","&gt;","&lt;","&amp;","rencoding","decregex","charegex","escapexml","escapexmltag","htmlcharegex","escapehtml","parsexmlbool","value","utf8reada","orig","utf8readb","ww","utf8readc","utf8corpus","utf8read","htmldecode","entities","RegExp","wtregex","writetag","g","wxt_helper","writextag","write_w3cdtf","toISOString","XMLNS","CORE_PROPS","CUST_PROPS","EXT_PROPS","CT","RELS","TCMNT","dc","dcterms","dcmitype","mx","sjs","vt","xsi","xsd","XMLNS_main","XLMLNS","html","___toBuffer","___utf16le","__readUInt16LE","___hexlify","__hexlify","___utf8","__readUInt8","__utf8","___lpstr","__lpstr","___cpstr","__cpstr","___lpwstr","__lpwstr","___lpp4","__lpp4","___8lpp4","__8lpp4","___double","Infinity","read_double_le","__double","is_buf","cpdoit","readUInt32LE","readDoubleLE","__readInt16LE","__readInt32BE","oI","oR","loc","oo","this","lens","__writeUInt32LE","__writeInt32LE","__writeUInt16LE","WriteShift","cppayload","bs","av","LN2","write_double_le","hexstr","fld","pos","parsenoop","buf_array","blksz","newblk","curbuf","endbuf","next","_bufs","write_record","ba","XLSBRecordEnum","shift_cell_xls","cell","cRel","rRel","biff","shift_range_xls","range","encode_cell_xls","encode_cell","fix_row","encode_range_xls","encode_row","encode_col","decode_row","rowstr","decode_col","colstr","col","decode_cell","decode_range","encode_range","cs","ce","safe_decode_range","safe_format_cell","z","XF","numFmtId","format_cell","BErr","sheet_to_workbook","sheet","sheets","SheetNames","Sheets","sheet_add_aoa","_ws","dense","ws","_R","_C","origin","_origin","_range","__R","__C","nullError","sheetStubs","cellDates","cell_ref","aoa_to_sheet","write_UInt32LE","parse_XLWideString","cchCharacters","write_XLWideString","_null","parse_StrRun","ich","ifnt","parse_RichStr","rgsStrRun","dwSizeStrRun","parse_BrtCommentText","write_BrtCommentText","run","write_StrRun","parse_XLSBCell","iStyleRef","write_XLSBCell","parse_XLSBShortCell","write_XLSBShortCell","parse_XLSBCodeName","write_XLSBCodeName","parse_XLNullableWideString","write_XLNullableWideString","parse_XLNameWideString","parse_RelID","write_RelID","parse_RkNumber","fX100","fInt","RK","write_RkNumber","d100","parse_RfX","parse_UncheckedRfX","write_UncheckedRfX","parse_Xnum","write_Xnum","write_BrtColor","auto","index","theme","nTS","tint","rgb","VT_I2","VT_I4","DocSummaryPIDDSI","2147483648","2147483651","1919054434","SummaryPIDSI","rgbify","XLSIcv","36","ct2type","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml","application/vnd.ms-excel.sheet.macroEnabled.main+xml","application/vnd.ms-excel.sheet.binary.macroEnabled.main","application/vnd.ms-excel.addin.macroEnabled.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml","application/vnd.ms-excel.worksheet","application/vnd.ms-excel.binIndexWs","application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml","application/vnd.ms-excel.chartsheet","application/vnd.ms-excel.macrosheet+xml","application/vnd.ms-excel.macrosheet","application/vnd.ms-excel.intlmacrosheet","application/vnd.ms-excel.binIndexMs","application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml","application/vnd.ms-excel.dialogsheet","application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml","application/vnd.ms-excel.sharedStrings","application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml","application/vnd.ms-excel.styles","application/vnd.openxmlformats-package.core-properties+xml","application/vnd.openxmlformats-officedocument.custom-properties+xml","application/vnd.openxmlformats-officedocument.extended-properties+xml","application/vnd.openxmlformats-officedocument.customXmlProperties+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty","application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml","application/vnd.ms-excel.comments","application/vnd.ms-excel.threadedcomments+xml","application/vnd.ms-excel.person+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml","application/vnd.ms-excel.sheetMetadata","application/vnd.ms-excel.pivotTable","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml","application/vnd.openxmlformats-officedocument.drawingml.chart+xml","application/vnd.ms-office.chartcolorstyle+xml","application/vnd.ms-office.chartstyle+xml","application/vnd.ms-office.chartex+xml","application/vnd.ms-excel.calcChain","application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings","application/vnd.ms-office.activeX","application/vnd.ms-office.activeX+xml","application/vnd.ms-excel.attachedToolbars","application/vnd.ms-excel.connections","application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml","application/vnd.ms-excel.externalLink","application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml","application/vnd.ms-excel.pivotCacheDefinition","application/vnd.ms-excel.pivotCacheRecords","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml","application/vnd.ms-excel.queryTable","application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml","application/vnd.ms-excel.userNames","application/vnd.ms-excel.revisionHeaders","application/vnd.ms-excel.revisionLog","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml","application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml","application/vnd.ms-excel.tableSingleCells","application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml","application/vnd.ms-excel.slicer","application/vnd.ms-excel.slicerCache","application/vnd.ms-excel.slicer+xml","application/vnd.ms-excel.slicerCache+xml","application/vnd.ms-excel.wsSortMap","application/vnd.ms-excel.table","application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml","application/vnd.openxmlformats-officedocument.theme+xml","application/vnd.openxmlformats-officedocument.themeOverride+xml","application/vnd.ms-excel.Timeline+xml","application/vnd.ms-excel.TimelineCache+xml","application/vnd.ms-office.vbaProject","application/vnd.ms-office.vbaProjectSignature","application/vnd.ms-office.volatileDependencies","application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml","application/vnd.ms-excel.controlproperties+xml","application/vnd.openxmlformats-officedocument.model+data","application/vnd.ms-excel.Survey+xml","application/vnd.openxmlformats-officedocument.drawing+xml","application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml","application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml","application/vnd.openxmlformats-officedocument.vmlDrawing","application/vnd.openxmlformats-package.relationships+xml","application/vnd.openxmlformats-officedocument.oleObject","image/png","CT_LIST","workbooks","xlsx","xlsm","xlsb","xlam","xltx","strs","comments","charts","dialogs","macros","metadata","styles","write_ct","type2ct","evert_arr","xmlns","xmlns:xsd","xmlns:xsi","Extension","ContentType","f1","PartName","bookType","f2","forEach","f3","WB","SHEET","HLINK","VML","XPATH","XMISS","XLINK","CXML","CXMLP","CMNT","SST","STY","THEME","CHART","CHARTEX","CS","WS","DS","MS","IMG","DRAW","XLMETA","PEOPLE","VBA","get_rels_path","write_rels","rels","rid","add_rels","rId","relobj","targetmode","Id","Type","Target","TargetMode","write_rdf_type","tag","write_meta_ods","cp_doit","write_core_props","xmlns:cp","xmlns:dc","xmlns:dcterms","xmlns:dcmitype","Props","CreatedDate","WTF","xsi:type","ModifiedDate","PseudoPropsPairs","write_ext_props","W","Application","xmlns:vt","Worksheets","baseType","write_cust_props","pid","write_vt","fmtid","XLMLDocPropsMap","Title","Subject","Author","Keywords","Comments","LastAuthor","RevNumber","LastPrinted","Category","Manager","Company","AppVersion","ContentStatus","Identifier","Language","write_TypedPropertyValue","write_FILETIME","XLSPSSkip","guess_property_type","write_PropertySet","entries","RE","PIDSI","hdr","piao","prop","pr","pio","unshift","pinfo","write_PropertySetStream","entries2","clsid2","ps0","ps1","parsebool","writebool","parseuint16","writeuint16","write_Bes","parse_ShortXLUnicodeString","cch","write_XLUnicodeRichExtendedString","xlstr","otext","parse_XLUnicodeStringNoCch","parse_XLUnicodeString","parse_XLUnicodeString2","write_XLUnicodeString","write_HyperlinkString","write_Hyperlink","hl","hashidx","F","Pretarget","write_XLSCell","ixfe","parse_XTI","parse_Ref8U","rwFirst","rwLast","write_Ref8U","write_BOF","wb","write_BoundSheet8","hs","write_Format","b5","write_XF","ixfeP","style","parse_ExternSheet","parse_BIFF5ExternSheet","target","write_HLink","O","ref","write_HLinkTooltip","Tooltip","parse_ColInfo","cellStyles","colFirst","colLast","coldx","level","DBF","dbf_codepage_map","100","101","102","103","104","105","106","107","120","121","122","123","124","125","126","150","151","152","200","201","202","203","34","35","87","88","89","108","135","dbf_reverse_map","dbf_to_sheet","ft","memo","vfp","l7","nrow","fpos","rlen","current_cp","codepage","fields","field","hend","sheetRows","dbf_to_aoa","wch","_RLEN","?","","to_workbook","to_sheet","from_sheet","aoa","sheet_to_json","headers","cols","hcnt","coltypes","colwidths","coldecimals","guess","_guess","hf","_f","hb","rout","_n","_s","SYLK","sylk_escapes","AA","BA","CA","DA","HA","JA","AE","BE","CE","HE","AI","BI","CI","HI","AO","BO","CO","DO","HO","AU","BU","CU","HU","Aa","Ba","Ca","Da","Ha","Ja","Ae","Be","Ce","He","Ai","Bi","Ci","Hi","Ao","Bo","Co","Do","Ho","Au","Bu","Cu","Hu","KC","Kc","DN","Dn","Hy","B ","!","\"","#","(","%","'","H ","+",";","<","=",">","{","sylk_char_regex","sylk_char_fn","_","decode_sylk_char","newcc","sylk_to_aoa_str","records","rj","formats","next_cell_format","sht","rowinfo","colinfo","cw","Mval","rstr","record","RT","C_seen_K","C_seen_X","C_seen_S","C_seen_E","formula","rc_to_a1","shrbase","shift_formula_str","F_seen","hidden","process_col","hpt","hpx","pt2px","sylk_to_sheet","aoasht","sylk_to_aoa","write_ws_cell_sylk","a1_to_rc","preamble","RS","rec","width","wpx","width2px","px2char","rows","px2pt","write_ws_rows_sylk","coord","DIF","dif_to_aoa_str","dif_to_sheet","dif_to_aoa","push_field","topic","push_value","ETH","eth_to_sheet","eth_to_aoa","sep","meta","sheet_to_eth_data","PRN","set_text_arr","guess_seps","guess_sep_weights","guess_sep","instr","dsv_to_sheet_str","FS","sepcc","startcc","_re","dateNF_regex","finish_cell","Y","datestr","timestr","dateNF_fix","cellText","cellNF","outer","prn_to_sheet_str","lines","prn_to_aoa_str","prn_to_sheet","bytes","firstbyte","WK_","lotushopper","cb","Enum","WK1Enum","lotus_to_workbook_buf","next_n","sidx","snames","realnames","refguess","vers","qpro","tmpcell","WK3Enum","osheets","rnames","!ref","parse_cell","parse_LABEL","write_LABEL","write_INTEGER","write_NUMBER","wk1_parse_rc","rel","FuncTab","83","84","111","BinOpTab","parse_cell_3","write_LABEL_16","wsidx","parse_NUMBER_17","v1","v2","write_NUMBER_17","log2","parse_NUMBER_27","parse_SHEETNAMECS","write_XFORMAT_SHEETNAME","argc","argL","argR","args","wk1_fmla_to_csf","32","65535","33","142","147","153","154","155","156","174","175","176","184","185","187","188","195","205","206","207","208","256","259","260","261","262","263","265","266","267","268","270","271","384","389","390","393","396","512","514","513","516","517","640","641","642","643","644","645","646","647","648","658","659","660","661","662","665","666","768","772","1537","id","1600","1602","1793","1794","1795","1796","1920","2048","2049","2052","2688","10998","12849","28233","28484","sheet_to_wk1","write_biff_rec","write_BOF_WK1","write_RANGE","max_R","book_to_wk3","wscnt","write_BOF_WK3","straywsregex","write_sst_xml","sst","bookSST","count","Count","uniqueCount","Unique","sitag","write_BrtSSTItem","write_sst_bin","write_BrtBeginSst","_JS2ANSI","crypto_CreatePasswordVerifier_Method1","Password","PasswordArray","Verifier","PasswordDecoded","RTF","rtf_to_sheet","rtf_to_sheet_str","rowtf","rtfre","last_index","exec","lastIndex","rgb2Hex","DEF_MDW","MDW","px","char2width","chr","coll","customWidth","PPI","pt","write_sty_xml","SSF","NF","formatCode","write_numFmts","cellXfs","write_cellXfs","write_BrtFmt","write_BrtFont","font","grbit","italic","strike","outline","shadow","condense","extend","write_FontFlags","bold","sss","vertAlign","underline","family","charset","scheme","rev_XLSBFillPTNames","XLSBFillPTNames","parse_BrtFill","write_BrtFill","fls","patternType","write_BrtXF","write_Blxf","parse_BrtBorder","write_BORDERS_bin","write_STYLES_bin","xfId","builtinId","write_TABLESTYLES_bin","defTableStyle","defPivotStyle","write_BrtBeginTableStyles","write_sty_bin","write_FMTS_bin","write_FONTS_bin","write_FILLS_bin","fontId","fillId","borderId","write_CELLSTYLEXFS_bin","write_CELLXFS_bin","write_DXFS_bin","write_theme","Themes","themeXLSX","write_xlmeta_bin","write_BrtMdtinfo","write_BrtBeginEsfmd","cm","write_BrtBeginEsmdb","mdb","write_BrtMdb","write_xlmeta_xml","_shapeid","write_comments_vml","csize","bbox","xmlns:v","xmlns:o","xmlns:x","xmlns:mv","v:ext","joinstyle","gradientshapeok","o:connecttype","o:spt","coordsize","fillopts","color2","angle","fillparm","fillxml","fillcolor","strokecolor","on","obscured","write_comments_xml","iauthor","ID","lastauthor","ts","write_tcmnt_xml","people","carr","rootid","tcopts","tcid","parentId","personId","parse_BrtCommentAuthor","write_comments_bin","comment","VBAFMTS","rcregex","rcbase","rcfunc","fstr","crefregex","$0","$4","$5","delta","parseread1","parse_ColRelU","parse_RgceArea","parse_RgceArea_BIFF2","parse_RgceLoc","parse_RgceLoc_BIFF2","parse_RgceElfLoc","fQuoted","parse_PtgAttrBaxcel","bitSemi","parse_PtgAttrSpaceType","parse_SerAr","parse_PtgExtraMem","cce","parse_PtgExtraArray","parse_PtgElfLoc","parse_PtgElfNoop","parse_PtgElfLel","PtgListRT","PtgTypes","iftab","FtabArgc","Ftab","cparams","tab","parsetab","Cetab","nameindex","rl","parse_RgceLocRel_BIFF2","cl","parse_RgceLocRel","parse_RgceAreaRel","ixti","parse_PtgNameX_BIFF5","PtgDupes","96","97","98","99","109","110","90","91","92","93","Ptg18","coltype","rt","Ptg19","bitIf","bitGoto","parse_RgbExtra","rgce","parse_Rgce","ptgs","stringify_array","PtgBinOp","PtgAdd","PtgConcat","PtgDiv","PtgEq","PtgGe","PtgGt","PtgLe","PtgLt","PtgMul","PtgNe","PtgPower","PtgSub","get_ixti_raw","supbooks","XTI","SID","Name","get_ixti","ixtiraw","sname","formula_quote_sheet_name","stringify_formula","stack","nameidx","last_sp","sp","fflen","func","lbl","names","xlfn","externbook","bookidx","itab","ixtidata","lp","rp","sharedf","parsedf","fnd","arrayf","_left","write_Formula","os","o1","write_FormulaValue","o3","bf","parse_XLSBParsedFormula","parse_XLSBArrayParsedFormula","parse_XLSBCellParsedFormula","parse_XLSBNameParsedFormula","parse_XLSBSharedParsedFormula","85","86","94","95","112","113","114","115","116","117","118","119","127","131","132","133","137","138","139","140","143","144","145","146","148","149","159","164","166","167","168","169","170","171","172","173","189","190","191","192","193","194","196","197","198","199","209","210","211","212","213","214","215","216","217","218","219","220","223","224","225","226","227","228","229","240","243","249","250","251","252","253","254","269","272","273","274","276","277","278","279","280","281","282","283","284","285","288","289","290","291","292","293","295","296","297","298","302","305","306","307","308","309","310","311","312","313","314","315","316","318","319","320","321","322","323","324","325","328","330","336","338","339","342","343","344","350","352","354","355","356","370","373","374","375","376","377","378","379","380","381","382","383","385","386","388","391","392","394","395","397","398","399","400","412","413","414","415","416","417","420","421","422","423","424","425","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","480","481","482","485","489","491","493","494","495","509","510","511","518","519","520","521","522","523","545","546","547","548","549","620","621","653","667","673","753","755","808","141","157","158","160","165","179","180","181","182","183","221","230","231","232","233","234","235","236","237","239","241","242","244","245","246","247","248","257","258","264","275","286","287","294","299","300","301","303","304","317","326","327","329","331","332","334","335","337","340","341","345","346","347","348","349","351","353","357","358","359","360","361","362","363","364","365","366","367","368","369","371","372","387","401","402","403","404","405","406","407","408","409","410","411","418","419","426","427","428","429","457","724","479","483","484","browser_has_Map","Map","get_sst_id","has","revarr","get","col_obj_w","outlineLevel","default_margins","margins","mode","defs","left","right","top","bottom","footer","get_cell_style","revssf","ssf","applyNumberFormat","check_ws","sheetprot_deffalse","sheetprot_deftrue","write_ws_xml_cell","oldt","oldv","Strings","revStrings","write_ws_xml","xmlns:r","rdata","_drawing","needed","props","vbaraw","cname","Workbook","CodeName","codeName","outlineprops","summaryBelow","summaryRight","above","write_ws_xml_sheetpr","sview","workbookViewId","Views","rightToLeft","RTL","write_ws_xml_sheetviews","sheetFormat","defaultRowHeight","baseColWidth","outlineLevelRow","write_ws_xml_cols","params","height","_cell","ht","customHeight","write_ws_xml_data","password","write_ws_xml_protection","Names","Sheet","Ref","write_ws_xml_autofilter","merges","write_ws_xml_merges","margin","relc","location","tooltip","ignoreEC","numberStoredAsText","sqref","r:id","write_row_header","miyRw","ncolspan","lcs","caddr","first","last","write_BrtRowHdr","parse_BrtWsDim","write_BrtWsDim","parse_BrtShortReal","parse_BrtMergeCell","write_BrtMergeCell","BrtMarginKeys","write_ws_bin_cell","last_seen","ncell","write_BrtShortIsst","write_BrtCellIsst","write_BrtShortSt","write_BrtCellSt","write_BrtShortRk","write_BrtCellRk","write_BrtShortReal","write_BrtCellReal","write_BrtShortBool","write_BrtCellBool","write_BrtShortError","write_BrtCellError","write_BrtShortBlank","write_BrtCellBlank","write_MERGECELLS","write_COLINFOS","write_BrtColInfo","write_IGNOREECS","write_BrtCellIgnoreEC","write_HLINKS","locidx","write_BrtHLink","write_WSVIEWS2","write_BrtBeginWsView","write_SHEETPROTECT","write_ws_bin","write_BrtWsProp","cap","write_CELLTABLE","write_AUTOFILTER","write_LEGACYDRAWING","WBPropsDef","badchars","check_ws_name","safe","_good","check_wb","N","codes","cn","write_wb_xml","write_names","workbookPr","WBProps","Hidden","sheetId","Comment","localSheetId","write_BOOKVIEWS","vistab","write_wb_bin","write_BrtFileVersion","filterPrivacy","write_BrtWbProp","iTabID","strRelID","write_BrtBundleSh","write_BUNDLESHS","write_ws","write_cmnt","write_props_xlml","xlml_write_docprops","Custprops","BLACKLIST","dt:dt","xlml_write_custprops","write_name_xlml","ss:Name","ss:RefersTo","write_ws_xlml_cell","attr","marr","mi","_v","ss:Author","write_ws_xlml_row","write_ws_xlml","write_ws_xlml_names","ss:Index","skip","write_ws_xlml_table","x:Margin","x:Bottom","x:Left","x:Right","x:Top","objects","scenarios","selectLockedCells","selectUnlockedCells","write_ws_xlml_wsopts","write_xlml","General","xf","ss:Format","ss:ID","write_sty_xlml","write_names_xlml","xmlns:ss","xmlns:dt","xmlns:html","PSCLSID","SI","DSI","UDI","write_xlscfb","wbpath","write_biff_buf","Keys","DSEntries","SEntries","CEntries","DocSummaryRE","SummaryRE","CEntries2","write_xls_props","vba","newpath","fill_vba_xls","cellFormula","Ptg","fBold","fItalic","fUnderline","fStrikeout","fOutline","fShadow","fCondense","fExtend","parse_FontFlags","bCharSet","xColorType","bR","bG","bB","icv","parse_BrtColor","ixfeParent","ifmt","defaultThemeVersion","strName","autoCompressPictures","backupFile","checkCompatibility","hidePivotFieldList","promptedSolutions","publishItems","refreshAllConnections","saveExternalLinkValues","showBorderUnselectedTables","showInkAnnotation","showObjects","showPivotChartFilter","updateLinks","333","rfx","fAlwaysCalc","486","487","488","490","492","relId","display","496","497","498","499","500","501","502","503","504","505","506","507","508","515","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","550","551","552","553","554","555","556","557","558","559","560","561","562","564","565","566","569","570","572","573","574","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","649","650","651","652","654","655","656","657","663","664","668","669","671","672","674","675","676","677","678","679","680","681","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1177","1178","1180","1181","1182","2050","2051","2053","2054","2055","2056","2057","2058","2060","2067","2068","2069","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","3072","3073","4096","4097","5002","5003","5081","5082","5083","5084","5085","5086","5087","5088","5089","5090","5092","5093","5094","5095","5096","5097","5099","write_BIFF2Cell","write_ws_biff2_cell","write_BIFF2INT","write_BIFF2NUM","write_BIFF2BERR","write_BIFF2LABEL","write_biff2_buf","write_ws_biff2","write_FONTS_biff8","write_Font","write_ws_cols_biff8","write_ColInfo","write_ws_biff8_cell","write_Number","write_BoolErr","write_LabelSst","b8","write_Label","write_ws_biff8","_WB","_sheet","MAX_ROWS","guts","write_Guts","write_Dimensions","write_Window2","write_MergeCells","HL","write_ws_biff8_hlinks","write_FEAT","write_biff8_global","_sheets","_wb","writezeroes","write_WriteAccess","write_RRTabId","write_Window1","safe1904","write_FMTS_biff8","write_CELLXFS_biff8","parts","write_biff_continue","write_SST","blen","fix_write_opts","write_biff8_buf","make_html_row","rowspan","colspan","editable","HTML_BEGIN","HTML_END","make_html_preamble","sheet_to_html","sheet_add_dom","or_R","or_C","getElementsByTagName","midx","is_dom_element_hidden","elts","children","hasAttribute","getAttribute","innerHTML","_t","Aelts","Aelti","parse_dom_table","element","get_computed_style","ownerDocument","defaultView","getComputedStyle","get_get_computed_style_function","getPropertyValue","write_styles_ods","master_styles","xmlns:office","xmlns:table","xmlns:style","xmlns:text","xmlns:draw","xmlns:fo","xmlns:xlink","xmlns:number","xmlns:svg","xmlns:of","office:version","write_content_ods","null_cell_xml","ods","ROWS","textp","_Fref","text_p","_tgt","xlink:href","xmlns:meta","xmlns:presentation","xmlns:chart","xmlns:dr3d","xmlns:math","xmlns:form","xmlns:script","xmlns:ooo","xmlns:ooow","xmlns:oooc","xmlns:dom","xmlns:xforms","xmlns:sheet","xmlns:rpt","xmlns:xhtml","xmlns:grddl","xmlns:tableooo","xmlns:drawooo","xmlns:calcext","xmlns:loext","xmlns:field","xmlns:formx","xmlns:css3t","fods","xmlns:config","office:mimetype","cidx","colobj","write_automatic_styles_ods","write_ods","manifest","rdf","write_rdf","write_manifest","u8_to_dataview","array","DataView","buffer","byteOffset","byteLength","stru8","u8concat","u8a","reduce","acc","u8","parse_varint49","ptr","varint","write_varint49","varint_to_i32","i32","parse_shallow","num","write_shallow","proto","item","parse_iwa_file","_a","ai","messages","fl","merge","write_iwa_file","ias","ia","midata","aipayload","mid","parse_snappy_chunk","chunks","decompress_iwa_file","compress_iwa_file","frame","write_new_storage","dv","exp","mantissa","writeDecimal128LE","setFloat64","setUint32","write_old_storage","parse_TSP_Reference","write_tile_row","tri","_b","_c","_d","last_offset","cell_storage","_dv","_last_offset","_cell_storage","celload","_celload","setUint16","fix_opts_func","defaults","numbers","trunc","dependents","indices","packet2","deps","x2","y2","indices_varint","filter","ivi","some","mess","search","u8contains","docroot","xi","packet","sheetrootref","pb","cruidsref","oldbucket","_x","cruids","uuid","store","row_header_ref","base_bucket","_bucket","col_header_ref","sstref","sstroot","sentry","sx","sxi","sstdata","newsst","raw32","tile","tl","tileref","tileroot","tentry","tx","tiledata","rowload","R2","tilerow","raw3","write_numbers_iwa","wbrels","foo","wbext","vbafmt","threadedcomments","links","coreprops","extprops","custprops","themes","calcchains","drawings","TODO","_sn","_i","wsrels","!id","_type","need_vml","cf","rId1","write_sst","write_wb","write_sty","write_zip_xlsxb","write_zip_xlsx","needtc","person","displayName","userId","providerId","write_people_xml","write_cfb_ctr","write_zip_denouement","oopts","ftype","nodebuffer","string","generate","encrypt_agile","write_string_type","bom","write_binary_type","writeSync","write_stxt_type","sheet_to_txt","sheet_to_csv","write_cfb_type","write_zip_type","resolve_book_type","xls","slk","socialcalc","Sh33tJS","make_json_row","defval","isempty","defineProperty","enumerable","__rowNum__","rawNumbers","outi","counter","header_cnt","skipHidden","blankrows","qreg","make_csv_row","rs","txt","forceQuotes","endregex","strip","sheet_add_json","js","skipHeader","JS","ws_get_cell_stub","RC","book_new","book_append_sheet","roll","cell_set_hyperlink","split_cell","json_to_sheet","table_to_sheet","table_to_book","sheet_to_formulae","cmds","sheet_to_row_object_array","sheet_get_cell","book_set_sheet_visibility","sh","vis","wb_sheet_idx","cell_set_number_format","cell_set_internal_link","cell_add_comment","author","sheet_set_array_formula","dynamic","rng","rngstr","SHEET_VISIBLE","SHEET_HIDDEN","SHEET_VERY_HIDDEN"],"mappings":"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","file":"static/js/13.75396643.chunk.js","sourcesContent":["/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */\nvar XLSX = {};\nXLSX.version = '0.18.5';\nvar current_codepage = 1200,\n  current_ansi = 1252;\nvar VALID_ANSI = [874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000];\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = {\n  /*::[*/0 /*::]*/: 1252,\n  /* ANSI */\n  /*::[*/1 /*::]*/: 65001,\n  /* DEFAULT */\n  /*::[*/2 /*::]*/: 65001,\n  /* SYMBOL */\n  /*::[*/77 /*::]*/: 10000,\n  /* MAC */\n  /*::[*/128 /*::]*/: 932,\n  /* SHIFTJIS */\n  /*::[*/129 /*::]*/: 949,\n  /* HANGUL */\n  /*::[*/130 /*::]*/: 1361,\n  /* JOHAB */\n  /*::[*/134 /*::]*/: 936,\n  /* GB2312 */\n  /*::[*/136 /*::]*/: 950,\n  /* CHINESEBIG5 */\n  /*::[*/161 /*::]*/: 1253,\n  /* GREEK */\n  /*::[*/162 /*::]*/: 1254,\n  /* TURKISH */\n  /*::[*/163 /*::]*/: 1258,\n  /* VIETNAMESE */\n  /*::[*/177 /*::]*/: 1255,\n  /* HEBREW */\n  /*::[*/178 /*::]*/: 1256,\n  /* ARABIC */\n  /*::[*/186 /*::]*/: 1257,\n  /* BALTIC */\n  /*::[*/204 /*::]*/: 1251,\n  /* RUSSIAN */\n  /*::[*/222 /*::]*/: 874,\n  /* THAI */\n  /*::[*/238 /*::]*/: 1250,\n  /* EASTEUROPE */\n  /*::[*/255 /*::]*/: 1252,\n  /* OEM */\n  /*::[*/69 /*::]*/: 6969 /* MISC */\n} /*:any*/;\nvar set_ansi = function (cp /*:number*/) {\n  if (VALID_ANSI.indexOf(cp) == -1) return;\n  current_ansi = CS2CP[0] = cp;\n};\nfunction reset_ansi() {\n  set_ansi(1252);\n}\nvar set_cp = function (cp /*:number*/) {\n  current_codepage = cp;\n  set_ansi(cp);\n};\nfunction reset_cp() {\n  set_cp(1200);\n  reset_ansi();\n}\nfunction char_codes(data /*:string*/) /*:Array<number>*/{\n  var o /*:Array<number>*/ = [];\n  for (var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i);\n  return o;\n}\nfunction utf16leread(data /*:string*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data.charCodeAt(2 * i) + (data.charCodeAt(2 * i + 1) << 8));\n  return o.join(\"\");\n}\nfunction utf16beread(data /*:string*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data.charCodeAt(2 * i + 1) + (data.charCodeAt(2 * i) << 8));\n  return o.join(\"\");\n}\nvar debom = function (data /*:string*/) /*:string*/{\n  var c1 = data.charCodeAt(0),\n    c2 = data.charCodeAt(1);\n  if (c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n  if (c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n  if (c1 == 0xFEFF) return data.slice(1);\n  return data;\n};\nvar _getchar = function _gc1(x /*:number*/) /*:string*/{\n  return String.fromCharCode(x);\n};\nvar _getansi = function _ga1(x /*:number*/) /*:string*/{\n  return String.fromCharCode(x);\n};\nvar $cptable;\nfunction set_cptable(cptable) {\n  $cptable = cptable;\n  set_cp = function (cp /*:number*/) {\n    current_codepage = cp;\n    set_ansi(cp);\n  };\n  debom = function (data /*:string*/) {\n    if (data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) {\n      return $cptable.utils.decode(1200, char_codes(data.slice(2)));\n    }\n    return data;\n  };\n  _getchar = function _gc2(x /*:number*/) /*:string*/{\n    if (current_codepage === 1200) return String.fromCharCode(x);\n    return $cptable.utils.decode(current_codepage, [x & 255, x >> 8])[0];\n  };\n  _getansi = function _ga2(x /*:number*/) /*:string*/{\n    return $cptable.utils.decode(current_ansi, [x])[0];\n  };\n  cpdoit();\n}\nexport { set_cptable };\nvar DENSE = null;\nvar DIF_XL = true;\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  for (var i = 0; i < input.length;) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n  for (var i = 0; i < input.length;) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) {\n      o += String.fromCharCode(c2);\n    }\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) {\n      o += String.fromCharCode(c3);\n    }\n  }\n  return o;\n}\nvar has_buf = /*#__PURE__*/function () {\n  return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node;\n}();\nvar Buffer_from = /*#__PURE__*/function () {\n  if (typeof Buffer !== 'undefined') {\n    var nbfs = !Buffer.from;\n    if (!nbfs) try {\n      Buffer.from(\"foo\", \"utf8\");\n    } catch (e) {\n      nbfs = true;\n    }\n    return nbfs ? function (buf, enc) {\n      return enc ? new Buffer(buf, enc) : new Buffer(buf);\n    } : Buffer.from.bind(Buffer);\n  }\n  return function () {};\n}();\nfunction new_raw_buf(len /*:number*/) {\n  /* jshint -W056 */\n  if (has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\nfunction new_unsafe_buf(len /*:number*/) {\n  /* jshint -W056 */\n  if (has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\nvar s2a = function s2a(s /*:string*/) /*:any*/{\n  if (has_buf) return Buffer_from(s, \"binary\");\n  return s.split(\"\").map(function (x /*:string*/) /*:number*/{\n    return x.charCodeAt(0) & 0xff;\n  });\n};\nfunction s2ab(s /*:string*/) /*:any*/{\n  if (typeof ArrayBuffer === 'undefined') return s2a(s);\n  var buf = new ArrayBuffer(s.length),\n    view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\nfunction a2s(data /*:any*/) /*:string*/{\n  if (Array.isArray(data)) return data.map(function (c) {\n    return String.fromCharCode(c);\n  }).join(\"\");\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]);\n  return o.join(\"\");\n}\nfunction a2u(data /*:Array<number>*/) /*:Uint8Array*/{\n  if (typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n  return new Uint8Array(data);\n}\nfunction ab2a(data /*:ArrayBuffer|Uint8Array*/) /*:Array<number>*/{\n  if (typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n  if (data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n  /*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n  var o = new Array(data.length);\n  for (var i = 0; i < data.length; ++i) o[i] = data[i];\n  return o;\n}\nvar bconcat = has_buf ? function (bufs) {\n  return Buffer.concat(bufs.map(function (buf) {\n    return Buffer.isBuffer(buf) ? buf : Buffer_from(buf);\n  }));\n} : function (bufs) {\n  if (typeof Uint8Array !== \"undefined\") {\n    var i = 0,\n      maxlen = 0;\n    for (i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n    var o = new Uint8Array(maxlen);\n    var len = 0;\n    for (i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n      len = bufs[i].length;\n      if (bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);else if (typeof bufs[i] == \"string\") {\n        throw \"wtf\";\n      } else o.set(new Uint8Array(bufs[i]), maxlen);\n    }\n    return o;\n  }\n  return [].concat.apply([], bufs.map(function (buf) {\n    return Array.isArray(buf) ? buf : [].slice.call(buf);\n  }));\n};\nfunction utf8decode(content /*:string*/) {\n  var out = [],\n    widx = 0,\n    L = content.length + 250;\n  var o = new_raw_buf(content.length + 255);\n  for (var ridx = 0; ridx < content.length; ++ridx) {\n    var c = content.charCodeAt(ridx);\n    if (c < 0x80) o[widx++] = c;else if (c < 0x800) {\n      o[widx++] = 192 | c >> 6 & 31;\n      o[widx++] = 128 | c & 63;\n    } else if (c >= 0xD800 && c < 0xE000) {\n      c = (c & 1023) + 64;\n      var d = content.charCodeAt(++ridx) & 1023;\n      o[widx++] = 240 | c >> 8 & 7;\n      o[widx++] = 128 | c >> 2 & 63;\n      o[widx++] = 128 | d >> 6 & 15 | (c & 3) << 4;\n      o[widx++] = 128 | d & 63;\n    } else {\n      o[widx++] = 224 | c >> 12 & 15;\n      o[widx++] = 128 | c >> 6 & 63;\n      o[widx++] = 128 | c & 63;\n    }\n    if (widx > L) {\n      out.push(o.slice(0, widx));\n      widx = 0;\n      o = new_raw_buf(65535);\n      L = 65530;\n    }\n  }\n  out.push(o.slice(0, widx));\n  return bconcat(out);\n}\nvar chr0 = /\\u0000/g,\n  chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nfunction _strrev(x /*:string*/) /*:string*/{\n  var o = \"\",\n    i = x.length - 1;\n  while (i >= 0) o += x.charAt(i--);\n  return o;\n}\nfunction pad0(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nfunction pad_(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill(' ', d - t.length) + t;\n}\nfunction rpad_(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : t + fill(' ', d - t.length);\n}\nfunction pad0r1(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + Math.round(v);\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nfunction pad0r2(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nvar p2_32 = /*#__PURE__*/Math.pow(2, 32);\nfunction pad0r(v /*:any*/, d /*:number*/) /*:string*/{\n  if (v > p2_32 || v < -p2_32) return pad0r1(v, d);\n  var i = Math.round(v);\n  return pad0r2(i, d);\n}\n/* yes, in 2022 this is still faster than string compare */\nfunction SSF_isgeneral(s /*:string*/, i /*:?number*/) /*:boolean*/{\n  i = i || 0;\n  return s.length >= 7 + i && (s.charCodeAt(i) | 32) === 103 && (s.charCodeAt(i + 1) | 32) === 101 && (s.charCodeAt(i + 2) | 32) === 110 && (s.charCodeAt(i + 3) | 32) === 101 && (s.charCodeAt(i + 4) | 32) === 114 && (s.charCodeAt(i + 5) | 32) === 97 && (s.charCodeAt(i + 6) | 32) === 108;\n}\nvar days /*:Array<Array<string> >*/ = [['Sun', 'Sunday'], ['Mon', 'Monday'], ['Tue', 'Tuesday'], ['Wed', 'Wednesday'], ['Thu', 'Thursday'], ['Fri', 'Friday'], ['Sat', 'Saturday']];\nvar months /*:Array<Array<string> >*/ = [['J', 'Jan', 'January'], ['F', 'Feb', 'February'], ['M', 'Mar', 'March'], ['A', 'Apr', 'April'], ['M', 'May', 'May'], ['J', 'Jun', 'June'], ['J', 'Jul', 'July'], ['A', 'Aug', 'August'], ['S', 'Sep', 'September'], ['O', 'Oct', 'October'], ['N', 'Nov', 'November'], ['D', 'Dec', 'December']];\nfunction SSF_init_table(t /*:any*/) {\n  if (!t) t = {};\n  t[0] = 'General';\n  t[1] = '0';\n  t[2] = '0.00';\n  t[3] = '#,##0';\n  t[4] = '#,##0.00';\n  t[9] = '0%';\n  t[10] = '0.00%';\n  t[11] = '0.00E+00';\n  t[12] = '# ?/?';\n  t[13] = '# ??/??';\n  t[14] = 'm/d/yy';\n  t[15] = 'd-mmm-yy';\n  t[16] = 'd-mmm';\n  t[17] = 'mmm-yy';\n  t[18] = 'h:mm AM/PM';\n  t[19] = 'h:mm:ss AM/PM';\n  t[20] = 'h:mm';\n  t[21] = 'h:mm:ss';\n  t[22] = 'm/d/yy h:mm';\n  t[37] = '#,##0 ;(#,##0)';\n  t[38] = '#,##0 ;[Red](#,##0)';\n  t[39] = '#,##0.00;(#,##0.00)';\n  t[40] = '#,##0.00;[Red](#,##0.00)';\n  t[45] = 'mm:ss';\n  t[46] = '[h]:mm:ss';\n  t[47] = 'mmss.0';\n  t[48] = '##0.0E+0';\n  t[49] = '@';\n  t[56] = '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n  return t;\n}\n/* repeated to satiate webpack */\nvar table_fmt = {\n  0: 'General',\n  1: '0',\n  2: '0.00',\n  3: '#,##0',\n  4: '#,##0.00',\n  9: '0%',\n  10: '0.00%',\n  11: '0.00E+00',\n  12: '# ?/?',\n  13: '# ??/??',\n  14: 'm/d/yy',\n  15: 'd-mmm-yy',\n  16: 'd-mmm',\n  17: 'mmm-yy',\n  18: 'h:mm AM/PM',\n  19: 'h:mm:ss AM/PM',\n  20: 'h:mm',\n  21: 'h:mm:ss',\n  22: 'm/d/yy h:mm',\n  37: '#,##0 ;(#,##0)',\n  38: '#,##0 ;[Red](#,##0)',\n  39: '#,##0.00;(#,##0.00)',\n  40: '#,##0.00;[Red](#,##0.00)',\n  45: 'mm:ss',\n  46: '[h]:mm:ss',\n  47: 'mmss.0',\n  48: '##0.0E+0',\n  49: '@',\n  56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'\n};\n\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar SSF_default_map = {\n  5: 37,\n  6: 38,\n  7: 39,\n  8: 40,\n  //  5 -> 37 ...  8 -> 40\n\n  23: 0,\n  24: 0,\n  25: 0,\n  26: 0,\n  // 23 ->  0 ... 26 ->  0\n\n  27: 14,\n  28: 14,\n  29: 14,\n  30: 14,\n  31: 14,\n  // 27 -> 14 ... 31 -> 14\n\n  50: 14,\n  51: 14,\n  52: 14,\n  53: 14,\n  54: 14,\n  // 50 -> 14 ... 58 -> 14\n  55: 14,\n  56: 14,\n  57: 14,\n  58: 14,\n  59: 1,\n  60: 2,\n  61: 3,\n  62: 4,\n  // 59 ->  1 ... 62 ->  4\n\n  67: 9,\n  68: 10,\n  // 67 ->  9 ... 68 -> 10\n  69: 12,\n  70: 13,\n  71: 14,\n  // 69 -> 12 ... 71 -> 14\n  72: 14,\n  73: 15,\n  74: 16,\n  75: 17,\n  // 72 -> 14 ... 75 -> 17\n  76: 20,\n  77: 21,\n  78: 22,\n  // 76 -> 20 ... 78 -> 22\n  79: 45,\n  80: 46,\n  81: 47,\n  // 79 -> 45 ... 81 -> 47\n  82: 0 // 82 ->  0 ... 65536 -> 0 (omitted)\n};\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar SSF_default_str = {\n  //  5 -- Currency,   0 decimal, black negative\n  5: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  //  6 -- Currency,   0 decimal, red   negative\n  6: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  //  7 -- Currency,   2 decimal, black negative\n  7: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  //  8 -- Currency,   2 decimal, red   negative\n  8: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  // 41 -- Accounting, 0 decimal, No Symbol\n  41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n  // 42 -- Accounting, 0 decimal, $  Symbol\n  42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n  // 43 -- Accounting, 2 decimal, No Symbol\n  43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n  // 44 -- Accounting, 2 decimal, $  Symbol\n  44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\nfunction SSF_frac(x /*:number*/, D /*:number*/, mixed /*:?boolean*/) /*:Array<number>*/{\n  var sgn = x < 0 ? -1 : 1;\n  var B = x * sgn;\n  var P_2 = 0,\n    P_1 = 1,\n    P = 0;\n  var Q_2 = 1,\n    Q_1 = 0,\n    Q = 0;\n  var A = Math.floor(B);\n  while (Q_1 < D) {\n    A = Math.floor(B);\n    P = A * P_1 + P_2;\n    Q = A * Q_1 + Q_2;\n    if (B - A < 0.00000005) break;\n    B = 1 / (B - A);\n    P_2 = P_1;\n    P_1 = P;\n    Q_2 = Q_1;\n    Q_1 = Q;\n  }\n  if (Q > D) {\n    if (Q_1 > D) {\n      Q = Q_2;\n      P = P_2;\n    } else {\n      Q = Q_1;\n      P = P_1;\n    }\n  }\n  if (!mixed) return [0, sgn * P, Q];\n  var q = Math.floor(sgn * P / Q);\n  return [q, sgn * P - q * Q, Q];\n}\nfunction SSF_parse_date_code(v /*:number*/, opts /*:?any*/, b2 /*:?boolean*/) {\n  if (v > 2958465 || v < 0) return null;\n  var date = v | 0,\n    time = Math.floor(86400 * (v - date)),\n    dow = 0;\n  var dout = [];\n  var out = {\n    D: date,\n    T: time,\n    u: 86400 * (v - date) - time,\n    y: 0,\n    m: 0,\n    d: 0,\n    H: 0,\n    M: 0,\n    S: 0,\n    q: 0\n  };\n  if (Math.abs(out.u) < 1e-6) out.u = 0;\n  if (opts && opts.date1904) date += 1462;\n  if (out.u > 0.9999) {\n    out.u = 0;\n    if (++time == 86400) {\n      out.T = time = 0;\n      ++date;\n      ++out.D;\n    }\n  }\n  if (date === 60) {\n    dout = b2 ? [1317, 10, 29] : [1900, 2, 29];\n    dow = 3;\n  } else if (date === 0) {\n    dout = b2 ? [1317, 8, 29] : [1900, 1, 0];\n    dow = 6;\n  } else {\n    if (date > 60) --date;\n    /* 1 = Jan 1 1900 in Gregorian */\n    var d = new Date(1900, 0, 1);\n    d.setDate(d.getDate() + date - 1);\n    dout = [d.getFullYear(), d.getMonth() + 1, d.getDate()];\n    dow = d.getDay();\n    if (date < 60) dow = (dow + 6) % 7;\n    if (b2) dow = SSF_fix_hijri(d, dout);\n  }\n  out.y = dout[0];\n  out.m = dout[1];\n  out.d = dout[2];\n  out.S = time % 60;\n  time = Math.floor(time / 60);\n  out.M = time % 60;\n  time = Math.floor(time / 60);\n  out.H = time;\n  out.q = dow;\n  return out;\n}\nvar SSFbasedate = /*#__PURE__*/new Date(1899, 11, 31, 0, 0, 0);\nvar SSFdnthresh = /*#__PURE__*/SSFbasedate.getTime();\nvar SSFbase1904 = /*#__PURE__*/new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v /*:Date*/, date1904 /*:?boolean*/) /*:number*/{\n  var epoch = /*#__PURE__*/v.getTime();\n  if (date1904) epoch -= 1461 * 24 * 60 * 60 * 1000;else if (v >= SSFbase1904) epoch += 24 * 60 * 60 * 1000;\n  return (epoch - (SSFdnthresh + ( /*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/SSFbasedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n/* exponent >= -9 and <= 9 */\nfunction SSF_strip_decimal(o /*:string*/) /*:string*/{\n  return o.indexOf(\".\") == -1 ? o : o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)$/, \"$1\");\n}\n\n/* General Exponential always shows 2 digits exp and trims the mantissa */\nfunction SSF_normalize_exp(o /*:string*/) /*:string*/{\n  if (o.indexOf(\"E\") == -1) return o;\n  return o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/, \"$1E\").replace(/(E[+-])(\\d)$/, \"$10$2\");\n}\n\n/* exponent >= -9 and <= 9 */\nfunction SSF_small_exp(v /*:number*/) /*:string*/{\n  var w = v < 0 ? 12 : 11;\n  var o = SSF_strip_decimal(v.toFixed(12));\n  if (o.length <= w) return o;\n  o = v.toPrecision(10);\n  if (o.length <= w) return o;\n  return v.toExponential(5);\n}\n\n/* exponent >= 11 or <= -10 likely exponential */\nfunction SSF_large_exp(v /*:number*/) /*:string*/{\n  var o = SSF_strip_decimal(v.toFixed(11));\n  return o.length > (v < 0 ? 12 : 11) || o === \"0\" || o === \"-0\" ? v.toPrecision(6) : o;\n}\nfunction SSF_general_num(v /*:number*/) /*:string*/{\n  var V = Math.floor(Math.log(Math.abs(v)) * Math.LOG10E),\n    o;\n  if (V >= -4 && V <= -1) o = v.toPrecision(10 + V);else if (Math.abs(V) <= 9) o = SSF_small_exp(v);else if (V === 10) o = v.toFixed(10).substr(0, 12);else o = SSF_large_exp(v);\n  return SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));\n}\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction SSF_general(v /*:any*/, opts /*:any*/) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n    case 'boolean':\n      return v ? \"TRUE\" : \"FALSE\";\n    case 'number':\n      return (v | 0) === v ? v.toString(10) : SSF_general_num(v);\n    case 'undefined':\n      return \"\";\n    case 'object':\n      if (v == null) return \"\";\n      if (v instanceof Date) return SSF_format(14, datenum_local(v, opts && opts.date1904), opts);\n  }\n  throw new Error(\"unsupported value in General format: \" + v);\n}\nfunction SSF_fix_hijri(date /*:Date*/, o /*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if (date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\nfunction SSF_write_date(type /*:number*/, fmt /*:string*/, val, ss0 /*:?number*/) /*:string*/{\n  var o = \"\",\n    ss = 0,\n    tt = 0,\n    y = val.y,\n    out,\n    outl = 0;\n  switch (type) {\n    case 98:\n      /* 'b' buddhist year */\n      y = val.y + 543;\n    /* falls through */\n    case 121:\n      /* 'y' year */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = y % 100;\n          outl = 2;\n          break;\n        default:\n          out = y % 10000;\n          outl = 4;\n          break;\n      }\n      break;\n    case 109:\n      /* 'm' month */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.m;\n          outl = fmt.length;\n          break;\n        case 3:\n          return months[val.m - 1][1];\n        case 5:\n          return months[val.m - 1][0];\n        default:\n          return months[val.m - 1][2];\n      }\n      break;\n    case 100:\n      /* 'd' day */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.d;\n          outl = fmt.length;\n          break;\n        case 3:\n          return days[val.q][0];\n        default:\n          return days[val.q][1];\n      }\n      break;\n    case 104:\n      /* 'h' 12-hour */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = 1 + (val.H + 11) % 12;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad hour format: ' + fmt;\n      }\n      break;\n    case 72:\n      /* 'H' 24-hour */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.H;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad hour format: ' + fmt;\n      }\n      break;\n    case 77:\n      /* 'M' minutes */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.M;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad minute format: ' + fmt;\n      }\n      break;\n    case 115:\n      /* 's' seconds */\n      if (fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n      if (val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n      /*::if(!ss0) ss0 = 0; */\n      if (ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;else tt = ss0 === 1 ? 10 : 1;\n      ss = Math.round(tt * (val.S + val.u));\n      if (ss >= 60 * tt) ss = 0;\n      if (fmt === 's') return ss === 0 ? \"0\" : \"\" + ss / tt;\n      o = pad0(ss, 2 + ss0);\n      if (fmt === 'ss') return o.substr(0, 2);\n      return \".\" + o.substr(2, fmt.length - 1);\n    case 90:\n      /* 'Z' absolute time */\n      switch (fmt) {\n        case '[h]':\n        case '[hh]':\n          out = val.D * 24 + val.H;\n          break;\n        case '[m]':\n        case '[mm]':\n          out = (val.D * 24 + val.H) * 60 + val.M;\n          break;\n        case '[s]':\n        case '[ss]':\n          out = ((val.D * 24 + val.H) * 60 + val.M) * 60 + Math.round(val.S + val.u);\n          break;\n        default:\n          throw 'bad abstime format: ' + fmt;\n      }\n      outl = fmt.length === 3 ? 1 : 2;\n      break;\n    case 101:\n      /* 'e' era */\n      out = y;\n      outl = 1;\n      break;\n  }\n  var outstr = outl > 0 ? pad0(out, outl) : \"\";\n  return outstr;\n}\n\n/*jshint -W086 */\n/*jshint +W086 */\nfunction commaify(s /*:string*/) /*:string*/{\n  var w = 3;\n  if (s.length <= w) return s;\n  var j = s.length % w,\n    o = s.substr(0, j);\n  for (; j != s.length; j += w) o += (o.length > 0 ? \",\" : \"\") + s.substr(j, w);\n  return o;\n}\nvar pct1 = /%/g;\nfunction write_num_pct(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var sfmt = fmt.replace(pct1, \"\"),\n    mul = fmt.length - sfmt.length;\n  return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n}\nfunction write_num_cm(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var idx = fmt.length - 1;\n  while (fmt.charCodeAt(idx - 1) === 44) --idx;\n  return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n}\nfunction write_num_exp(fmt /*:string*/, val /*:number*/) /*:string*/{\n  var o /*:string*/;\n  var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n  if (fmt.match(/^#+0.0E\\+0$/)) {\n    if (val == 0) return \"0.0E+0\";else if (val < 0) return \"-\" + write_num_exp(fmt, -val);\n    var period = fmt.indexOf(\".\");\n    if (period === -1) period = fmt.indexOf('E');\n    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n    if (ee < 0) ee += period;\n    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n    if (o.indexOf(\"e\") === -1) {\n      var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n      if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);else o += \"E+\" + (fakee - ee);\n      while (o.substr(0, 2) === \"0.\") {\n        o = o.charAt(0) + o.substr(2, period) + \".\" + o.substr(2 + period);\n        o = o.replace(/^0+([1-9])/, \"$1\").replace(/^0+\\./, \"0.\");\n      }\n      o = o.replace(/\\+-/, \"-\");\n    }\n    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n      return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n    });\n  } else o = val.toExponential(idx);\n  if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n  if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n  return o.replace(\"e\", \"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r /*:Array<string>*/, aval /*:number*/, sign /*:string*/) /*:string*/{\n  var den = parseInt(r[4], 10),\n    rr = Math.round(aval * den),\n    base = Math.floor(rr / den);\n  var myn = rr - base * den,\n    myd = den;\n  return sign + (base === 0 ? \"\" : \"\" + base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn, r[1].length) + r[2] + \"/\" + r[3] + pad0(myd, r[4].length));\n}\nfunction write_num_f2(r /*:Array<string>*/, aval /*:number*/, sign /*:string*/) /*:string*/{\n  return sign + (aval === 0 ? \"\" : \"\" + aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str /*:string*/) /*:string*/{\n  var o = \"\",\n    cc;\n  for (var i = 0; i != str.length; ++i) switch (cc = str.charCodeAt(i)) {\n    case 35:\n      break;\n    case 63:\n      o += \" \";\n      break;\n    case 48:\n      o += \"0\";\n      break;\n    default:\n      o += String.fromCharCode(cc);\n  }\n  return o;\n}\nfunction rnd(val /*:number*/, d /*:number*/) /*:string*/{\n  var dd = Math.pow(10, d);\n  return \"\" + Math.round(val * dd) / dd;\n}\nfunction dec(val /*:number*/, d /*:number*/) /*:number*/{\n  var _frac = val - Math.floor(val),\n    dd = Math.pow(10, d);\n  if (d < ('' + Math.round(_frac * dd)).length) return 0;\n  return Math.round(_frac * dd);\n}\nfunction carry(val /*:number*/, d /*:number*/) /*:number*/{\n  if (d < ('' + Math.round((val - Math.floor(val)) * Math.pow(10, d))).length) {\n    return 1;\n  }\n  return 0;\n}\nfunction flr(val /*:number*/) /*:string*/{\n  if (val < 2147483647 && val > -2147483648) return \"\" + (val >= 0 ? val | 0 : val - 1 | 0);\n  return \"\" + Math.floor(val);\n}\nfunction write_num_flt(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n    var ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n    if (val >= 0) return write_num_flt('n', ffmt, val);\n    return '(' + write_num_flt('n', ffmt, -val) + ')';\n  }\n  if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n  if (fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n  if (fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n  if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_flt(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n  var o;\n  var r /*:?Array<string>*/,\n    ri,\n    ff,\n    aval = Math.abs(val),\n    sign = val < 0 ? \"-\" : \"\";\n  if (fmt.match(/^00+$/)) return sign + pad0r(aval, fmt.length);\n  if (fmt.match(/^[#?]+$/)) {\n    o = pad0r(val, 0);\n    if (o === \"0\") o = \"\";\n    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(frac1)) return write_num_f1(r, aval, sign);\n  if (fmt.match(/^#+0+$/)) return sign + pad0r(aval, fmt.length - fmt.indexOf(\"0\"));\n  if (r = fmt.match(dec1)) {\n    o = rnd(val, r[1].length).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1])).replace(/\\.(\\d*)$/, function ($$, $1) {\n      return \".\" + $1 + fill(\"0\", hashq( /*::(*/r /*::||[\"\"])*/[1]).length - $1.length);\n    });\n    return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n  }\n  fmt = fmt.replace(/^#+([0.])/, \"$1\");\n  if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n    return sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n  }\n  if (r = fmt.match(/^#{1,3},##0(\\.?)$/)) return sign + commaify(pad0r(aval, 0));\n  if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\" + (Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length), r[1].length);\n  }\n  if (r = fmt.match(/^#,#*,#0/)) return write_num_flt(type, fmt.replace(/^#,#*,/, \"\"), val);\n  if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n    o = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n    ri = 0;\n    return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n      return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n    }));\n  }\n  if (fmt.match(phone)) {\n    o = write_num_flt(type, \"##########\", val);\n    return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n  }\n  var oa = \"\";\n  if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min( /*::String(*/r[4] /*::)*/.length, 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, false);\n    o = \"\" + sign;\n    oa = write_num(\"n\", /*::String(*/r[1] /*::)*/, ff[1]);\n    if (oa.charAt(oa.length - 1) == \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n    o += oa + /*::String(*/r[2] /*::)*/ + \"/\" + /*::String(*/r[3] /*::)*/;\n    oa = rpad_(ff[2], ri);\n    if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n    o += oa;\n    return o;\n  }\n  if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, true);\n    return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n  }\n  if (r = fmt.match(/^[#0?]+$/)) {\n    o = pad0r(val, 0);\n    if (fmt.length <= o.length) return o;\n    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(/^([#0?]+)\\.([#0]+)$/)) {\n    o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n    ri = o.indexOf(\".\");\n    var lres = fmt.indexOf(\".\") - ri,\n      rres = fmt.length - o.length - lres;\n    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n  }\n  if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n    ri = dec(val, r[1].length);\n    return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n      return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n    }) + \".\" + pad0(ri, r[1].length);\n  }\n  switch (fmt) {\n    case \"###,##0.00\":\n      return write_num_flt(type, \"#,##0.00\", val);\n    case \"###,###\":\n    case \"##,###\":\n    case \"#,###\":\n      var x = commaify(pad0r(aval, 0));\n      return x !== \"0\" ? sign + x : \"\";\n    case \"###,###.00\":\n      return write_num_flt(type, \"###,##0.00\", val).replace(/^0\\./, \".\");\n    case \"#,###.00\":\n      return write_num_flt(type, \"#,##0.00\", val).replace(/^0\\./, \".\");\n    default:\n  }\n  throw new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var idx = fmt.length - 1;\n  while (fmt.charCodeAt(idx - 1) === 44) --idx;\n  return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n}\nfunction write_num_pct2(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var sfmt = fmt.replace(pct1, \"\"),\n    mul = fmt.length - sfmt.length;\n  return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n}\nfunction write_num_exp2(fmt /*:string*/, val /*:number*/) /*:string*/{\n  var o /*:string*/;\n  var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n  if (fmt.match(/^#+0.0E\\+0$/)) {\n    if (val == 0) return \"0.0E+0\";else if (val < 0) return \"-\" + write_num_exp2(fmt, -val);\n    var period = fmt.indexOf(\".\");\n    if (period === -1) period = fmt.indexOf('E');\n    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n    if (ee < 0) ee += period;\n    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n    if (!o.match(/[Ee]/)) {\n      var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n      if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);else o += \"E+\" + (fakee - ee);\n      o = o.replace(/\\+-/, \"-\");\n    }\n    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n      return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n    });\n  } else o = val.toExponential(idx);\n  if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n  if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n  return o.replace(\"e\", \"E\");\n}\nfunction write_num_int(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n    var ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n    if (val >= 0) return write_num_int('n', ffmt, val);\n    return '(' + write_num_int('n', ffmt, -val) + ')';\n  }\n  if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n  if (fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n  if (fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n  if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_int(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n  var o;\n  var r /*:?Array<string>*/,\n    ri,\n    ff,\n    aval = Math.abs(val),\n    sign = val < 0 ? \"-\" : \"\";\n  if (fmt.match(/^00+$/)) return sign + pad0(aval, fmt.length);\n  if (fmt.match(/^[#?]+$/)) {\n    o = \"\" + val;\n    if (val === 0) o = \"\";\n    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(frac1)) return write_num_f2(r, aval, sign);\n  if (fmt.match(/^#+0+$/)) return sign + pad0(aval, fmt.length - fmt.indexOf(\"0\"));\n  if (r = fmt.match(dec1)) {\n    /*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n    o = (\"\" + val).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1]));\n    o = o.replace(/\\.(\\d*)$/, function ($$, $1) {\n      /*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n      return \".\" + $1 + fill(\"0\", hashq(r[1]).length - $1.length);\n    });\n    return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n  }\n  fmt = fmt.replace(/^#+([0.])/, \"$1\");\n  if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n    return sign + (\"\" + aval).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n  }\n  if (r = fmt.match(/^#{1,3},##0(\\.?)$/)) return sign + commaify(\"\" + aval);\n  if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\" + val) + \".\" + fill('0', r[1].length);\n  }\n  if (r = fmt.match(/^#,#*,#0/)) return write_num_int(type, fmt.replace(/^#,#*,/, \"\"), val);\n  if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n    o = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n    ri = 0;\n    return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n      return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n    }));\n  }\n  if (fmt.match(phone)) {\n    o = write_num_int(type, \"##########\", val);\n    return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n  }\n  var oa = \"\";\n  if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min( /*::String(*/r[4] /*::)*/.length, 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, false);\n    o = \"\" + sign;\n    oa = write_num(\"n\", /*::String(*/r[1] /*::)*/, ff[1]);\n    if (oa.charAt(oa.length - 1) == \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n    o += oa + /*::String(*/r[2] /*::)*/ + \"/\" + /*::String(*/r[3] /*::)*/;\n    oa = rpad_(ff[2], ri);\n    if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n    o += oa;\n    return o;\n  }\n  if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, true);\n    return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n  }\n  if (r = fmt.match(/^[#0?]+$/)) {\n    o = \"\" + val;\n    if (fmt.length <= o.length) return o;\n    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(/^([#0]+)\\.([#0]+)$/)) {\n    o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n    ri = o.indexOf(\".\");\n    var lres = fmt.indexOf(\".\") - ri,\n      rres = fmt.length - o.length - lres;\n    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n  }\n  if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\" + val).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n      return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n    }) + \".\" + pad0(0, r[1].length);\n  }\n  switch (fmt) {\n    case \"###,###\":\n    case \"##,###\":\n    case \"#,###\":\n      var x = commaify(\"\" + aval);\n      return x !== \"0\" ? sign + x : \"\";\n    default:\n      if (fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0, fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n  }\n  throw new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  return (val | 0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n}\nfunction SSF_split_fmt(fmt /*:string*/) /*:Array<string>*/{\n  var out /*:Array<string>*/ = [];\n  var in_str = false /*, cc*/;\n  for (var i = 0, j = 0; i < fmt.length; ++i) switch (( /*cc=*/fmt.charCodeAt(i))) {\n    case 34:\n      /* '\"' */\n      in_str = !in_str;\n      break;\n    case 95:\n    case 42:\n    case 92:\n      /* '_' '*' '\\\\' */\n      ++i;\n      break;\n    case 59:\n      /* ';' */\n      out[out.length] = fmt.substr(j, i - j);\n      j = i + 1;\n  }\n  out[out.length] = fmt.substr(j);\n  if (in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n  return out;\n}\nvar SSF_abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt /*:string*/) /*:boolean*/{\n  var i = 0,\n    /*cc = 0,*/c = \"\",\n    o = \"\";\n  while (i < fmt.length) {\n    switch (c = fmt.charAt(i)) {\n      case 'G':\n        if (SSF_isgeneral(fmt, i)) i += 6;\n        i++;\n        break;\n      case '\"':\n        for (; ( /*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) {/*empty*/}\n        ++i;\n        break;\n      case '\\\\':\n        i += 2;\n        break;\n      case '_':\n        i += 2;\n        break;\n      case '@':\n        ++i;\n        break;\n      case 'B':\n      case 'b':\n        if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") return true;\n      /* falls through */\n      case 'M':\n      case 'D':\n      case 'Y':\n      case 'H':\n      case 'S':\n      case 'E':\n      /* falls through */\n      case 'm':\n      case 'd':\n      case 'y':\n      case 'h':\n      case 's':\n      case 'e':\n      case 'g':\n        return true;\n      case 'A':\n      case 'a':\n      case '上':\n        if (fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n        if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n        if (fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n        ++i;\n        break;\n      case '[':\n        o = c;\n        while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n        if (o.match(SSF_abstime)) return true;\n        break;\n      case '.':\n      /* falls through */\n      case '0':\n      case '#':\n        while (i < fmt.length && (\"0#?.,E+-%\".indexOf(c = fmt.charAt(++i)) > -1 || c == '\\\\' && fmt.charAt(i + 1) == \"-\" && \"0#\".indexOf(fmt.charAt(i + 2)) > -1)) {/* empty */}\n        break;\n      case '?':\n        while (fmt.charAt(++i) === c) {/* empty */}\n        break;\n      case '*':\n        ++i;\n        if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i;\n        break;\n      case '(':\n      case ')':\n        ++i;\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) {/* empty */}\n        break;\n      case ' ':\n        ++i;\n        break;\n      default:\n        ++i;\n        break;\n    }\n  }\n  return false;\n}\nfunction eval_fmt(fmt /*:string*/, v /*:any*/, opts /*:any*/, flen /*:number*/) {\n  var out = [],\n    o = \"\",\n    i = 0,\n    c = \"\",\n    lst = 't',\n    dt,\n    j,\n    cc;\n  var hr = 'H';\n  /* Tokenize */\n  while (i < fmt.length) {\n    switch (c = fmt.charAt(i)) {\n      case 'G':\n        /* General */\n        if (!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n        out[out.length] = {\n          t: 'G',\n          v: 'General'\n        };\n        i += 7;\n        break;\n      case '\"':\n        /* Literal text */\n        for (o = \"\"; (cc = fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n        out[out.length] = {\n          t: 't',\n          v: o\n        };\n        ++i;\n        break;\n      case '\\\\':\n        var w = fmt.charAt(++i),\n          t = w === \"(\" || w === \")\" ? w : 't';\n        out[out.length] = {\n          t: t,\n          v: w\n        };\n        ++i;\n        break;\n      case '_':\n        out[out.length] = {\n          t: 't',\n          v: \" \"\n        };\n        i += 2;\n        break;\n      case '@':\n        /* Text Placeholder */\n        out[out.length] = {\n          t: 'T',\n          v: v\n        };\n        ++i;\n        break;\n      case 'B':\n      case 'b':\n        if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") {\n          if (dt == null) {\n            dt = SSF_parse_date_code(v, opts, fmt.charAt(i + 1) === \"2\");\n            if (dt == null) return \"\";\n          }\n          out[out.length] = {\n            t: 'X',\n            v: fmt.substr(i, 2)\n          };\n          lst = c;\n          i += 2;\n          break;\n        }\n      /* falls through */\n      case 'M':\n      case 'D':\n      case 'Y':\n      case 'H':\n      case 'S':\n      case 'E':\n        c = c.toLowerCase();\n      /* falls through */\n      case 'm':\n      case 'd':\n      case 'y':\n      case 'h':\n      case 's':\n      case 'e':\n      case 'g':\n        if (v < 0) return \"\";\n        if (dt == null) {\n          dt = SSF_parse_date_code(v, opts);\n          if (dt == null) return \"\";\n        }\n        o = c;\n        while (++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o += c;\n        if (c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n        if (c === 'h') c = hr;\n        out[out.length] = {\n          t: c,\n          v: o\n        };\n        lst = c;\n        break;\n      case 'A':\n      case 'a':\n      case '上':\n        var q = {\n          t: c,\n          v: c\n        };\n        if (dt == null) dt = SSF_parse_date_code(v, opts);\n        if (fmt.substr(i, 3).toUpperCase() === \"A/P\") {\n          if (dt != null) q.v = dt.H >= 12 ? \"P\" : \"A\";\n          q.t = 'T';\n          hr = 'h';\n          i += 3;\n        } else if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") {\n          if (dt != null) q.v = dt.H >= 12 ? \"PM\" : \"AM\";\n          q.t = 'T';\n          i += 5;\n          hr = 'h';\n        } else if (fmt.substr(i, 5).toUpperCase() === \"上午/下午\") {\n          if (dt != null) q.v = dt.H >= 12 ? \"下午\" : \"上午\";\n          q.t = 'T';\n          i += 5;\n          hr = 'h';\n        } else {\n          q.t = \"t\";\n          ++i;\n        }\n        if (dt == null && q.t === 'T') return \"\";\n        out[out.length] = q;\n        lst = c;\n        break;\n      case '[':\n        o = c;\n        while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n        if (o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n        if (o.match(SSF_abstime)) {\n          if (dt == null) {\n            dt = SSF_parse_date_code(v, opts);\n            if (dt == null) return \"\";\n          }\n          out[out.length] = {\n            t: 'Z',\n            v: o.toLowerCase()\n          };\n          lst = o.charAt(1);\n        } else if (o.indexOf(\"$\") > -1) {\n          o = (o.match(/\\$([^-\\[\\]]*)/) || [])[1] || \"$\";\n          if (!fmt_is_date(fmt)) out[out.length] = {\n            t: 't',\n            v: o\n          };\n        }\n        break;\n      /* Numbers */\n      case '.':\n        if (dt != null) {\n          o = c;\n          while (++i < fmt.length && (c = fmt.charAt(i)) === \"0\") o += c;\n          out[out.length] = {\n            t: 's',\n            v: o\n          };\n          break;\n        }\n      /* falls through */\n      case '0':\n      case '#':\n        o = c;\n        while (++i < fmt.length && \"0#?.,E+-%\".indexOf(c = fmt.charAt(i)) > -1) o += c;\n        out[out.length] = {\n          t: 'n',\n          v: o\n        };\n        break;\n      case '?':\n        o = c;\n        while (fmt.charAt(++i) === c) o += c;\n        out[out.length] = {\n          t: c,\n          v: o\n        };\n        lst = c;\n        break;\n      case '*':\n        ++i;\n        if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i;\n        break;\n      // **\n      case '(':\n      case ')':\n        out[out.length] = {\n          t: flen === 1 ? 't' : c,\n          v: c\n        };\n        ++i;\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        o = c;\n        while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o += fmt.charAt(i);\n        out[out.length] = {\n          t: 'D',\n          v: o\n        };\n        break;\n      case ' ':\n        out[out.length] = {\n          t: c,\n          v: c\n        };\n        ++i;\n        break;\n      case '$':\n        out[out.length] = {\n          t: 't',\n          v: '$'\n        };\n        ++i;\n        break;\n      default:\n        if (\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n        out[out.length] = {\n          t: 't',\n          v: c\n        };\n        ++i;\n        break;\n    }\n  }\n\n  /* Scan for date/time parts */\n  var bt = 0,\n    ss0 = 0,\n    ssm;\n  for (i = out.length - 1, lst = 't'; i >= 0; --i) {\n    switch (out[i].t) {\n      case 'h':\n      case 'H':\n        out[i].t = hr;\n        lst = 'h';\n        if (bt < 1) bt = 1;\n        break;\n      case 's':\n        if (ssm = out[i].v.match(/\\.0+$/)) ss0 = Math.max(ss0, ssm[0].length - 1);\n        if (bt < 3) bt = 3;\n      /* falls through */\n      case 'd':\n      case 'y':\n      case 'M':\n      case 'e':\n        lst = out[i].t;\n        break;\n      case 'm':\n        if (lst === 's') {\n          out[i].t = 'M';\n          if (bt < 2) bt = 2;\n        }\n        break;\n      case 'X':\n        /*if(out[i].v === \"B2\");*/\n        break;\n      case 'Z':\n        if (bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n        if (bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n        if (bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n    }\n  }\n  /* time rounding depends on presence of minute / second / usec fields */\n  switch (bt) {\n    case 0:\n      break;\n    case 1:\n      /*::if(!dt) break;*/\n      if (dt.u >= 0.5) {\n        dt.u = 0;\n        ++dt.S;\n      }\n      if (dt.S >= 60) {\n        dt.S = 0;\n        ++dt.M;\n      }\n      if (dt.M >= 60) {\n        dt.M = 0;\n        ++dt.H;\n      }\n      break;\n    case 2:\n      /*::if(!dt) break;*/\n      if (dt.u >= 0.5) {\n        dt.u = 0;\n        ++dt.S;\n      }\n      if (dt.S >= 60) {\n        dt.S = 0;\n        ++dt.M;\n      }\n      break;\n  }\n\n  /* replace fields */\n  var nstr = \"\",\n    jj;\n  for (i = 0; i < out.length; ++i) {\n    switch (out[i].t) {\n      case 't':\n      case 'T':\n      case ' ':\n      case 'D':\n        break;\n      case 'X':\n        out[i].v = \"\";\n        out[i].t = \";\";\n        break;\n      case 'd':\n      case 'm':\n      case 'y':\n      case 'h':\n      case 'H':\n      case 'M':\n      case 's':\n      case 'e':\n      case 'b':\n      case 'Z':\n        /*::if(!dt) throw \"unreachable\"; */\n        out[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n        out[i].t = 't';\n        break;\n      case 'n':\n      case '?':\n        jj = i + 1;\n        while (out[jj] != null && ((c = out[jj].t) === \"?\" || c === \"D\" || (c === \" \" || c === \"t\") && out[jj + 1] != null && (out[jj + 1].t === '?' || out[jj + 1].t === \"t\" && out[jj + 1].v === '/') || out[i].t === '(' && (c === ' ' || c === 'n' || c === ')') || c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj + 1] != null && out[jj + 1].t == '?'))) {\n          out[i].v += out[jj].v;\n          out[jj] = {\n            v: \"\",\n            t: \";\"\n          };\n          ++jj;\n        }\n        nstr += out[i].v;\n        i = jj - 1;\n        break;\n      case 'G':\n        out[i].t = 't';\n        out[i].v = SSF_general(v, opts);\n        break;\n    }\n  }\n  var vv = \"\",\n    myv,\n    ostr;\n  if (nstr.length > 0) {\n    if (nstr.charCodeAt(0) == 40) /* '(' */{\n        myv = v < 0 && nstr.charCodeAt(0) === 45 ? -v : v;\n        ostr = write_num('n', nstr, myv);\n      } else {\n      myv = v < 0 && flen > 1 ? -v : v;\n      ostr = write_num('n', nstr, myv);\n      if (myv < 0 && out[0] && out[0].t == 't') {\n        ostr = ostr.substr(1);\n        out[0].v = \"-\" + out[0].v;\n      }\n    }\n    jj = ostr.length - 1;\n    var decpt = out.length;\n    for (i = 0; i < out.length; ++i) if (out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) {\n      decpt = i;\n      break;\n    }\n    var lasti = out.length;\n    if (decpt === out.length && ostr.indexOf(\"E\") === -1) {\n      for (i = out.length - 1; i >= 0; --i) {\n        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n        if (jj >= out[i].v.length - 1) {\n          jj -= out[i].v.length;\n          out[i].v = ostr.substr(jj + 1, out[i].v.length);\n        } else if (jj < 0) out[i].v = \"\";else {\n          out[i].v = ostr.substr(0, jj + 1);\n          jj = -1;\n        }\n        out[i].t = 't';\n        lasti = i;\n      }\n      if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n    } else if (decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n      jj = ostr.indexOf(\".\") - 1;\n      for (i = decpt; i >= 0; --i) {\n        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n        j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") - 1 : out[i].v.length - 1;\n        vv = out[i].v.substr(j + 1);\n        for (; j >= 0; --j) {\n          if (jj >= 0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n        }\n        out[i].v = vv;\n        out[i].t = 't';\n        lasti = i;\n      }\n      if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n      jj = ostr.indexOf(\".\") + 1;\n      for (i = decpt; i < out.length; ++i) {\n        if (out[i] == null || 'n?('.indexOf(out[i].t) === -1 && i !== decpt) continue;\n        j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") + 1 : 0;\n        vv = out[i].v.substr(0, j);\n        for (; j < out[i].v.length; ++j) {\n          if (jj < ostr.length) vv += ostr.charAt(jj++);\n        }\n        out[i].v = vv;\n        out[i].t = 't';\n        lasti = i;\n      }\n    }\n  }\n  for (i = 0; i < out.length; ++i) if (out[i] != null && 'n?'.indexOf(out[i].t) > -1) {\n    myv = flen > 1 && v < 0 && i > 0 && out[i - 1].v === \"-\" ? -v : v;\n    out[i].v = write_num(out[i].t, out[i].v, myv);\n    out[i].t = 't';\n  }\n  var retval = \"\";\n  for (i = 0; i !== out.length; ++i) if (out[i] != null) retval += out[i].v;\n  return retval;\n}\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n  if (rr == null) return false;\n  var thresh = parseFloat(rr[2]);\n  switch (rr[1]) {\n    case \"=\":\n      if (v == thresh) return true;\n      break;\n    case \">\":\n      if (v > thresh) return true;\n      break;\n    case \"<\":\n      if (v < thresh) return true;\n      break;\n    case \"<>\":\n      if (v != thresh) return true;\n      break;\n    case \">=\":\n      if (v >= thresh) return true;\n      break;\n    case \"<=\":\n      if (v <= thresh) return true;\n      break;\n  }\n  return false;\n}\nfunction choose_fmt(f /*:string*/, v /*:any*/) {\n  var fmt = SSF_split_fmt(f);\n  var l = fmt.length,\n    lat = fmt[l - 1].indexOf(\"@\");\n  if (l < 4 && lat > -1) --l;\n  if (fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n  if (typeof v !== \"number\") return [4, fmt.length === 4 || lat > -1 ? fmt[fmt.length - 1] : \"@\"];\n  switch (fmt.length) {\n    case 1:\n      fmt = lat > -1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"];\n      break;\n    case 2:\n      fmt = lat > -1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"];\n      break;\n    case 3:\n      fmt = lat > -1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"];\n      break;\n    case 4:\n      break;\n  }\n  var ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n  if (fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n  if (fmt[0].match(/\\[[=<>]/) != null || fmt[1].match(/\\[[=<>]/) != null) {\n    var m1 = fmt[0].match(cfregex2);\n    var m2 = fmt[1].match(cfregex2);\n    return chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n  }\n  return [l, ff];\n}\nfunction SSF_format(fmt /*:string|number*/, v /*:any*/, o /*:?any*/) {\n  if (o == null) o = {};\n  var sfmt = \"\";\n  switch (typeof fmt) {\n    case \"string\":\n      if (fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;else sfmt = fmt;\n      break;\n    case \"number\":\n      if (fmt == 14 && o.dateNF) sfmt = o.dateNF;else sfmt = (o.table != null ? o.table /*:any*/ : table_fmt)[fmt];\n      if (sfmt == null) sfmt = o.table && o.table[SSF_default_map[fmt]] || table_fmt[SSF_default_map[fmt]];\n      if (sfmt == null) sfmt = SSF_default_str[fmt] || \"General\";\n      break;\n  }\n  if (SSF_isgeneral(sfmt, 0)) return SSF_general(v, o);\n  if (v instanceof Date) v = datenum_local(v, o.date1904);\n  var f = choose_fmt(sfmt, v);\n  if (SSF_isgeneral(f[1])) return SSF_general(v, o);\n  if (v === true) v = \"TRUE\";else if (v === false) v = \"FALSE\";else if (v === \"\" || v == null) return \"\";\n  return eval_fmt(f[1], v, o, f[0]);\n}\nfunction SSF_load(fmt /*:string*/, idx /*:?number*/) /*:number*/{\n  if (typeof idx != 'number') {\n    idx = +idx || -1;\n    /*::if(typeof idx != 'number') return 0x188; */\n    for (var i = 0; i < 0x0188; ++i) {\n      /*::if(typeof idx != 'number') return 0x188; */\n      if (table_fmt[i] == undefined) {\n        if (idx < 0) idx = i;\n        continue;\n      }\n      if (table_fmt[i] == fmt) {\n        idx = i;\n        break;\n      }\n    }\n    /*::if(typeof idx != 'number') return 0x188; */\n    if (idx < 0) idx = 0x187;\n  }\n  /*::if(typeof idx != 'number') return 0x188; */\n  table_fmt[idx] = fmt;\n  return idx;\n}\nfunction SSF_load_table(tbl /*:SSFTable*/) /*:void*/{\n  for (var i = 0; i != 0x0188; ++i) if (tbl[i] !== undefined) SSF_load(tbl[i], i);\n}\nfunction make_ssf() {\n  table_fmt = SSF_init_table();\n}\nvar SSF = {\n  format: SSF_format,\n  load: SSF_load,\n  _table: table_fmt,\n  load_table: SSF_load_table,\n  parse_date_code: SSF_parse_date_code,\n  is_date: fmt_is_date,\n  get_table: function get_table() {\n    return SSF._table = table_fmt;\n  }\n};\nvar SSFImplicit /*{[number]:string}*/ = {\n  \"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  \"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  \"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  \"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  \"23\": 'General',\n  \"24\": 'General',\n  \"25\": 'General',\n  \"26\": 'General',\n  \"27\": 'm/d/yy',\n  \"28\": 'm/d/yy',\n  \"29\": 'm/d/yy',\n  \"30\": 'm/d/yy',\n  \"31\": 'm/d/yy',\n  \"32\": 'h:mm:ss',\n  \"33\": 'h:mm:ss',\n  \"34\": 'h:mm:ss',\n  \"35\": 'h:mm:ss',\n  \"36\": 'm/d/yy',\n  \"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n  \"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n  \"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n  \"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n  \"50\": 'm/d/yy',\n  \"51\": 'm/d/yy',\n  \"52\": 'm/d/yy',\n  \"53\": 'm/d/yy',\n  \"54\": 'm/d/yy',\n  \"55\": 'm/d/yy',\n  \"56\": 'm/d/yy',\n  \"57\": 'm/d/yy',\n  \"58\": 'm/d/yy',\n  \"59\": '0',\n  \"60\": '0.00',\n  \"61\": '#,##0',\n  \"62\": '#,##0.00',\n  \"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  \"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  \"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  \"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  \"67\": '0%',\n  \"68\": '0.00%',\n  \"69\": '# ?/?',\n  \"70\": '# ??/??',\n  \"71\": 'm/d/yy',\n  \"72\": 'm/d/yy',\n  \"73\": 'd-mmm-yy',\n  \"74\": 'd-mmm',\n  \"75\": 'mmm-yy',\n  \"76\": 'h:mm',\n  \"77\": 'h:mm:ss',\n  \"78\": 'm/d/yy h:mm',\n  \"79\": 'mm:ss',\n  \"80\": '[h]:mm:ss',\n  \"81\": 'mmss.0'\n} /*:any*/;\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF /*:string|number*/) /*:RegExp*/{\n  var fmt = typeof dateNF == \"number\" ? table_fmt[dateNF] : dateNF;\n  fmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n  return new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str /*:string*/, dateNF /*:string*/, match /*:Array<string>*/) /*:string*/{\n  var Y = -1,\n    m = -1,\n    d = -1,\n    H = -1,\n    M = -1,\n    S = -1;\n  (dateNF.match(dateNFregex) || []).forEach(function (n, i) {\n    var v = parseInt(match[i + 1], 10);\n    switch (n.toLowerCase().charAt(0)) {\n      case 'y':\n        Y = v;\n        break;\n      case 'd':\n        d = v;\n        break;\n      case 'h':\n        H = v;\n        break;\n      case 's':\n        S = v;\n        break;\n      case 'm':\n        if (H >= 0) M = v;else m = v;\n        break;\n    }\n  });\n  if (S >= 0 && M == -1 && m >= 0) {\n    M = m;\n    m = -1;\n  }\n  var datestr = (\"\" + (Y >= 0 ? Y : new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m >= 1 ? m : 1)).slice(-2) + \"-\" + (\"00\" + (d >= 1 ? d : 1)).slice(-2);\n  if (datestr.length == 7) datestr = \"0\" + datestr;\n  if (datestr.length == 8) datestr = \"20\" + datestr;\n  var timestr = (\"00\" + (H >= 0 ? H : 0)).slice(-2) + \":\" + (\"00\" + (M >= 0 ? M : 0)).slice(-2) + \":\" + (\"00\" + (S >= 0 ? S : 0)).slice(-2);\n  if (H == -1 && M == -1 && S == -1) return datestr;\n  if (Y == -1 && m == -1 && d == -1) return timestr;\n  return datestr + \"T\" + timestr;\n}\n\n/*::\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global Uint8Array:false, Uint16Array:false */\n\n/*::\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = /*#__PURE__*/function () {\n  var CRC32 = {};\n  CRC32.version = '1.2.0';\n  /* see perf/crc32table.js */\n  /*global Int32Array */\n  function signed_crc_table() /*:any*/{\n    var c = 0,\n      table /*:Array<number>*/ = new Array(256);\n    for (var n = 0; n != 256; ++n) {\n      c = n;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      table[n] = c;\n    }\n    return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n  }\n  var T0 = signed_crc_table();\n  function slice_by_16_tables(T) {\n    var c = 0,\n      v = 0,\n      n = 0,\n      table /*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096);\n    for (n = 0; n != 256; ++n) table[n] = T[n];\n    for (n = 0; n != 256; ++n) {\n      v = T[n];\n      for (c = 256 + n; c < 4096; c += 256) v = table[c] = v >>> 8 ^ T[v & 0xFF];\n    }\n    var out = [];\n    for (n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n    return out;\n  }\n  var TT = slice_by_16_tables(T0);\n  var T1 = TT[0],\n    T2 = TT[1],\n    T3 = TT[2],\n    T4 = TT[3],\n    T5 = TT[4];\n  var T6 = TT[5],\n    T7 = TT[6],\n    T8 = TT[7],\n    T9 = TT[8],\n    Ta = TT[9];\n  var Tb = TT[10],\n    Tc = TT[11],\n    Td = TT[12],\n    Te = TT[13],\n    Tf = TT[14];\n  function crc32_bstr(bstr /*:string*/, seed /*:number*/) /*:number*/{\n    var C = seed /*:: ? 0 : 0 */ ^ -1;\n    for (var i = 0, L = bstr.length; i < L;) C = C >>> 8 ^ T0[(C ^ bstr.charCodeAt(i++)) & 0xFF];\n    return ~C;\n  }\n  function crc32_buf(B /*:Uint8Array|Array<number>*/, seed /*:number*/) /*:number*/{\n    var C = seed /*:: ? 0 : 0 */ ^ -1,\n      L = B.length - 15,\n      i = 0;\n    for (; i < L;) C = Tf[B[i++] ^ C & 255] ^ Te[B[i++] ^ C >> 8 & 255] ^ Td[B[i++] ^ C >> 16 & 255] ^ Tc[B[i++] ^ C >>> 24] ^ Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^ T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^ T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n    L += 15;\n    while (i < L) C = C >>> 8 ^ T0[(C ^ B[i++]) & 0xFF];\n    return ~C;\n  }\n  function crc32_str(str /*:string*/, seed /*:number*/) /*:number*/{\n    var C = seed ^ -1;\n    for (var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n      c = str.charCodeAt(i++);\n      if (c < 0x80) {\n        C = C >>> 8 ^ T0[(C ^ c) & 0xFF];\n      } else if (c < 0x800) {\n        C = C >>> 8 ^ T0[(C ^ (192 | c >> 6 & 31)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      } else if (c >= 0xD800 && c < 0xE000) {\n        c = (c & 1023) + 64;\n        d = str.charCodeAt(i++) & 1023;\n        C = C >>> 8 ^ T0[(C ^ (240 | c >> 8 & 7)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 2 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d >> 6 & 15 | (c & 3) << 4)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d & 63)) & 0xFF];\n      } else {\n        C = C >>> 8 ^ T0[(C ^ (224 | c >> 12 & 15)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 6 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      }\n    }\n    return ~C;\n  }\n  CRC32.table = T0;\n  CRC32.bstr = crc32_bstr;\n  CRC32.buf = crc32_buf;\n  CRC32.str = crc32_str;\n  return CRC32;\n}();\n/* [MS-CFB] v20171201 */\nvar CFB = /*#__PURE__*/function _CFB() {\n  var exports = {};\n  exports.version = '1.2.1';\n  /* [MS-CFB] 2.6.4 */\n  function namecmp(l /*:string*/, r /*:string*/) /*:number*/{\n    var L = l.split(\"/\"),\n      R = r.split(\"/\");\n    for (var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n      if (c = L[i].length - R[i].length) return c;\n      if (L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n    }\n    return L.length - R.length;\n  }\n  function dirname(p /*:string*/) /*:string*/{\n    if (p.charAt(p.length - 1) == \"/\") return p.slice(0, -1).indexOf(\"/\") === -1 ? p : dirname(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(0, c + 1);\n  }\n  function filename(p /*:string*/) /*:string*/{\n    if (p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(c + 1);\n  }\n  /* -------------------------------------------------------------------------- */\n  /* DOS Date format:\n     high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n     add 1980 to stored year\n     stored second should be doubled\n  */\n\n  /* write JS date to buf as a DOS date */\n  function write_dos_date(buf /*:CFBlob*/, date /*:Date|string*/) {\n    if (typeof date === \"string\") date = new Date(date);\n    var hms /*:number*/ = date.getHours();\n    hms = hms << 6 | date.getMinutes();\n    hms = hms << 5 | date.getSeconds() >>> 1;\n    buf.write_shift(2, hms);\n    var ymd /*:number*/ = date.getFullYear() - 1980;\n    ymd = ymd << 4 | date.getMonth() + 1;\n    ymd = ymd << 5 | date.getDate();\n    buf.write_shift(2, ymd);\n  }\n\n  /* read four bytes from buf and interpret as a DOS date */\n  function parse_dos_date(buf /*:CFBlob*/) /*:Date*/{\n    var hms = buf.read_shift(2) & 0xFFFF;\n    var ymd = buf.read_shift(2) & 0xFFFF;\n    var val = new Date();\n    var d = ymd & 0x1F;\n    ymd >>>= 5;\n    var m = ymd & 0x0F;\n    ymd >>>= 4;\n    val.setMilliseconds(0);\n    val.setFullYear(ymd + 1980);\n    val.setMonth(m - 1);\n    val.setDate(d);\n    var S = hms & 0x1F;\n    hms >>>= 5;\n    var M = hms & 0x3F;\n    hms >>>= 6;\n    val.setHours(hms);\n    val.setMinutes(M);\n    val.setSeconds(S << 1);\n    return val;\n  }\n  function parse_extra_field(blob /*:CFBlob*/) /*:any*/{\n    prep_blob(blob, 0);\n    var o = /*::(*/{} /*:: :any)*/;\n    var flags = 0;\n    while (blob.l <= blob.length - 4) {\n      var type = blob.read_shift(2);\n      var sz = blob.read_shift(2),\n        tgt = blob.l + sz;\n      var p = {};\n      switch (type) {\n        /* UNIX-style Timestamps */\n        case 0x5455:\n          {\n            flags = blob.read_shift(1);\n            if (flags & 1) p.mtime = blob.read_shift(4);\n            /* for some reason, CD flag corresponds to LFH */\n            if (sz > 5) {\n              if (flags & 2) p.atime = blob.read_shift(4);\n              if (flags & 4) p.ctime = blob.read_shift(4);\n            }\n            if (p.mtime) p.mt = new Date(p.mtime * 1000);\n          }\n          break;\n      }\n      blob.l = tgt;\n      o[type] = p;\n    }\n    return o;\n  }\n  var fs /*:: = require('fs'); */;\n  function get_fs() {\n    return fs || (fs = {});\n  }\n  function parse(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    if (file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\n    if ((file[0] | 0x20) == 0x6d && (file[1] | 0x20) == 0x69) return parse_mad(file, options);\n    if (file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\n    var mver = 3;\n    var ssz = 512;\n    var nmfs = 0; // number of mini FAT sectors\n    var difat_sec_cnt = 0;\n    var dir_start = 0;\n    var minifat_start = 0;\n    var difat_start = 0;\n    var fat_addrs /*:Array<number>*/ = []; // locations of FAT sectors\n\n    /* [MS-CFB] 2.2 Compound File Header */\n    var blob /*:CFBlob*/ = /*::(*/file.slice(0, 512) /*:: :any)*/;\n    prep_blob(blob, 0);\n\n    /* major version */\n    var mv = check_get_mver(blob);\n    mver = mv[0];\n    switch (mver) {\n      case 3:\n        ssz = 512;\n        break;\n      case 4:\n        ssz = 4096;\n        break;\n      case 0:\n        if (mv[1] == 0) return parse_zip(file, options);\n      /* falls through */\n      default:\n        throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n    }\n\n    /* reprocess header */\n    if (ssz !== 512) {\n      blob = /*::(*/file.slice(0, ssz) /*:: :any)*/;\n      prep_blob(blob, 28 /* blob.l */);\n    }\n    /* Save header for final object */\n    var header /*:RawBytes*/ = file.slice(0, ssz);\n    check_shifts(blob, mver);\n\n    // Number of Directory Sectors\n    var dir_cnt /*:number*/ = blob.read_shift(4, 'i');\n    if (mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n    // Number of FAT Sectors\n    blob.l += 4;\n\n    // First Directory Sector Location\n    dir_start = blob.read_shift(4, 'i');\n\n    // Transaction Signature\n    blob.l += 4;\n\n    // Mini Stream Cutoff Size\n    blob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n    // First Mini FAT Sector Location\n    minifat_start = blob.read_shift(4, 'i');\n\n    // Number of Mini FAT Sectors\n    nmfs = blob.read_shift(4, 'i');\n\n    // First DIFAT sector location\n    difat_start = blob.read_shift(4, 'i');\n\n    // Number of DIFAT Sectors\n    difat_sec_cnt = blob.read_shift(4, 'i');\n\n    // Grab FAT Sector Locations\n    for (var q = -1, j = 0; j < 109; ++j) {\n      /* 109 = (512 - blob.l)>>>2; */\n      q = blob.read_shift(4, 'i');\n      if (q < 0) break;\n      fat_addrs[j] = q;\n    }\n\n    /** Break the file up into sectors */\n    var sectors /*:Array<RawBytes>*/ = sectorify(file, ssz);\n    sleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n    /** Chains */\n    var sector_list /*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n    sector_list[dir_start].name = \"!Directory\";\n    if (nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\n    sector_list[fat_addrs[0]].name = \"!FAT\";\n    sector_list.fat_addrs = fat_addrs;\n    sector_list.ssz = ssz;\n\n    /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n    var files /*:CFBFiles*/ = {},\n      Paths /*:Array<string>*/ = [],\n      FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n    build_full_paths(FileIndex, FullPaths, Paths);\n    Paths.shift();\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n\n    // $FlowIgnore\n    if (options && options.raw) o.raw = {\n      header: header,\n      sectors: sectors\n    };\n    return o;\n  } // parse\n\n  /* [MS-CFB] 2.2 Compound File Header -- read up to major version */\n  function check_get_mver(blob /*:CFBlob*/) /*:[number, number]*/{\n    if (blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n    // header signature 8\n    blob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n    // clsid 16\n    //blob.chk(HEADER_CLSID, 'CLSID: ');\n    blob.l += 16;\n\n    // minor version 2\n    var mver /*:number*/ = blob.read_shift(2, 'u');\n    return [blob.read_shift(2, 'u'), mver];\n  }\n  function check_shifts(blob /*:CFBlob*/, mver /*:number*/) /*:void*/{\n    var shift = 0x09;\n\n    // Byte Order\n    //blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n    blob.l += 2;\n\n    // Sector Shift\n    switch (shift = blob.read_shift(2)) {\n      case 0x09:\n        if (mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift);\n        break;\n      case 0x0c:\n        if (mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift);\n        break;\n      default:\n        throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n    }\n\n    // Mini Sector Shift\n    blob.chk('0600', 'Mini Sector Shift: ');\n\n    // Reserved\n    blob.chk('000000000000', 'Reserved: ');\n  }\n\n  /** Break the file up into sectors */\n  function sectorify(file /*:RawBytes*/, ssz /*:number*/) /*:Array<RawBytes>*/{\n    var nsectors = Math.ceil(file.length / ssz) - 1;\n    var sectors /*:Array<RawBytes>*/ = [];\n    for (var i = 1; i < nsectors; ++i) sectors[i - 1] = file.slice(i * ssz, (i + 1) * ssz);\n    sectors[nsectors - 1] = file.slice(nsectors * ssz);\n    return sectors;\n  }\n\n  /* [MS-CFB] 2.6.4 Red-Black Tree */\n  function build_full_paths(FI /*:CFBFileIndex*/, FP /*:Array<string>*/, Paths /*:Array<string>*/) /*:void*/{\n    var i = 0,\n      L = 0,\n      R = 0,\n      C = 0,\n      j = 0,\n      pl = Paths.length;\n    var dad /*:Array<number>*/ = [],\n      q /*:Array<number>*/ = [];\n    for (; i < pl; ++i) {\n      dad[i] = q[i] = i;\n      FP[i] = Paths[i];\n    }\n    for (; j < q.length; ++j) {\n      i = q[j];\n      L = FI[i].L;\n      R = FI[i].R;\n      C = FI[i].C;\n      if (dad[i] === i) {\n        if (L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n        if (R !== -1 && dad[R] !== R) dad[i] = dad[R];\n      }\n      if (C !== -1 /*NOSTREAM*/) dad[C] = i;\n      if (L !== -1 && i != dad[i]) {\n        dad[L] = dad[i];\n        if (q.lastIndexOf(L) < j) q.push(L);\n      }\n      if (R !== -1 && i != dad[i]) {\n        dad[R] = dad[i];\n        if (q.lastIndexOf(R) < j) q.push(R);\n      }\n    }\n    for (i = 1; i < pl; ++i) if (dad[i] === i) {\n      if (R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];else if (L !== -1 && dad[L] !== L) dad[i] = dad[L];\n    }\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type === 0 /* unknown */) continue;\n      j = i;\n      if (j != dad[j]) do {\n        j = dad[j];\n        FP[i] = FP[j] + \"/\" + FP[i];\n      } while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n      dad[i] = -1;\n    }\n    FP[0] += \"/\";\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n    }\n  }\n  function get_mfat_entry(entry /*:CFBEntry*/, payload /*:RawBytes*/, mini /*:?RawBytes*/) /*:CFBlob*/{\n    var start = entry.start,\n      size = entry.size;\n    //return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n    var o = [];\n    var idx = start;\n    while (mini && size > 0 && idx >= 0) {\n      o.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n      size -= MSSZ;\n      idx = __readInt32LE(mini, idx * 4);\n    }\n    if (o.length === 0) return new_buf(0) /*:any*/;\n    return bconcat(o).slice(0, entry.size) /*:any*/;\n  }\n\n  /** Chase down the rest of the DIFAT chain to build a comprehensive list\n      DIFAT chains by storing the next sector number as the last 32 bits */\n  function sleuth_fat(idx /*:number*/, cnt /*:number*/, sectors /*:Array<RawBytes>*/, ssz /*:number*/, fat_addrs) /*:void*/{\n    var q /*:number*/ = ENDOFCHAIN;\n    if (idx === ENDOFCHAIN) {\n      if (cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n    } else if (idx !== -1 /*FREESECT*/) {\n      var sector = sectors[idx],\n        m = (ssz >>> 2) - 1;\n      if (!sector) return;\n      for (var i = 0; i < m; ++i) {\n        if ((q = __readInt32LE(sector, i * 4)) === ENDOFCHAIN) break;\n        fat_addrs.push(q);\n      }\n      sleuth_fat(__readInt32LE(sector, ssz - 4), cnt - 1, sectors, ssz, fat_addrs);\n    }\n  }\n\n  /** Follow the linked list of sectors for a given starting point */\n  function get_sector_list(sectors /*:Array<RawBytes>*/, start /*:number*/, fat_addrs /*:Array<number>*/, ssz /*:number*/, chkd /*:?Array<boolean>*/) /*:SectorEntry*/{\n    var buf /*:Array<number>*/ = [],\n      buf_chain /*:Array<any>*/ = [];\n    if (!chkd) chkd = [];\n    var modulus = ssz - 1,\n      j = 0,\n      jj = 0;\n    for (j = start; j >= 0;) {\n      chkd[j] = true;\n      buf[buf.length] = j;\n      buf_chain.push(sectors[j]);\n      var addr = fat_addrs[Math.floor(j * 4 / ssz)];\n      jj = j * 4 & modulus;\n      if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n      if (!sectors[addr]) break;\n      j = __readInt32LE(sectors[addr], jj);\n    }\n    return {\n      nodes: buf,\n      data: __toBuffer([buf_chain])\n    };\n  }\n\n  /** Chase down the sector linked lists */\n  function make_sector_list(sectors /*:Array<RawBytes>*/, dir_start /*:number*/, fat_addrs /*:Array<number>*/, ssz /*:number*/) /*:SectorList*/{\n    var sl = sectors.length,\n      sector_list /*:SectorList*/ = [] /*:any*/;\n    var chkd /*:Array<boolean>*/ = [],\n      buf /*:Array<number>*/ = [],\n      buf_chain /*:Array<RawBytes>*/ = [];\n    var modulus = ssz - 1,\n      i = 0,\n      j = 0,\n      k = 0,\n      jj = 0;\n    for (i = 0; i < sl; ++i) {\n      buf = [] /*:Array<number>*/;\n      k = i + dir_start;\n      if (k >= sl) k -= sl;\n      if (chkd[k]) continue;\n      buf_chain = [];\n      var seen = [];\n      for (j = k; j >= 0;) {\n        seen[j] = true;\n        chkd[j] = true;\n        buf[buf.length] = j;\n        buf_chain.push(sectors[j]);\n        var addr /*:number*/ = fat_addrs[Math.floor(j * 4 / ssz)];\n        jj = j * 4 & modulus;\n        if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n        if (!sectors[addr]) break;\n        j = __readInt32LE(sectors[addr], jj);\n        if (seen[j]) break;\n      }\n      sector_list[k] = {\n        nodes: buf,\n        data: __toBuffer([buf_chain])\n      } /*:SectorEntry*/;\n    }\n    return sector_list;\n  }\n\n  /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n  function read_directory(dir_start /*:number*/, sector_list /*:SectorList*/, sectors /*:Array<RawBytes>*/, Paths /*:Array<string>*/, nmfs, files, FileIndex, mini) {\n    var minifat_store = 0,\n      pl = Paths.length ? 2 : 0;\n    var sector = sector_list[dir_start].data;\n    var i = 0,\n      namelen = 0,\n      name;\n    for (; i < sector.length; i += 128) {\n      var blob /*:CFBlob*/ = /*::(*/sector.slice(i, i + 128) /*:: :any)*/;\n      prep_blob(blob, 64);\n      namelen = blob.read_shift(2);\n      name = __utf16le(blob, 0, namelen - pl);\n      Paths.push(name);\n      var o /*:CFBEntry*/ = {\n        name: name,\n        type: blob.read_shift(1),\n        color: blob.read_shift(1),\n        L: blob.read_shift(4, 'i'),\n        R: blob.read_shift(4, 'i'),\n        C: blob.read_shift(4, 'i'),\n        clsid: blob.read_shift(16),\n        state: blob.read_shift(4, 'i'),\n        start: 0,\n        size: 0\n      };\n      var ctime /*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (ctime !== 0) o.ct = read_date(blob, blob.l - 8);\n      var mtime /*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (mtime !== 0) o.mt = read_date(blob, blob.l - 8);\n      o.start = blob.read_shift(4, 'i');\n      o.size = blob.read_shift(4, 'i');\n      if (o.size < 0 && o.start < 0) {\n        o.size = o.type = 0;\n        o.start = ENDOFCHAIN;\n        o.name = \"\";\n      }\n      if (o.type === 5) {\n        /* root */\n        minifat_store = o.start;\n        if (nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n        /*minifat_size = o.size;*/\n      } else if (o.size >= 4096 /* MSCSZ */) {\n        o.storage = 'fat';\n        if (sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n        sector_list[o.start].name = o.name;\n        o.content = sector_list[o.start].data.slice(0, o.size) /*:any*/;\n      } else {\n        o.storage = 'minifat';\n        if (o.size < 0) o.size = 0;else if (minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n          o.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini] || {}).data);\n        }\n      }\n      if (o.content) prep_blob(o.content, 0);\n      files[name] = o;\n      FileIndex.push(o);\n    }\n  }\n  function read_date(blob /*:RawBytes|CFBlob*/, offset /*:number*/) /*:Date*/{\n    return new Date((__readUInt32LE(blob, offset + 4) / 1e7 * Math.pow(2, 32) + __readUInt32LE(blob, offset) / 1e7 - 11644473600) * 1000);\n  }\n  function read_file(filename /*:string*/, options /*:CFBReadOpts*/) {\n    get_fs();\n    return parse(fs.readFileSync(filename), options);\n  }\n  function read(blob /*:RawBytes|string*/, options /*:CFBReadOpts*/) {\n    var type = options && options.type;\n    if (!type) {\n      if (has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n    }\n    switch (type || \"base64\") {\n      case \"file\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n      case \"base64\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64_decode(blob)), options);\n      case \"binary\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n    }\n    return parse( /*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n  }\n  function init_cfb(cfb /*:CFBContainer*/, opts /*:?any*/) /*:void*/{\n    var o = opts || {},\n      root = o.root || \"Root Entry\";\n    if (!cfb.FullPaths) cfb.FullPaths = [];\n    if (!cfb.FileIndex) cfb.FileIndex = [];\n    if (cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n    if (cfb.FullPaths.length === 0) {\n      cfb.FullPaths[0] = root + \"/\";\n      cfb.FileIndex[0] = {\n        name: root,\n        type: 5\n      } /*:any*/;\n    }\n    if (o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n    seed_cfb(cfb);\n  }\n  function seed_cfb(cfb /*:CFBContainer*/) /*:void*/{\n    var nm = \"\\u0001Sh33tJ5\";\n    if (CFB.find(cfb, \"/\" + nm)) return;\n    var p = new_buf(4);\n    p[0] = 55;\n    p[1] = p[3] = 50;\n    p[2] = 54;\n    cfb.FileIndex.push({\n      name: nm,\n      type: 2,\n      content: p,\n      size: 4,\n      L: 69,\n      R: 69,\n      C: 69\n    } /*:any*/);\n    cfb.FullPaths.push(cfb.FullPaths[0] + nm);\n    rebuild_cfb(cfb);\n  }\n  function rebuild_cfb(cfb /*:CFBContainer*/, f /*:?boolean*/) /*:void*/{\n    init_cfb(cfb);\n    var gc = false,\n      s = false;\n    for (var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n      var _file = cfb.FileIndex[i];\n      switch (_file.type) {\n        case 0:\n          if (s) gc = true;else {\n            cfb.FileIndex.pop();\n            cfb.FullPaths.pop();\n          }\n          break;\n        case 1:\n        case 2:\n        case 5:\n          s = true;\n          if (isNaN(_file.R * _file.L * _file.C)) gc = true;\n          if (_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n          break;\n        default:\n          gc = true;\n          break;\n      }\n    }\n    if (!gc && !f) return;\n    var now = new Date(1987, 1, 19),\n      j = 0;\n    // Track which names exist\n    var fullPaths = Object.create ? Object.create(null) : {};\n    var data /*:Array<[string, CFBEntry]>*/ = [];\n    for (i = 0; i < cfb.FullPaths.length; ++i) {\n      fullPaths[cfb.FullPaths[i]] = true;\n      if (cfb.FileIndex[i].type === 0) continue;\n      data.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n    }\n    for (i = 0; i < data.length; ++i) {\n      var dad = dirname(data[i][0]);\n      s = fullPaths[dad];\n      if (!s) {\n        data.push([dad, {\n          name: filename(dad).replace(\"/\", \"\"),\n          type: 1,\n          clsid: HEADER_CLSID,\n          ct: now,\n          mt: now,\n          content: null\n        } /*:any*/]);\n        // Add name to set\n        fullPaths[dad] = true;\n      }\n    }\n    data.sort(function (x, y) {\n      return namecmp(x[0], y[0]);\n    });\n    cfb.FullPaths = [];\n    cfb.FileIndex = [];\n    for (i = 0; i < data.length; ++i) {\n      cfb.FullPaths[i] = data[i][0];\n      cfb.FileIndex[i] = data[i][1];\n    }\n    for (i = 0; i < data.length; ++i) {\n      var elt = cfb.FileIndex[i];\n      var nm = cfb.FullPaths[i];\n      elt.name = filename(nm).replace(\"/\", \"\");\n      elt.L = elt.R = elt.C = -(elt.color = 1);\n      elt.size = elt.content ? elt.content.length : 0;\n      elt.start = 0;\n      elt.clsid = elt.clsid || HEADER_CLSID;\n      if (i === 0) {\n        elt.C = data.length > 1 ? 1 : -1;\n        elt.size = 0;\n        elt.type = 5;\n      } else if (nm.slice(-1) == \"/\") {\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == nm) break;\n        elt.C = j >= data.length ? -1 : j;\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == dirname(nm)) break;\n        elt.R = j >= data.length ? -1 : j;\n        elt.type = 1;\n      } else {\n        if (dirname(cfb.FullPaths[i + 1] || \"\") == dirname(nm)) elt.R = i + 1;\n        elt.type = 2;\n      }\n    }\n  }\n  function _write(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes|string*/{\n    var _opts = options || {};\n    /* MAD is order-sensitive, skip rebuild and sort */\n    if (_opts.fileType == 'mad') return write_mad(cfb, _opts);\n    rebuild_cfb(cfb);\n    switch (_opts.fileType) {\n      case 'zip':\n        return write_zip(cfb, _opts);\n      //case 'mad': return write_mad(cfb, _opts);\n    }\n    var L = function (cfb /*:CFBContainer*/) /*:Array<number>*/{\n      var mini_size = 0,\n        fat_size = 0;\n      for (var i = 0; i < cfb.FileIndex.length; ++i) {\n        var file = cfb.FileIndex[i];\n        if (!file.content) continue;\n        /*:: if(file.content == null) throw new Error(\"unreachable\"); */\n        var flen = file.content.length;\n        if (flen > 0) {\n          if (flen < 0x1000) mini_size += flen + 0x3F >> 6;else fat_size += flen + 0x01FF >> 9;\n        }\n      }\n      var dir_cnt = cfb.FullPaths.length + 3 >> 2;\n      var mini_cnt = mini_size + 7 >> 3;\n      var mfat_cnt = mini_size + 0x7F >> 7;\n      var fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n      var fat_cnt = fat_base + 0x7F >> 7;\n      var difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n      while (fat_base + fat_cnt + difat_cnt + 0x7F >> 7 > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n      var L = [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n      cfb.FileIndex[0].size = mini_size << 6;\n      L[7] = (cfb.FileIndex[0].start = L[0] + L[1] + L[2] + L[3] + L[4] + L[5]) + (L[6] + 7 >> 3);\n      return L;\n    }(cfb);\n    var o = new_buf(L[7] << 9);\n    var i = 0,\n      T = 0;\n    {\n      for (i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n      for (i = 0; i < 8; ++i) o.write_shift(2, 0);\n      o.write_shift(2, 0x003E);\n      o.write_shift(2, 0x0003);\n      o.write_shift(2, 0xFFFE);\n      o.write_shift(2, 0x0009);\n      o.write_shift(2, 0x0006);\n      for (i = 0; i < 3; ++i) o.write_shift(2, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, L[2]);\n      o.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n      o.write_shift(4, 0);\n      o.write_shift(4, 1 << 12);\n      o.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[3]);\n      o.write_shift(-4, L[1] ? L[0] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[1]);\n      for (i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n    }\n    if (L[1]) {\n      for (T = 0; T < L[1]; ++T) {\n        for (; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n        o.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n      }\n    }\n    var chainit = function (w /*:number*/) /*:void*/{\n      for (T += w; i < T - 1; ++i) o.write_shift(-4, i + 1);\n      if (w) {\n        ++i;\n        o.write_shift(-4, ENDOFCHAIN);\n      }\n    };\n    T = i = 0;\n    for (T += L[1]; i < T; ++i) o.write_shift(-4, consts.DIFSECT);\n    for (T += L[2]; i < T; ++i) o.write_shift(-4, consts.FATSECT);\n    chainit(L[3]);\n    chainit(L[4]);\n    var j /*:number*/ = 0,\n      flen /*:number*/ = 0;\n    var file /*:CFBEntry*/ = cfb.FileIndex[0];\n    for (; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      /*:: if(file.content == null) throw new Error(\"unreachable\"); */\n      flen = file.content.length;\n      if (flen < 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x01FF >> 9);\n    }\n    chainit(L[6] + 7 >> 3);\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n    T = i = 0;\n    for (j = 0; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      /*:: if(file.content == null) throw new Error(\"unreachable\"); */\n      flen = file.content.length;\n      if (!flen || flen >= 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x3F >> 6);\n    }\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n    for (i = 0; i < L[4] << 2; ++i) {\n      var nm = cfb.FullPaths[i];\n      if (!nm || nm.length === 0) {\n        for (j = 0; j < 17; ++j) o.write_shift(4, 0);\n        for (j = 0; j < 3; ++j) o.write_shift(4, -1);\n        for (j = 0; j < 12; ++j) o.write_shift(4, 0);\n        continue;\n      }\n      file = cfb.FileIndex[i];\n      if (i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n      var _nm /*:string*/ = i === 0 && _opts.root || file.name;\n      flen = 2 * (_nm.length + 1);\n      o.write_shift(64, _nm, \"utf16le\");\n      o.write_shift(2, flen);\n      o.write_shift(1, file.type);\n      o.write_shift(1, file.color);\n      o.write_shift(-4, file.L);\n      o.write_shift(-4, file.R);\n      o.write_shift(-4, file.C);\n      if (!file.clsid) for (j = 0; j < 4; ++j) o.write_shift(4, 0);else o.write_shift(16, file.clsid, \"hex\");\n      o.write_shift(4, file.state || 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, file.start);\n      o.write_shift(4, file.size);\n      o.write_shift(4, 0);\n    }\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n      /*:: if(!file.content) throw new Error(\"unreachable\"); */\n      if (file.size >= 0x1000) {\n        o.l = file.start + 1 << 9;\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size);\n          // o is a 0-filled Buffer so just set next offset\n          o.l += file.size + 511 & -512;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for (; j & 0x1FF; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n      /*:: if(!file.content) throw new Error(\"unreachable\"); */\n      if (file.size > 0 && file.size < 0x1000) {\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size);\n          // o is a 0-filled Buffer so just set next offset\n          o.l += file.size + 63 & -64;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for (; j & 0x3F; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n    if (has_buf) {\n      o.l = o.length;\n    } else {\n      // When using Buffer, already 0-filled\n      while (o.l < o.length) o.write_shift(1, 0);\n    }\n    return o;\n  }\n  /* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\n  function find(cfb /*:CFBContainer*/, path /*:string*/) /*:?CFBEntry*/{\n    var UCFullPaths /*:Array<string>*/ = cfb.FullPaths.map(function (x) {\n      return x.toUpperCase();\n    });\n    var UCPaths /*:Array<string>*/ = UCFullPaths.map(function (x) {\n      var y = x.split(\"/\");\n      return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)];\n    });\n    var k /*:boolean*/ = false;\n    if (path.charCodeAt(0) === 47 /* \"/\" */) {\n      k = true;\n      path = UCFullPaths[0].slice(0, -1) + path;\n    } else k = path.indexOf(\"/\") !== -1;\n    var UCPath /*:string*/ = path.toUpperCase();\n    var w /*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n    if (w !== -1) return cfb.FileIndex[w];\n    var m = !UCPath.match(chr1);\n    UCPath = UCPath.replace(chr0, '');\n    if (m) UCPath = UCPath.replace(chr1, '!');\n    for (w = 0; w < UCFullPaths.length; ++w) {\n      if ((m ? UCFullPaths[w].replace(chr1, '!') : UCFullPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n      if ((m ? UCPaths[w].replace(chr1, '!') : UCPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n    }\n    return null;\n  }\n  /** CFB Constants */\n  var MSSZ = 64; /* Mini Sector Size = 1<<6 */\n  //var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n  /* 2.1 Compound File Sector Numbers and Types */\n  var ENDOFCHAIN = -2;\n  /* 2.2 Compound File Header */\n  var HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\n  var HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\n  var HEADER_CLSID = '00000000000000000000000000000000';\n  var consts = {\n    /* 2.1 Compund File Sector Numbers and Types */\n    MAXREGSECT: -6,\n    DIFSECT: -4,\n    FATSECT: -3,\n    ENDOFCHAIN: ENDOFCHAIN,\n    FREESECT: -1,\n    /* 2.2 Compound File Header */\n    HEADER_SIGNATURE: HEADER_SIGNATURE,\n    HEADER_MINOR_VERSION: '3e00',\n    MAXREGSID: -6,\n    NOSTREAM: -1,\n    HEADER_CLSID: HEADER_CLSID,\n    /* 2.6.1 Compound File Directory Entry */\n    EntryTypes: ['unknown', 'storage', 'stream', 'lockbytes', 'property', 'root']\n  };\n  function write_file(cfb /*:CFBContainer*/, filename /*:string*/, options /*:CFBWriteOpts*/) /*:void*/{\n    get_fs();\n    var o = _write(cfb, options);\n    /*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n    fs.writeFileSync(filename, o);\n  }\n  function a2s(o /*:RawBytes*/) /*:string*/{\n    var out = new Array(o.length);\n    for (var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n    return out.join(\"\");\n  }\n  function write(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes|string*/{\n    var o = _write(cfb, options);\n    switch (options && options.type || \"buffer\") {\n      case \"file\":\n        get_fs();\n        fs.writeFileSync(options.filename, o /*:any*/);\n        return o;\n      case \"binary\":\n        return typeof o == \"string\" ? o : a2s(o);\n      case \"base64\":\n        return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n      case \"buffer\":\n        if (has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n      /* falls through */\n      case \"array\":\n        return typeof o == \"string\" ? s2a(o) : o;\n    }\n    return o;\n  }\n  /* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\n  var _zlib;\n  function use_zlib(zlib) {\n    try {\n      var InflateRaw = zlib.InflateRaw;\n      var InflRaw = new InflateRaw();\n      InflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n      if (InflRaw.bytesRead) _zlib = zlib;else throw new Error(\"zlib does not expose bytesRead\");\n    } catch (e) {\n      console.error(\"cannot use native zlib: \" + (e.message || e));\n    }\n  }\n  function _inflateRawSync(payload, usz) {\n    if (!_zlib) return _inflate(payload, usz);\n    var InflateRaw = _zlib.InflateRaw;\n    var InflRaw = new InflateRaw();\n    var out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n    payload.l += InflRaw.bytesRead;\n    return out;\n  }\n  function _deflateRawSync(payload) {\n    return _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n  }\n  var CLEN_ORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n  /*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\n  var LEN_LN = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];\n\n  /*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\n  var DST_LN = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n  function bit_swap_8(n) {\n    var t = (n << 1 | n << 11) & 0x22110 | (n << 5 | n << 15) & 0x88440;\n    return (t >> 16 | t >> 8 | t) & 0xFF;\n  }\n  var use_typed_arrays = typeof Uint8Array !== 'undefined';\n  var bitswap8 = use_typed_arrays ? new Uint8Array(1 << 8) : [];\n  for (var q = 0; q < 1 << 8; ++q) bitswap8[q] = bit_swap_8(q);\n  function bit_swap_n(n, b) {\n    var rev = bitswap8[n & 0xFF];\n    if (b <= 8) return rev >>> 8 - b;\n    rev = rev << 8 | bitswap8[n >> 8 & 0xFF];\n    if (b <= 16) return rev >>> 16 - b;\n    rev = rev << 8 | bitswap8[n >> 16 & 0xFF];\n    return rev >>> 24 - b;\n  }\n\n  /* helpers for unaligned bit reads */\n  function read_bits_2(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 6 ? 0 : buf[h + 1] << 8)) >>> w & 0x03;\n  }\n  function read_bits_3(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 5 ? 0 : buf[h + 1] << 8)) >>> w & 0x07;\n  }\n  function read_bits_4(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 4 ? 0 : buf[h + 1] << 8)) >>> w & 0x0F;\n  }\n  function read_bits_5(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 3 ? 0 : buf[h + 1] << 8)) >>> w & 0x1F;\n  }\n  function read_bits_7(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 1 ? 0 : buf[h + 1] << 8)) >>> w & 0x7F;\n  }\n\n  /* works up to n = 3 * 8 + 1 = 25 */\n  function read_bits_n(buf, bl, n) {\n    var w = bl & 7,\n      h = bl >>> 3,\n      f = (1 << n) - 1;\n    var v = buf[h] >>> w;\n    if (n < 8 - w) return v & f;\n    v |= buf[h + 1] << 8 - w;\n    if (n < 16 - w) return v & f;\n    v |= buf[h + 2] << 16 - w;\n    if (n < 24 - w) return v & f;\n    v |= buf[h + 3] << 24 - w;\n    return v & f;\n  }\n\n  /* helpers for unaligned bit writes */\n  function write_bits_3(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    if (w <= 5) buf[h] |= (v & 7) << w;else {\n      buf[h] |= v << w & 0xFF;\n      buf[h + 1] = (v & 7) >> 8 - w;\n    }\n    return bl + 3;\n  }\n  function write_bits_1(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v = (v & 1) << w;\n    buf[h] |= v;\n    return bl + 1;\n  }\n  function write_bits_8(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v;\n    return bl + 8;\n  }\n  function write_bits_16(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v & 0xFF;\n    buf[h + 2] = v >>> 8;\n    return bl + 16;\n  }\n\n  /* until ArrayBuffer#realloc is a thing, fake a realloc */\n  function realloc(b, sz /*:number*/) {\n    var L = b.length,\n      M = 2 * L > sz ? 2 * L : sz + 5,\n      i = 0;\n    if (L >= sz) return b;\n    if (has_buf) {\n      var o = new_unsafe_buf(M);\n      // $FlowIgnore\n      if (b.copy) b.copy(o);else for (; i < b.length; ++i) o[i] = b[i];\n      return o;\n    } else if (use_typed_arrays) {\n      var a = new Uint8Array(M);\n      if (a.set) a.set(b);else for (; i < L; ++i) a[i] = b[i];\n      return a;\n    }\n    b.length = M;\n    return b;\n  }\n\n  /* zero-filled arrays for older browsers */\n  function zero_fill_array(n) {\n    var o = new Array(n);\n    for (var i = 0; i < n; ++i) o[i] = 0;\n    return o;\n  }\n\n  /* build tree (used for literals and lengths) */\n  function build_tree(clens, cmap, MAX /*:number*/) /*:number*/{\n    var maxlen = 1,\n      w = 0,\n      i = 0,\n      j = 0,\n      ccode = 0,\n      L = clens.length;\n    var bl_count = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n    for (i = 0; i < 32; ++i) bl_count[i] = 0;\n    for (i = L; i < MAX; ++i) clens[i] = 0;\n    L = clens.length;\n    var ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n    /* build code tree */\n    for (i = 0; i < L; ++i) {\n      bl_count[w = clens[i]]++;\n      if (maxlen < w) maxlen = w;\n      ctree[i] = 0;\n    }\n    bl_count[0] = 0;\n    for (i = 1; i <= maxlen; ++i) bl_count[i + 16] = ccode = ccode + bl_count[i - 1] << 1;\n    for (i = 0; i < L; ++i) {\n      ccode = clens[i];\n      if (ccode != 0) ctree[i] = bl_count[ccode + 16]++;\n    }\n\n    /* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n    var cleni = 0;\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n      if (cleni != 0) {\n        ccode = bit_swap_n(ctree[i], maxlen) >> maxlen - cleni;\n        for (j = (1 << maxlen + 4 - cleni) - 1; j >= 0; --j) cmap[ccode | j << cleni] = cleni & 15 | i << 4;\n      }\n    }\n    return maxlen;\n  }\n\n  /* Fixed Huffman */\n  var fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\n  var fix_dmap = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n  if (!use_typed_arrays) {\n    for (var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n    for (i = 0; i < 32; ++i) fix_dmap[i] = 0;\n  }\n  (function () {\n    var dlens /*:Array<number>*/ = [];\n    var i = 0;\n    for (; i < 32; i++) dlens.push(5);\n    build_tree(dlens, fix_dmap, 32);\n    var clens /*:Array<number>*/ = [];\n    i = 0;\n    for (; i <= 143; i++) clens.push(8);\n    for (; i <= 255; i++) clens.push(9);\n    for (; i <= 279; i++) clens.push(7);\n    for (; i <= 287; i++) clens.push(8);\n    build_tree(clens, fix_lmap, 288);\n  })();\n  var _deflateRaw = /*#__PURE__*/function _deflateRawIIFE() {\n    var DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n    var j = 0,\n      k = 0;\n    for (; j < DST_LN.length - 1; ++j) {\n      for (; k < DST_LN[j + 1]; ++k) DST_LN_RE[k] = j;\n    }\n    for (; k < 32768; ++k) DST_LN_RE[k] = 29;\n    var LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n    for (j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n      for (; k < LEN_LN[j + 1]; ++k) LEN_LN_RE[k] = j;\n    }\n    function write_stored(data, out) {\n      var boff = 0;\n      while (boff < data.length) {\n        var L = Math.min(0xFFFF, data.length - boff);\n        var h = boff + L == data.length;\n        out.write_shift(1, +h);\n        out.write_shift(2, L);\n        out.write_shift(2, ~L & 0xFFFF);\n        while (L-- > 0) out[out.l++] = data[boff++];\n      }\n      return out.l;\n    }\n\n    /* Fixed Huffman */\n    function write_huff_fixed(data, out) {\n      var bl = 0;\n      var boff = 0;\n      var addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n      while (boff < data.length) {\n        var L = /* data.length - boff; */Math.min(0xFFFF, data.length - boff);\n\n        /* write a stored block for short data */\n        if (L < 10) {\n          bl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n          if (bl & 7) bl += 8 - (bl & 7);\n          out.l = bl / 8 | 0;\n          out.write_shift(2, L);\n          out.write_shift(2, ~L & 0xFFFF);\n          while (L-- > 0) out[out.l++] = data[boff++];\n          bl = out.l * 8;\n          continue;\n        }\n        bl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n        var hash = 0;\n        while (L-- > 0) {\n          var d = data[boff];\n          hash = (hash << 5 ^ d) & 0x7FFF;\n          var match = -1,\n            mlen = 0;\n          if (match = addrs[hash]) {\n            match |= boff & ~0x7FFF;\n            if (match > boff) match -= 0x8000;\n            if (match < boff) while (data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n          }\n          if (mlen > 2) {\n            /* Copy Token  */\n            d = LEN_LN_RE[mlen];\n            if (d <= 22) bl = write_bits_8(out, bl, bitswap8[d + 1] >> 1) - 1;else {\n              write_bits_8(out, bl, 3);\n              bl += 5;\n              write_bits_8(out, bl, bitswap8[d - 23] >> 5);\n              bl += 3;\n            }\n            var len_eb = d < 8 ? 0 : d - 4 >> 2;\n            if (len_eb > 0) {\n              write_bits_16(out, bl, mlen - LEN_LN[d]);\n              bl += len_eb;\n            }\n            d = DST_LN_RE[boff - match];\n            bl = write_bits_8(out, bl, bitswap8[d] >> 3);\n            bl -= 3;\n            var dst_eb = d < 4 ? 0 : d - 2 >> 1;\n            if (dst_eb > 0) {\n              write_bits_16(out, bl, boff - match - DST_LN[d]);\n              bl += dst_eb;\n            }\n            for (var q = 0; q < mlen; ++q) {\n              addrs[hash] = boff & 0x7FFF;\n              hash = (hash << 5 ^ data[boff]) & 0x7FFF;\n              ++boff;\n            }\n            L -= mlen - 1;\n          } else {\n            /* Literal Token */\n            if (d <= 143) d = d + 48;else bl = write_bits_1(out, bl, 1);\n            bl = write_bits_8(out, bl, bitswap8[d]);\n            addrs[hash] = boff & 0x7FFF;\n            ++boff;\n          }\n        }\n        bl = write_bits_8(out, bl, 0) - 1;\n      }\n      out.l = (bl + 7) / 8 | 0;\n      return out.l;\n    }\n    return function _deflateRaw(data, out) {\n      if (data.length < 8) return write_stored(data, out);\n      return write_huff_fixed(data, out);\n    };\n  }();\n  function _deflate(data) {\n    var buf = new_buf(50 + Math.floor(data.length * 1.1));\n    var off = _deflateRaw(data, buf);\n    return buf.slice(0, off);\n  }\n  /* modified inflate function also moves original read head */\n\n  var dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_cmap = use_typed_arrays ? new Uint16Array(128) : zero_fill_array(128);\n  var dyn_len_1 = 1,\n    dyn_len_2 = 1;\n\n  /* 5.5.3 Expanding Huffman Codes */\n  function dyn(data, boff /*:number*/) {\n    /* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n    var _HLIT = read_bits_5(data, boff) + 257;\n    boff += 5;\n    var _HDIST = read_bits_5(data, boff) + 1;\n    boff += 5;\n    var _HCLEN = read_bits_4(data, boff) + 4;\n    boff += 4;\n    var w = 0;\n\n    /* grab and store code lengths */\n    var clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n    var ctree = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var maxlen = 1;\n    var bl_count = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var L = clens.length; /* 19 */\n    for (var i = 0; i < _HCLEN; ++i) {\n      clens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n      if (maxlen < w) maxlen = w;\n      bl_count[w]++;\n      boff += 3;\n    }\n\n    /* build code tree */\n    var ccode = 0;\n    bl_count[0] = 0;\n    for (i = 1; i <= maxlen; ++i) next_code[i] = ccode = ccode + bl_count[i - 1] << 1;\n    for (i = 0; i < L; ++i) if ((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n    /* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n    var cleni = 0;\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n      if (cleni != 0) {\n        ccode = bitswap8[ctree[i]] >> 8 - cleni;\n        for (var j = (1 << 7 - cleni) - 1; j >= 0; --j) dyn_cmap[ccode | j << cleni] = cleni & 7 | i << 3;\n      }\n    }\n\n    /* read literal and dist codes at once */\n    var hcodes /*:Array<number>*/ = [];\n    maxlen = 1;\n    for (; hcodes.length < _HLIT + _HDIST;) {\n      ccode = dyn_cmap[read_bits_7(data, boff)];\n      boff += ccode & 7;\n      switch (ccode >>>= 3) {\n        case 16:\n          w = 3 + read_bits_2(data, boff);\n          boff += 2;\n          ccode = hcodes[hcodes.length - 1];\n          while (w-- > 0) hcodes.push(ccode);\n          break;\n        case 17:\n          w = 3 + read_bits_3(data, boff);\n          boff += 3;\n          while (w-- > 0) hcodes.push(0);\n          break;\n        case 18:\n          w = 11 + read_bits_7(data, boff);\n          boff += 7;\n          while (w-- > 0) hcodes.push(0);\n          break;\n        default:\n          hcodes.push(ccode);\n          if (maxlen < ccode) maxlen = ccode;\n          break;\n      }\n    }\n\n    /* build literal / length trees */\n    var h1 = hcodes.slice(0, _HLIT),\n      h2 = hcodes.slice(_HLIT);\n    for (i = _HLIT; i < 286; ++i) h1[i] = 0;\n    for (i = _HDIST; i < 30; ++i) h2[i] = 0;\n    dyn_len_1 = build_tree(h1, dyn_lmap, 286);\n    dyn_len_2 = build_tree(h2, dyn_dmap, 30);\n    return boff;\n  }\n\n  /* return [ data, bytesRead ] */\n  function inflate(data, usz /*:number*/) {\n    /* shortcircuit for empty buffer [0x03, 0x00] */\n    if (data[0] == 3 && !(data[1] & 0x3)) {\n      return [new_raw_buf(usz), 2];\n    }\n\n    /* bit offset */\n    var boff = 0;\n\n    /* header includes final bit and type bits */\n    var header = 0;\n    var outbuf = new_unsafe_buf(usz ? usz : 1 << 18);\n    var woff = 0;\n    var OL = outbuf.length >>> 0;\n    var max_len_1 = 0,\n      max_len_2 = 0;\n    while ((header & 1) == 0) {\n      header = read_bits_3(data, boff);\n      boff += 3;\n      if (header >>> 1 == 0) {\n        /* Stored block */\n        if (boff & 7) boff += 8 - (boff & 7);\n        /* 2 bytes sz, 2 bytes bit inverse */\n        var sz = data[boff >>> 3] | data[(boff >>> 3) + 1] << 8;\n        boff += 32;\n        /* push sz bytes */\n        if (sz > 0) {\n          if (!usz && OL < woff + sz) {\n            outbuf = realloc(outbuf, woff + sz);\n            OL = outbuf.length;\n          }\n          while (sz-- > 0) {\n            outbuf[woff++] = data[boff >>> 3];\n            boff += 8;\n          }\n        }\n        continue;\n      } else if (header >> 1 == 1) {\n        /* Fixed Huffman */\n        max_len_1 = 9;\n        max_len_2 = 5;\n      } else {\n        /* Dynamic Huffman */\n        boff = dyn(data, boff);\n        max_len_1 = dyn_len_1;\n        max_len_2 = dyn_len_2;\n      }\n      for (;;) {\n        // while(true) is apparently out of vogue in modern JS circles\n        if (!usz && OL < woff + 32767) {\n          outbuf = realloc(outbuf, woff + 32767);\n          OL = outbuf.length;\n        }\n        /* ingest code and move read head */\n        var bits = read_bits_n(data, boff, max_len_1);\n        var code = header >>> 1 == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n        boff += code & 15;\n        code >>>= 4;\n        /* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n        if ((code >>> 8 & 0xFF) === 0) outbuf[woff++] = code;else if (code == 256) break;else {\n          code -= 257;\n          var len_eb = code < 8 ? 0 : code - 4 >> 2;\n          if (len_eb > 5) len_eb = 0;\n          var tgt = woff + LEN_LN[code];\n          /* length extra bits */\n          if (len_eb > 0) {\n            tgt += read_bits_n(data, boff, len_eb);\n            boff += len_eb;\n          }\n\n          /* dist code */\n          bits = read_bits_n(data, boff, max_len_2);\n          code = header >>> 1 == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n          boff += code & 15;\n          code >>>= 4;\n          var dst_eb = code < 4 ? 0 : code - 2 >> 1;\n          var dst = DST_LN[code];\n          /* dist extra bits */\n          if (dst_eb > 0) {\n            dst += read_bits_n(data, boff, dst_eb);\n            boff += dst_eb;\n          }\n\n          /* in the common case, manual byte copy is faster than TA set / Buffer copy */\n          if (!usz && OL < tgt) {\n            outbuf = realloc(outbuf, tgt + 100);\n            OL = outbuf.length;\n          }\n          while (woff < tgt) {\n            outbuf[woff] = outbuf[woff - dst];\n            ++woff;\n          }\n        }\n      }\n    }\n    if (usz) return [outbuf, boff + 7 >>> 3];\n    return [outbuf.slice(0, woff), boff + 7 >>> 3];\n  }\n  function _inflate(payload, usz) {\n    var data = payload.slice(payload.l || 0);\n    var out = inflate(data, usz);\n    payload.l += out[1];\n    return out[0];\n  }\n  function warn_or_throw(wrn, msg) {\n    if (wrn) {\n      if (typeof console !== 'undefined') console.error(msg);\n    } else throw new Error(msg);\n  }\n  function parse_zip(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    var blob /*:CFBlob*/ = /*::(*/file /*:: :any)*/;\n    prep_blob(blob, 0);\n    var FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o, {\n      root: options.root\n    });\n\n    /* find end of central directory, start just after signature */\n    var i = blob.length - 4;\n    while ((blob[i] != 0x50 || blob[i + 1] != 0x4b || blob[i + 2] != 0x05 || blob[i + 3] != 0x06) && i >= 0) --i;\n    blob.l = i + 4;\n\n    /* parse end of central directory */\n    blob.l += 4;\n    var fcnt = blob.read_shift(2);\n    blob.l += 6;\n    var start_cd = blob.read_shift(4);\n\n    /* parse central directory */\n    blob.l = start_cd;\n    for (i = 0; i < fcnt; ++i) {\n      /* trust local file header instead of CD entry */\n      blob.l += 20;\n      var csz = blob.read_shift(4);\n      var usz = blob.read_shift(4);\n      var namelen = blob.read_shift(2);\n      var efsz = blob.read_shift(2);\n      var fcsz = blob.read_shift(2);\n      blob.l += 8;\n      var offset = blob.read_shift(4);\n      var EF = parse_extra_field( /*::(*/blob.slice(blob.l + namelen, blob.l + namelen + efsz) /*:: :any)*/);\n      blob.l += namelen + efsz + fcsz;\n      var L = blob.l;\n      blob.l = offset + 4;\n      parse_local_file(blob, csz, usz, o, EF);\n      blob.l = L;\n    }\n    return o;\n  }\n\n  /* head starts just after local file header signature */\n  function parse_local_file(blob /*:CFBlob*/, csz /*:number*/, usz /*:number*/, o /*:CFBContainer*/, EF) {\n    /* [local file header] */\n    blob.l += 2;\n    var flags = blob.read_shift(2);\n    var meth = blob.read_shift(2);\n    var date = parse_dos_date(blob);\n    if (flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n    var crc32 = blob.read_shift(4);\n    var _csz = blob.read_shift(4);\n    var _usz = blob.read_shift(4);\n    var namelen = blob.read_shift(2);\n    var efsz = blob.read_shift(2);\n\n    // TODO: flags & (1<<11) // UTF8\n    var name = \"\";\n    for (var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n    if (efsz) {\n      var ef = parse_extra_field( /*::(*/blob.slice(blob.l, blob.l + efsz) /*:: :any)*/);\n      if ((ef[0x5455] || {}).mt) date = ef[0x5455].mt;\n      if (((EF || {})[0x5455] || {}).mt) date = EF[0x5455].mt;\n    }\n    blob.l += efsz;\n\n    /* [encryption header] */\n\n    /* [file data] */\n    var data = blob.slice(blob.l, blob.l + _csz);\n    switch (meth) {\n      case 8:\n        data = _inflateRawSync(blob, _usz);\n        break;\n      case 0:\n        break;\n      // TODO: scan for magic number\n      default:\n        throw new Error(\"Unsupported ZIP Compression method \" + meth);\n    }\n\n    /* [data descriptor] */\n    var wrn = false;\n    if (flags & 8) {\n      crc32 = blob.read_shift(4);\n      if (crc32 == 0x08074b50) {\n        crc32 = blob.read_shift(4);\n        wrn = true;\n      }\n      _csz = blob.read_shift(4);\n      _usz = blob.read_shift(4);\n    }\n    if (_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n    if (_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n    //var _crc32 = CRC32.buf(data, 0);\n    //if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n    cfb_add(o, name, data, {\n      unsafe: true,\n      mt: date\n    });\n  }\n  function write_zip(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes*/{\n    var _opts = options || {};\n    var out = [],\n      cdirs = [];\n    var o /*:CFBlob*/ = new_buf(1);\n    var method = _opts.compression ? 8 : 0,\n      flags = 0;\n    var desc = false;\n    if (desc) flags |= 8;\n    var i = 0,\n      j = 0;\n    var start_cd = 0,\n      fcnt = 0;\n    var root = cfb.FullPaths[0],\n      fp = root,\n      fi = cfb.FileIndex[0];\n    var crcs = [];\n    var sz_cd = 0;\n    for (i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n      var start = start_cd;\n\n      /* TODO: CP437 filename */\n      var namebuf = new_buf(fp.length);\n      for (j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n      namebuf = namebuf.slice(0, namebuf.l);\n      crcs[fcnt] = CRC32.buf( /*::((*/fi.content /*::||[]):any)*/, 0);\n      var outbuf = fi.content /*::||[]*/;\n      if (method == 8) outbuf = _deflateRawSync(outbuf);\n\n      /* local file header */\n      o = new_buf(30);\n      o.write_shift(4, 0x04034b50);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      /* TODO: last mod file time/date */\n      if (fi.mt) write_dos_date(o, fi.mt);else o.write_shift(4, 0);\n      o.write_shift(-4, flags & 8 ? 0 : crcs[fcnt]);\n      o.write_shift(4, flags & 8 ? 0 : outbuf.length);\n      o.write_shift(4, flags & 8 ? 0 : /*::(*/fi.content /*::||[])*/.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      start_cd += o.length;\n      out.push(o);\n      start_cd += namebuf.length;\n      out.push(namebuf);\n\n      /* TODO: extra fields? */\n\n      /* TODO: encryption header ? */\n\n      start_cd += outbuf.length;\n      out.push(outbuf);\n\n      /* data descriptor */\n      if (flags & 8) {\n        o = new_buf(12);\n        o.write_shift(-4, crcs[fcnt]);\n        o.write_shift(4, outbuf.length);\n        o.write_shift(4, /*::(*/fi.content /*::||[])*/.length);\n        start_cd += o.l;\n        out.push(o);\n      }\n\n      /* central directory */\n      o = new_buf(46);\n      o.write_shift(4, 0x02014b50);\n      o.write_shift(2, 0);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      o.write_shift(4, 0); /* TODO: last mod file time/date */\n      o.write_shift(-4, crcs[fcnt]);\n      o.write_shift(4, outbuf.length);\n      o.write_shift(4, /*::(*/fi.content /*::||[])*/.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, start);\n      sz_cd += o.l;\n      cdirs.push(o);\n      sz_cd += namebuf.length;\n      cdirs.push(namebuf);\n      ++fcnt;\n    }\n\n    /* end of central directory */\n    o = new_buf(22);\n    o.write_shift(4, 0x06054b50);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, fcnt);\n    o.write_shift(2, fcnt);\n    o.write_shift(4, sz_cd);\n    o.write_shift(4, start_cd);\n    o.write_shift(2, 0);\n    return bconcat([bconcat(out /*:any*/), bconcat(cdirs), o] /*:any*/);\n  }\n  var ContentTypeMap = {\n    \"htm\": \"text/html\",\n    \"xml\": \"text/xml\",\n    \"gif\": \"image/gif\",\n    \"jpg\": \"image/jpeg\",\n    \"png\": \"image/png\",\n    \"mso\": \"application/x-mso\",\n    \"thmx\": \"application/vnd.ms-officetheme\",\n    \"sh33tj5\": \"application/octet-stream\"\n  } /*:any*/;\n  function get_content_type(fi /*:CFBEntry*/, fp /*:string*/) /*:string*/{\n    if (fi.ctype) return fi.ctype;\n    var ext = fi.name || \"\",\n      m = ext.match(/\\.([^\\.]+)$/);\n    if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n    if (fp) {\n      m = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n      if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n    }\n    return \"application/octet-stream\";\n  }\n\n  /* 76 character chunks TODO: intertwine encoding */\n  function write_base64_76(bstr /*:string*/) /*:string*/{\n    var data = Base64_encode(bstr);\n    var o = [];\n    for (var i = 0; i < data.length; i += 76) o.push(data.slice(i, i + 76));\n    return o.join(\"\\r\\n\") + \"\\r\\n\";\n  }\n\n  /*\n  Rules for QP:\n  \t- escape =## applies for all non-display characters and literal \"=\"\n  \t- space or tab at end of line must be encoded\n  \t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n  \t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n  \n  TODO: Some files from word appear to write line extensions with bare equals:\n  \n  ```\n  <table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n  =\"70%\"\n  ```\n  */\n  function write_quoted_printable(text /*:string*/) /*:string*/{\n    var encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function (c) {\n      var w = c.charCodeAt(0).toString(16).toUpperCase();\n      return \"=\" + (w.length == 1 ? \"0\" + w : w);\n    });\n    encoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n    if (encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n    encoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n    var o /*:Array<string>*/ = [],\n      split = encoded.split(\"\\r\\n\");\n    for (var si = 0; si < split.length; ++si) {\n      var str = split[si];\n      if (str.length == 0) {\n        o.push(\"\");\n        continue;\n      }\n      for (var i = 0; i < str.length;) {\n        var end = 76;\n        var tmp = str.slice(i, i + end);\n        if (tmp.charAt(end - 1) == \"=\") end--;else if (tmp.charAt(end - 2) == \"=\") end -= 2;else if (tmp.charAt(end - 3) == \"=\") end -= 3;\n        tmp = str.slice(i, i + end);\n        i += end;\n        if (i < str.length) tmp += \"=\";\n        o.push(tmp);\n      }\n    }\n    return o.join(\"\\r\\n\");\n  }\n  function parse_quoted_printable(data /*:Array<string>*/) /*:RawBytes*/{\n    var o = [];\n\n    /* unify long lines */\n    for (var di = 0; di < data.length; ++di) {\n      var line = data[di];\n      while (di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n      o.push(line);\n    }\n\n    /* decode */\n    for (var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function ($$) {\n      return String.fromCharCode(parseInt($$.slice(1), 16));\n    });\n    return s2a(o.join(\"\\r\\n\"));\n  }\n  function parse_mime(cfb /*:CFBContainer*/, data /*:Array<string>*/, root /*:string*/) /*:void*/{\n    var fname = \"\",\n      cte = \"\",\n      ctype = \"\",\n      fdata;\n    var di = 0;\n    for (; di < 10; ++di) {\n      var line = data[di];\n      if (!line || line.match(/^\\s*$/)) break;\n      var m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n      if (m) switch (m[1].toLowerCase()) {\n        case \"content-location\":\n          fname = m[2].trim();\n          break;\n        case \"content-type\":\n          ctype = m[2].trim();\n          break;\n        case \"content-transfer-encoding\":\n          cte = m[2].trim();\n          break;\n      }\n    }\n    ++di;\n    switch (cte.toLowerCase()) {\n      case 'base64':\n        fdata = s2a(Base64_decode(data.slice(di).join(\"\")));\n        break;\n      case 'quoted-printable':\n        fdata = parse_quoted_printable(data.slice(di));\n        break;\n      default:\n        throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n    }\n    var file = cfb_add(cfb, fname.slice(root.length), fdata, {\n      unsafe: true\n    });\n    if (ctype) file.ctype = ctype;\n  }\n  function parse_mad(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    if (a2s(file.slice(0, 13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n    var root = options && options.root || \"\";\n    // $FlowIgnore\n    var data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n    var di = 0,\n      row = \"\";\n\n    /* if root is not specified, scan for the common prefix */\n    for (di = 0; di < data.length; ++di) {\n      row = data[di];\n      if (!/^Content-Location:/i.test(row)) continue;\n      row = row.slice(row.indexOf(\"file\"));\n      if (!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n      if (row.slice(0, root.length) == root) continue;\n      while (root.length > 0) {\n        root = root.slice(0, root.length - 1);\n        root = root.slice(0, root.lastIndexOf(\"/\") + 1);\n        if (row.slice(0, root.length) == root) break;\n      }\n    }\n    var mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n    if (!mboundary) throw new Error(\"MAD cannot find boundary\");\n    var boundary = \"--\" + (mboundary[1] || \"\");\n    var FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o);\n    var start_di,\n      fcnt = 0;\n    for (di = 0; di < data.length; ++di) {\n      var line = data[di];\n      if (line !== boundary && line !== boundary + \"--\") continue;\n      if (fcnt++) parse_mime(o, data.slice(start_di, di), root);\n      start_di = di;\n    }\n    return o;\n  }\n  function write_mad(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:string*/{\n    var opts = options || {};\n    var boundary = opts.boundary || \"SheetJS\";\n    boundary = '------=' + boundary;\n    var out = ['MIME-Version: 1.0', 'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"', '', '', ''];\n    var root = cfb.FullPaths[0],\n      fp = root,\n      fi = cfb.FileIndex[0];\n    for (var i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n      /* Normalize filename */\n      fp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function (c) {\n        return \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n      }).replace(/[\\u0080-\\uFFFF]/g, function (u) {\n        return \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n      });\n\n      /* Extract content as binary string */\n      var ca = fi.content;\n      // $FlowIgnore\n      var cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n      /* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n      var dispcnt = 0,\n        L = Math.min(1024, cstr.length),\n        cc = 0;\n      for (var csl = 0; csl <= L; ++csl) if ((cc = cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n      var qp = dispcnt >= L * 4 / 5;\n      out.push(boundary);\n      out.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n      out.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n      out.push('Content-Type: ' + get_content_type(fi, fp));\n      out.push('');\n      out.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n    }\n    out.push(boundary + '--\\r\\n');\n    return out.join(\"\\r\\n\");\n  }\n  function cfb_new(opts /*:?any*/) /*:CFBContainer*/{\n    var o /*:CFBContainer*/ = {} /*:any*/;\n    init_cfb(o, opts);\n    return o;\n  }\n  function cfb_add(cfb /*:CFBContainer*/, name /*:string*/, content /*:?RawBytes*/, opts /*:?any*/) /*:CFBEntry*/{\n    var unsafe = opts && opts.unsafe;\n    if (!unsafe) init_cfb(cfb);\n    var file = !unsafe && CFB.find(cfb, name);\n    if (!file) {\n      var fpath /*:string*/ = cfb.FullPaths[0];\n      if (name.slice(0, fpath.length) == fpath) fpath = name;else {\n        if (fpath.slice(-1) != \"/\") fpath += \"/\";\n        fpath = (fpath + name).replace(\"//\", \"/\");\n      }\n      file = {\n        name: filename(name),\n        type: 2\n      } /*:any*/;\n      cfb.FileIndex.push(file);\n      cfb.FullPaths.push(fpath);\n      if (!unsafe) CFB.utils.cfb_gc(cfb);\n    }\n    /*:: if(!file) throw new Error(\"unreachable\"); */\n    file.content = content /*:any*/;\n    file.size = content ? content.length : 0;\n    if (opts) {\n      if (opts.CLSID) file.clsid = opts.CLSID;\n      if (opts.mt) file.mt = opts.mt;\n      if (opts.ct) file.ct = opts.ct;\n    }\n    return file;\n  }\n  function cfb_del(cfb /*:CFBContainer*/, name /*:string*/) /*:boolean*/{\n    init_cfb(cfb);\n    var file = CFB.find(cfb, name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex.splice(j, 1);\n      cfb.FullPaths.splice(j, 1);\n      return true;\n    }\n    return false;\n  }\n  function cfb_mov(cfb /*:CFBContainer*/, old_name /*:string*/, new_name /*:string*/) /*:boolean*/{\n    init_cfb(cfb);\n    var file = CFB.find(cfb, old_name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex[j].name = filename(new_name);\n      cfb.FullPaths[j] = new_name;\n      return true;\n    }\n    return false;\n  }\n  function cfb_gc(cfb /*:CFBContainer*/) /*:void*/{\n    rebuild_cfb(cfb, true);\n  }\n  exports.find = find;\n  exports.read = read;\n  exports.parse = parse;\n  exports.write = write;\n  exports.writeFile = write_file;\n  exports.utils = {\n    cfb_new: cfb_new,\n    cfb_add: cfb_add,\n    cfb_del: cfb_del,\n    cfb_mov: cfb_mov,\n    cfb_gc: cfb_gc,\n    ReadShift: ReadShift,\n    CheckField: CheckField,\n    prep_blob: prep_blob,\n    bconcat: bconcat,\n    use_zlib: use_zlib,\n    _deflateRaw: _deflate,\n    _inflateRaw: _inflate,\n    consts: consts\n  };\n  return exports;\n}();\nlet _fs = void 0;\nfunction set_fs(fs) {\n  _fs = fs;\n}\nexport { set_fs };\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n  if (typeof data === \"string\") return s2ab(data);\n  if (Array.isArray(data)) return a2u(data);\n  return data;\n}\n/* write or download file */\nfunction write_dl(fname /*:string*/, payload /*:any*/, enc /*:?string*/) {\n  /*global IE_SaveFile, Blob, navigator, saveAs, document, File, chrome */\n  if (typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n  if (typeof Deno !== 'undefined') {\n    /* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n    if (enc && typeof payload == \"string\") switch (enc) {\n      case \"utf8\":\n        payload = new TextEncoder(enc).encode(payload);\n        break;\n      case \"binary\":\n        payload = s2ab(payload);\n        break;\n      /* TODO: binary equivalent */\n      default:\n        throw new Error(\"Unsupported encoding \" + enc);\n    }\n    return Deno.writeFileSync(fname, payload);\n  }\n  var data = enc == \"utf8\" ? utf8write(payload) : payload;\n  /*:: declare var IE_SaveFile: any; */\n  if (typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n  if (typeof Blob !== 'undefined') {\n    var blob = new Blob([blobify(data)], {\n      type: \"application/octet-stream\"\n    });\n    /*:: declare var navigator: any; */\n    if (typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n    /*:: declare var saveAs: any; */\n    if (typeof saveAs !== 'undefined') return saveAs(blob, fname);\n    if (typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n      var url = URL.createObjectURL(blob);\n      /*:: declare var chrome: any; */\n      if (typeof chrome === 'object' && typeof (chrome.downloads || {}).download == \"function\") {\n        if (URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function () {\n          URL.revokeObjectURL(url);\n        }, 60000);\n        return chrome.downloads.download({\n          url: url,\n          filename: fname,\n          saveAs: true\n        });\n      }\n      var a = document.createElement(\"a\");\n      if (a.download != null) {\n        /*:: if(document.body == null) throw new Error(\"unreachable\"); */\n        a.download = fname;\n        a.href = url;\n        document.body.appendChild(a);\n        a.click();\n        /*:: if(document.body == null) throw new Error(\"unreachable\"); */\n        document.body.removeChild(a);\n        if (URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function () {\n          URL.revokeObjectURL(url);\n        }, 60000);\n        return url;\n      }\n    }\n  }\n  // $FlowIgnore\n  if (typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try {\n    // extendscript\n    // $FlowIgnore\n    var out = File(fname);\n    out.open(\"w\");\n    out.encoding = \"binary\";\n    if (Array.isArray(payload)) payload = a2s(payload);\n    out.write(payload);\n    out.close();\n    return payload;\n  } catch (e) {\n    if (!e.message || !e.message.match(/onstruct/)) throw e;\n  }\n  throw new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path /*:string*/) {\n  if (typeof _fs !== 'undefined') return _fs.readFileSync(path);\n  if (typeof Deno !== 'undefined') return Deno.readFileSync(path);\n  // $FlowIgnore\n  if (typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try {\n    // extendscript\n    // $FlowIgnore\n    var infile = File(path);\n    infile.open(\"r\");\n    infile.encoding = \"binary\";\n    var data = infile.read();\n    infile.close();\n    return data;\n  } catch (e) {\n    if (!e.message || !e.message.match(/onstruct/)) throw e;\n  }\n  throw new Error(\"Cannot access file \" + path);\n}\nfunction keys(o /*:any*/) /*:Array<any>*/{\n  var ks = Object.keys(o),\n    o2 = [];\n  for (var i = 0; i < ks.length; ++i) if (Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n  return o2;\n}\nfunction evert_key(obj /*:any*/, key /*:string*/) /*:EvertType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) if (o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n  return o;\n}\nfunction evert(obj /*:any*/) /*:EvertType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n  return o;\n}\nfunction evert_num(obj /*:any*/) /*:EvertNumType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i], 10);\n  return o;\n}\nfunction evert_arr(obj /*:any*/) /*:EvertArrType*/{\n  var o /*:EvertArrType*/ = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) {\n    if (o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n    o[obj[K[i]]].push(K[i]);\n  }\n  return o;\n}\nvar basedate = /*#__PURE__*/new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\nfunction datenum(v /*:Date*/, date1904 /*:?boolean*/) /*:number*/{\n  var epoch = /*#__PURE__*/v.getTime();\n  if (date1904) epoch -= 1462 * 24 * 60 * 60 * 1000;\n  var dnthresh = /*#__PURE__*/basedate.getTime() + ( /*#__PURE__*/v.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\n  return (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n}\nvar refdate = /*#__PURE__*/new Date();\nvar dnthresh = /*#__PURE__*/basedate.getTime() + ( /*#__PURE__*/refdate.getTimezoneOffset() - /*#__PURE__*/basedate.getTimezoneOffset()) * 60000;\nvar refoffset = /*#__PURE__*/refdate.getTimezoneOffset();\nfunction numdate(v /*:number*/) /*:Date*/{\n  var out = new Date();\n  out.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n  if (out.getTimezoneOffset() !== refoffset) {\n    out.setTime(out.getTime() + (out.getTimezoneOffset() - refoffset) * 60000);\n  }\n  return out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n  var sec = 0,\n    mt = 0,\n    time = false;\n  var m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n  if (!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n  for (var i = 1; i != m.length; ++i) {\n    if (!m[i]) continue;\n    mt = 1;\n    if (i > 3) time = true;\n    switch (m[i].slice(m[i].length - 1)) {\n      case 'Y':\n        throw new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length - 1));\n      case 'D':\n        mt *= 24;\n      /* falls through */\n      case 'H':\n        mt *= 60;\n      /* falls through */\n      case 'M':\n        if (!time) throw new Error(\"Unsupported ISO Duration Field: M\");else mt *= 60;\n      /* falls through */\n      case 'S':\n        break;\n    }\n    sec += mt * parseInt(m[i], 10);\n  }\n  return sec;\n}\nvar good_pd_date_1 = /*#__PURE__*/new Date('2017-02-19T19:06:09.000Z');\nvar good_pd_date = /*#__PURE__*/isNaN( /*#__PURE__*/good_pd_date_1.getFullYear()) ? /*#__PURE__*/new Date('2/19/17') : good_pd_date_1;\nvar good_pd = /*#__PURE__*/good_pd_date.getFullYear() == 2017;\n/* parses a date as a local date */\nfunction parseDate(str /*:string|Date*/, fixdate /*:?number*/) /*:Date*/{\n  var d = new Date(str);\n  if (good_pd) {\n    /*:: if(fixdate == null) fixdate = 0; */\n    if (fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);else if (fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n    return d;\n  }\n  if (str instanceof Date) return str;\n  if (good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n    var s = d.getFullYear();\n    if (str.indexOf(\"\" + s) > -1) return d;\n    d.setFullYear(d.getFullYear() + 100);\n    return d;\n  }\n  var n = str.match(/\\d+/g) || [\"2017\", \"2\", \"19\", \"0\", \"0\", \"0\"];\n  var out = new Date(+n[0], +n[1] - 1, +n[2], +n[3] || 0, +n[4] || 0, +n[5] || 0);\n  if (str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n  return out;\n}\nfunction cc2str(arr /*:Array<number>*/, debomit) /*:string*/{\n  if (has_buf && Buffer.isBuffer(arr)) {\n    if (debomit) {\n      if (arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString(\"utf16le\"));\n      if (arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString(\"binary\")));\n    }\n    return arr.toString(\"binary\");\n  }\n  if (typeof TextDecoder !== \"undefined\") try {\n    if (debomit) {\n      if (arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder(\"utf-16le\").decode(arr.slice(2)));\n      if (arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder(\"utf-16be\").decode(arr.slice(2)));\n    }\n    var rev = {\n      \"\\u20ac\": \"\\x80\",\n      \"\\u201a\": \"\\x82\",\n      \"\\u0192\": \"\\x83\",\n      \"\\u201e\": \"\\x84\",\n      \"\\u2026\": \"\\x85\",\n      \"\\u2020\": \"\\x86\",\n      \"\\u2021\": \"\\x87\",\n      \"\\u02c6\": \"\\x88\",\n      \"\\u2030\": \"\\x89\",\n      \"\\u0160\": \"\\x8a\",\n      \"\\u2039\": \"\\x8b\",\n      \"\\u0152\": \"\\x8c\",\n      \"\\u017d\": \"\\x8e\",\n      \"\\u2018\": \"\\x91\",\n      \"\\u2019\": \"\\x92\",\n      \"\\u201c\": \"\\x93\",\n      \"\\u201d\": \"\\x94\",\n      \"\\u2022\": \"\\x95\",\n      \"\\u2013\": \"\\x96\",\n      \"\\u2014\": \"\\x97\",\n      \"\\u02dc\": \"\\x98\",\n      \"\\u2122\": \"\\x99\",\n      \"\\u0161\": \"\\x9a\",\n      \"\\u203a\": \"\\x9b\",\n      \"\\u0153\": \"\\x9c\",\n      \"\\u017e\": \"\\x9e\",\n      \"\\u0178\": \"\\x9f\"\n    };\n    if (Array.isArray(arr)) arr = new Uint8Array(arr);\n    return new TextDecoder(\"latin1\").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function (c) {\n      return rev[c] || c;\n    });\n  } catch (e) {}\n  var o = [];\n  for (var i = 0; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n  return o.join(\"\");\n}\nfunction dup(o /*:any*/) /*:any*/{\n  if (typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n  if (typeof o != 'object' || o == null) return o;\n  if (o instanceof Date) return new Date(o.getTime());\n  var out = {};\n  for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n  return out;\n}\nfunction fill(c /*:string*/, l /*:number*/) /*:string*/{\n  var o = \"\";\n  while (o.length < l) o += c;\n  return o;\n}\n\n/* TODO: stress test */\nfunction fuzzynum(s /*:string*/) /*:number*/{\n  var v /*:number*/ = Number(s);\n  if (!isNaN(v)) return isFinite(v) ? v : NaN;\n  if (!/\\d/.test(s)) return v;\n  var wt = 1;\n  var ss = s.replace(/([\\d]),([\\d])/g, \"$1$2\").replace(/[$]/g, \"\").replace(/[%]/g, function () {\n    wt *= 100;\n    return \"\";\n  });\n  if (!isNaN(v = Number(ss))) return v / wt;\n  ss = ss.replace(/[(](.*)[)]/, function ($$, $1) {\n    wt = -wt;\n    return $1;\n  });\n  if (!isNaN(v = Number(ss))) return v / wt;\n  return v;\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s /*:string*/) /*:Date*/{\n  var o = new Date(s),\n    n = new Date(NaN);\n  var y = o.getYear(),\n    m = o.getMonth(),\n    d = o.getDate();\n  if (isNaN(d)) return n;\n  var lower = s.toLowerCase();\n  if (lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n    lower = lower.replace(/[^a-z]/g, \"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/, \"\");\n    if (lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n  } else if (lower.match(/[a-z]/)) return n;\n  if (y < 0 || y > 8099) return n;\n  if ((m > 0 || d > 1) && y != 101) return o;\n  if (s.match(/[^-0-9:,\\/\\\\]/)) return n;\n  return o;\n}\nvar split_regex = /*#__PURE__*/function () {\n  var safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n  return function split_regex(str /*:string*/, re, def /*:string*/) /*:Array<string>*/{\n    if (safe_split_regex || typeof re == \"string\") return str.split(re);\n    var p = str.split(re),\n      o = [p[0]];\n    for (var i = 1; i < p.length; ++i) {\n      o.push(def);\n      o.push(p[i]);\n    }\n    return o;\n  };\n}();\nfunction getdatastr(data) /*:?string*/{\n  if (!data) return null;\n  if (data.content && data.type) return cc2str(data.content, true);\n  if (data.data) return debom(data.data);\n  if (data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n  if (data.asBinary) return debom(data.asBinary());\n  if (data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(), 0)));\n  return null;\n}\nfunction getdatabin(data) {\n  if (!data) return null;\n  if (data.data) return char_codes(data.data);\n  if (data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n  if (data._data && data._data.getContent) {\n    var o = data._data.getContent();\n    if (typeof o == \"string\") return char_codes(o);\n    return Array.prototype.slice.call(o);\n  }\n  if (data.content && data.type) return data.content;\n  return null;\n}\nfunction getdata(data) {\n  return data && data.name.slice(-4) === \".bin\" ? getdatabin(data) : getdatastr(data);\n}\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file /*:string*/) {\n  var k = zip.FullPaths || keys(zip.files);\n  var f = file.toLowerCase().replace(/[\\/]/g, '\\\\'),\n    g = f.replace(/\\\\/g, '\\/');\n  for (var i = 0; i < k.length; ++i) {\n    var n = k[i].replace(/^Root Entry[\\/]/, \"\").toLowerCase();\n    if (f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n  }\n  return null;\n}\nfunction getzipfile(zip, file /*:string*/) {\n  var o = safegetzipfile(zip, file);\n  if (o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n  return o;\n}\nfunction getzipdata(zip, file /*:string*/, safe /*:?boolean*/) /*:any*/{\n  if (!safe) return getdata(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipdata(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction getzipstr(zip, file /*:string*/, safe /*:?boolean*/) /*:?string*/{\n  if (!safe) return getdatastr(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipstr(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction getzipbin(zip, file /*:string*/, safe /*:?boolean*/) /*:any*/{\n  if (!safe) return getdatabin(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipbin(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction zipentries(zip) {\n  var k = zip.FullPaths || keys(zip.files),\n    o = [];\n  for (var i = 0; i < k.length; ++i) if (k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n  return o.sort();\n}\nfunction zip_add_file(zip, path, content) {\n  if (zip.FullPaths) {\n    if (typeof content == \"string\") {\n      var res;\n      if (has_buf) res = Buffer_from(content);\n      /* TODO: investigate performance in Edge 13 */\n      //else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n      else res = utf8decode(content);\n      return CFB.utils.cfb_add(zip, path, res);\n    }\n    CFB.utils.cfb_add(zip, path, content);\n  } else zip.file(path, content);\n}\nfunction zip_new() {\n  return CFB.utils.cfb_new();\n}\nfunction zip_read(d, o) {\n  switch (o.type) {\n    case \"base64\":\n      return CFB.read(d, {\n        type: \"base64\"\n      });\n    case \"binary\":\n      return CFB.read(d, {\n        type: \"binary\"\n      });\n    case \"buffer\":\n    case \"array\":\n      return CFB.read(d, {\n        type: \"buffer\"\n      });\n  }\n  throw new Error(\"Unrecognized type \" + o.type);\n}\nfunction resolve_path(path /*:string*/, base /*:string*/) /*:string*/{\n  if (path.charAt(0) == \"/\") return path.slice(1);\n  var result = base.split('/');\n  if (base.slice(-1) != \"/\") result.pop(); // folder path\n  var target = path.split('/');\n  while (target.length !== 0) {\n    var step = target.shift();\n    if (step === '..') result.pop();else if (step !== '.') result.push(step);\n  }\n  return result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg = /([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex1 = /<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s*[\\/\\?]?>/mg,\n  tagregex2 = /<[^>]*>/g;\nvar tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;\nvar nsregex = /<\\w*:/,\n  nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag /*:string*/, skip_root /*:?boolean*/, skip_LC /*:?boolean*/) /*:any*/{\n  var z = {} /*:any*/;\n  var eq = 0,\n    c = 0;\n  for (; eq !== tag.length; ++eq) if ((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n  if (!skip_root) z[0] = tag.slice(0, eq);\n  if (eq === tag.length) return z;\n  var m = tag.match(attregexg),\n    j = 0,\n    v = \"\",\n    i = 0,\n    q = \"\",\n    cc = \"\",\n    quot = 1;\n  if (m) for (i = 0; i != m.length; ++i) {\n    cc = m[i];\n    for (c = 0; c != cc.length; ++c) if (cc.charCodeAt(c) === 61) break;\n    q = cc.slice(0, c).trim();\n    while (cc.charCodeAt(c + 1) == 32) ++c;\n    quot = (eq = cc.charCodeAt(c + 1)) == 34 || eq == 39 ? 1 : 0;\n    v = cc.slice(c + 1 + quot, cc.length - quot);\n    for (j = 0; j != q.length; ++j) if (q.charCodeAt(j) === 58) break;\n    if (j === q.length) {\n      if (q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n      z[q] = v;\n      if (!skip_LC) z[q.toLowerCase()] = v;\n    } else {\n      var k = (j === 5 && q.slice(0, 5) === \"xmlns\" ? \"xmlns\" : \"\") + q.slice(j + 1);\n      if (z[k] && q.slice(j - 3, j) == \"ext\") continue; // from ods\n      z[k] = v;\n      if (!skip_LC) z[k.toLowerCase()] = v;\n    }\n  }\n  return z;\n}\nfunction strip_ns(x /*:string*/) /*:string*/{\n  return x.replace(nsregex2, \"<$1\");\n}\nvar encodings = {\n  '&quot;': '\"',\n  '&apos;': \"'\",\n  '&gt;': '>',\n  '&lt;': '<',\n  '&amp;': '&'\n};\nvar rencoding = /*#__PURE__*/evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml /*:StringConv*/ = /*#__PURE__*/function () {\n  /* 22.4.2.4 bstr (Basic String) */\n  var encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig,\n    coderegex = /_x([\\da-fA-F]{4})_/ig;\n  return function unescapexml(text /*:string*/) /*:string*/{\n    var s = text + '',\n      i = s.indexOf(\"<![CDATA[\");\n    if (i == -1) return s.replace(encregex, function ($$, $1) {\n      return encodings[$$] || String.fromCharCode(parseInt($1, $$.indexOf(\"x\") > -1 ? 16 : 10)) || $$;\n    }).replace(coderegex, function (m, c) {\n      return String.fromCharCode(parseInt(c, 16));\n    });\n    var j = s.indexOf(\"]]>\");\n    return unescapexml(s.slice(0, i)) + s.slice(i + 9, j) + unescapexml(s.slice(j + 3));\n  };\n}();\nvar decregex = /[&<>'\"]/g,\n  charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\nfunction escapexml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(charegex, function (s) {\n    return \"_x\" + (\"000\" + s.charCodeAt(0).toString(16)).slice(-4) + \"_\";\n  });\n}\nfunction escapexmltag(text /*:string*/) /*:string*/{\n  return escapexml(text).replace(/ /g, \"_x0020_\");\n}\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex, function (s) {\n    return \"&#x\" + (\"000\" + s.charCodeAt(0).toString(16)).slice(-4) + \";\";\n  });\n}\nfunction escapexlml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(htmlcharegex, function (s) {\n    return \"&#x\" + s.charCodeAt(0).toString(16).toUpperCase() + \";\";\n  });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr /*:StringConv*/ = /*#__PURE__*/function () {\n  var entregex = /&#(\\d+);/g;\n  function entrepl($$ /*:string*/, $1 /*:string*/) /*:string*/{\n    return String.fromCharCode(parseInt($1, 10));\n  }\n  return function xlml_fixstr(str /*:string*/) /*:string*/{\n    return str.replace(entregex, entrepl);\n  };\n}();\nfunction xlml_unfixstr(str /*:string*/) /*:string*/{\n  return str.replace(/(\\r\\n|[\\r\\n])/g, \"\\&#10;\");\n}\nfunction parsexmlbool(value /*:any*/) /*:boolean*/{\n  switch (value) {\n    case 1:\n    case true:\n    case '1':\n    case 'true':\n    case 'TRUE':\n      return true;\n    /* case '0': case 'false': case 'FALSE':*/\n    default:\n      return false;\n  }\n}\nfunction utf8reada(orig /*:string*/) /*:string*/{\n  var out = \"\",\n    i = 0,\n    c = 0,\n    d = 0,\n    e = 0,\n    f = 0,\n    w = 0;\n  while (i < orig.length) {\n    c = orig.charCodeAt(i++);\n    if (c < 128) {\n      out += String.fromCharCode(c);\n      continue;\n    }\n    d = orig.charCodeAt(i++);\n    if (c > 191 && c < 224) {\n      f = (c & 31) << 6;\n      f |= d & 63;\n      out += String.fromCharCode(f);\n      continue;\n    }\n    e = orig.charCodeAt(i++);\n    if (c < 240) {\n      out += String.fromCharCode((c & 15) << 12 | (d & 63) << 6 | e & 63);\n      continue;\n    }\n    f = orig.charCodeAt(i++);\n    w = ((c & 7) << 18 | (d & 63) << 12 | (e & 63) << 6 | f & 63) - 65536;\n    out += String.fromCharCode(0xD800 + (w >>> 10 & 1023));\n    out += String.fromCharCode(0xDC00 + (w & 1023));\n  }\n  return out;\n}\nfunction utf8readb(data) {\n  var out = new_raw_buf(2 * data.length),\n    w,\n    i,\n    j = 1,\n    k = 0,\n    ww = 0,\n    c;\n  for (i = 0; i < data.length; i += j) {\n    j = 1;\n    if ((c = data.charCodeAt(i)) < 128) w = c;else if (c < 224) {\n      w = (c & 31) * 64 + (data.charCodeAt(i + 1) & 63);\n      j = 2;\n    } else if (c < 240) {\n      w = (c & 15) * 4096 + (data.charCodeAt(i + 1) & 63) * 64 + (data.charCodeAt(i + 2) & 63);\n      j = 3;\n    } else {\n      j = 4;\n      w = (c & 7) * 262144 + (data.charCodeAt(i + 1) & 63) * 4096 + (data.charCodeAt(i + 2) & 63) * 64 + (data.charCodeAt(i + 3) & 63);\n      w -= 65536;\n      ww = 0xD800 + (w >>> 10 & 1023);\n      w = 0xDC00 + (w & 1023);\n    }\n    if (ww !== 0) {\n      out[k++] = ww & 255;\n      out[k++] = ww >>> 8;\n      ww = 0;\n    }\n    out[k++] = w % 256;\n    out[k++] = w >>> 8;\n  }\n  return out.slice(0, k).toString('ucs2');\n}\nfunction utf8readc(data) {\n  return Buffer_from(data, 'binary').toString('utf8');\n}\nvar utf8corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\nvar utf8read = has_buf && ( /*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;\nvar utf8write /*:StringConv*/ = has_buf ? function (data) {\n  return Buffer_from(data, 'utf8').toString(\"binary\");\n} : function (orig /*:string*/) /*:string*/{\n  var out /*:Array<string>*/ = [],\n    i = 0,\n    c = 0,\n    d = 0;\n  while (i < orig.length) {\n    c = orig.charCodeAt(i++);\n    switch (true) {\n      case c < 128:\n        out.push(String.fromCharCode(c));\n        break;\n      case c < 2048:\n        out.push(String.fromCharCode(192 + (c >> 6)));\n        out.push(String.fromCharCode(128 + (c & 63)));\n        break;\n      case c >= 55296 && c < 57344:\n        c -= 55296;\n        d = orig.charCodeAt(i++) - 56320 + (c << 10);\n        out.push(String.fromCharCode(240 + (d >> 18 & 7)));\n        out.push(String.fromCharCode(144 + (d >> 12 & 63)));\n        out.push(String.fromCharCode(128 + (d >> 6 & 63)));\n        out.push(String.fromCharCode(128 + (d & 63)));\n        break;\n      default:\n        out.push(String.fromCharCode(224 + (c >> 12)));\n        out.push(String.fromCharCode(128 + (c >> 6 & 63)));\n        out.push(String.fromCharCode(128 + (c & 63)));\n    }\n  }\n  return out.join(\"\");\n};\n\n// matches <foo>...</foo> extracts content\nvar matchtag = /*#__PURE__*/function () {\n  var mtcache /*:{[k:string]:RegExp}*/ = {} /*:any*/;\n  return function matchtag(f /*:string*/, g /*:?string*/) /*:RegExp*/{\n    var t = f + \"|\" + (g || \"\");\n    if (mtcache[t]) return mtcache[t];\n    return mtcache[t] = new RegExp('<(?:\\\\w+:)?' + f + '(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?' + f + '>', g || \"\" /*:any*/);\n  };\n}();\nvar htmldecode /*:{(s:string):string}*/ = /*#__PURE__*/function () {\n  var entities /*:Array<[RegExp, string]>*/ = [['nbsp', ' '], ['middot', '·'], ['quot', '\"'], ['apos', \"'\"], ['gt', '>'], ['lt', '<'], ['amp', '&']].map(function (x /*:[string, string]*/) {\n    return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]];\n  });\n  return function htmldecode(str /*:string*/) /*:string*/{\n    var o = str\n    // Remove new lines and spaces from start of content\n    .replace(/^[\\t\\n\\r ]+/, \"\")\n    // Remove new lines and spaces from end of content\n    .replace(/[\\t\\n\\r ]+$/, \"\")\n    // Added line which removes any white space characters after and before html tags\n    .replace(/>\\s+/g, \">\").replace(/\\s+</g, \"<\")\n    // Replace remaining new lines and spaces with space\n    .replace(/[\\t\\n\\r ]+/g, \" \")\n    // Replace <br> tags with new lines\n    .replace(/<\\s*[bB][rR]\\s*\\/?>/g, \"\\n\")\n    // Strip HTML elements\n    .replace(/<[^>]*>/g, \"\");\n    for (var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n    return o;\n  };\n}();\nvar vtregex = /*#__PURE__*/function () {\n  var vt_cache = {};\n  return function vt_regex(bt) {\n    if (vt_cache[bt] !== undefined) return vt_cache[bt];\n    return vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g');\n  };\n}();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g,\n  vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\nfunction parseVector(data /*:string*/, opts) /*:Array<{v:string,t:string}>*/{\n  var h = parsexmltag(data);\n  var matches /*:Array<string>*/ = data.match(vtregex(h.baseType)) || [];\n  var res /*:Array<any>*/ = [];\n  if (matches.length != h.size) {\n    if (opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n    return res;\n  }\n  matches.forEach(function (x /*:string*/) {\n    var v = x.replace(vtvregex, \"\").match(vtmregex);\n    if (v) res.push({\n      v: utf8read(v[2]),\n      t: v[1]\n    });\n  });\n  return res;\n}\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f /*:string*/, g /*:string*/) /*:string*/{\n  return '<' + f + (g.match(wtregex) ? ' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>';\n}\nfunction wxt_helper(h) /*:string*/{\n  return keys(h).map(function (k) {\n    return \" \" + k + '=\"' + h[k] + '\"';\n  }).join(\"\");\n}\nfunction writextag(f /*:string*/, g /*:?string*/, h) {\n  return '<' + f + (h != null ? wxt_helper(h) : \"\") + (g != null ? (g.match(wtregex) ? ' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';\n}\nfunction write_w3cdtf(d /*:Date*/, t /*:?boolean*/) /*:string*/{\n  try {\n    return d.toISOString().replace(/\\.\\d*/, \"\");\n  } catch (e) {\n    if (t) throw e;\n  }\n  return \"\";\n}\nfunction write_vt(s, xlsx /*:?boolean*/) /*:string*/{\n  switch (typeof s) {\n    case 'string':\n      var o = writextag('vt:lpwstr', escapexml(s));\n      if (xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n      return o;\n    case 'number':\n      return writextag((s | 0) == s ? 'vt:i4' : 'vt:r8', escapexml(String(s)));\n    case 'boolean':\n      return writextag('vt:bool', s ? 'true' : 'false');\n  }\n  if (s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n  throw new Error(\"Unable to serialize \" + s);\n}\nfunction xlml_normalize(d) /*:string*/{\n  if (has_buf && /*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/Buffer.isBuffer(d)) return d.toString('utf8');\n  if (typeof d === 'string') return d;\n  /* duktape */\n  if (typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n  throw new Error(\"Bad input format: expected Buffer or string\");\n}\n/* UOS uses CJK in tags */\nvar xlmlregex = /<(\\/?)([^\\s?><!\\/:]*:|)([^\\s?<>:\\/]+)(?:[\\s?:\\/][^>]*)?>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\n\nvar XMLNS = {\n  CORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n  CUST_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\",\n  EXT_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\",\n  CT: 'http://schemas.openxmlformats.org/package/2006/content-types',\n  RELS: 'http://schemas.openxmlformats.org/package/2006/relationships',\n  TCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',\n  'dc': 'http://purl.org/dc/elements/1.1/',\n  'dcterms': 'http://purl.org/dc/terms/',\n  'dcmitype': 'http://purl.org/dc/dcmitype/',\n  'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n  'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n  'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n  'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n  'xsd': 'http://www.w3.org/2001/XMLSchema'\n} /*:any*/;\nvar XMLNS_main = ['http://schemas.openxmlformats.org/spreadsheetml/2006/main', 'http://purl.oclc.org/ooxml/spreadsheetml/main', 'http://schemas.microsoft.com/office/excel/2006/main', 'http://schemas.microsoft.com/office/excel/2006/2'];\nvar XLMLNS = {\n  'o': 'urn:schemas-microsoft-com:office:office',\n  'x': 'urn:schemas-microsoft-com:office:excel',\n  'ss': 'urn:schemas-microsoft-com:office:spreadsheet',\n  'dt': 'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n  'mv': 'http://macVmlSchemaUri',\n  'v': 'urn:schemas-microsoft-com:vml',\n  'html': 'http://www.w3.org/TR/REC-html40'\n} /*:any*/;\nfunction read_double_le(b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  var s = 1 - 2 * (b[idx + 7] >>> 7);\n  var e = ((b[idx + 7] & 0x7f) << 4) + (b[idx + 6] >>> 4 & 0x0f);\n  var m = b[idx + 6] & 0x0f;\n  for (var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n  if (e == 0x7ff) return m == 0 ? s * Infinity : NaN;\n  if (e == 0) e = -1022;else {\n    e -= 1023;\n    m += Math.pow(2, 52);\n  }\n  return s * Math.pow(2, e - 52) * m;\n}\nfunction write_double_le(b /*:RawBytes|CFBlob*/, v /*:number*/, idx /*:number*/) {\n  var bs = (v < 0 || 1 / v == -Infinity ? 1 : 0) << 7,\n    e = 0,\n    m = 0;\n  var av = bs ? -v : v;\n  if (!isFinite(av)) {\n    e = 0x7ff;\n    m = isNaN(v) ? 0x6969 : 0;\n  } else if (av == 0) e = m = 0;else {\n    e = Math.floor(Math.log(av) / Math.LN2);\n    m = av * Math.pow(2, 52 - e);\n    if (e <= -1023 && (!isFinite(m) || m < Math.pow(2, 52))) {\n      e = -1022;\n    } else {\n      m -= Math.pow(2, 52);\n      e += 1023;\n    }\n  }\n  for (var i = 0; i <= 5; ++i, m /= 256) b[idx + i] = m & 0xff;\n  b[idx + 6] = (e & 0x0f) << 4 | m & 0xf;\n  b[idx + 7] = e >> 4 | bs;\n}\nvar ___toBuffer = function (bufs /*:Array<Array<RawBytes> >*/) /*:RawBytes*/{\n  var x = [],\n    w = 10240;\n  for (var i = 0; i < bufs[0].length; ++i) if (bufs[0][i]) for (var j = 0, L = bufs[0][i].length; j < L; j += w) x.push.apply(x, bufs[0][i].slice(j, j + w));\n  return x;\n};\nvar __toBuffer = has_buf ? function (bufs) {\n  return bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0]) ? Buffer.concat(bufs[0].map(function (x) {\n    return Buffer.isBuffer(x) ? x : Buffer_from(x);\n  })) : ___toBuffer(bufs);\n} : ___toBuffer;\nvar ___utf16le = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) /*:string*/{\n  var ss /*:Array<string>*/ = [];\n  for (var i = s; i < e; i += 2) ss.push(String.fromCharCode(__readUInt16LE(b, i)));\n  return ss.join(\"\").replace(chr0, '');\n};\nvar __utf16le = has_buf ? function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) /*:string*/{\n  if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___utf16le(b, s, e);\n  return b.toString('utf16le', s, e).replace(chr0, '') /*.replace(chr1,'!')*/;\n} : ___utf16le;\nvar ___hexlify = function (b /*:RawBytes|CFBlob*/, s /*:number*/, l /*:number*/) /*:string*/{\n  var ss /*:Array<string>*/ = [];\n  for (var i = s; i < s + l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2));\n  return ss.join(\"\");\n};\nvar __hexlify = has_buf ? function (b /*:RawBytes|CFBlob*/, s /*:number*/, l /*:number*/) /*:string*/{\n  return Buffer.isBuffer(b) /*:: && b instanceof Buffer*/ ? b.toString('hex', s, s + l) : ___hexlify(b, s, l);\n} : ___hexlify;\nvar ___utf8 = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n  var ss = [];\n  for (var i = s; i < e; i++) ss.push(String.fromCharCode(__readUInt8(b, i)));\n  return ss.join(\"\");\n};\nvar __utf8 = has_buf ? function utf8_b(b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n  return Buffer.isBuffer(b) /*:: && (b instanceof Buffer)*/ ? b.toString('utf8', s, e) : ___utf8(b, s, e);\n} : ___utf8;\nvar ___lpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __lpstr = ___lpstr;\nvar ___cpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __cpstr = ___cpstr;\nvar ___lpwstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = 2 * __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __lpwstr = ___lpwstr;\nvar ___lpp4 = function lpp4_(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf16le(b, i + 4, i + 4 + len) : \"\";\n};\nvar __lpp4 = ___lpp4;\nvar ___8lpp4 = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len) : \"\";\n};\nvar __8lpp4 = ___8lpp4;\nvar ___double = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) {\n  return read_double_le(b, idx);\n};\nvar __double = ___double;\nvar is_buf = function is_buf_a(a) {\n  return Array.isArray(a) || typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array;\n};\nif (has_buf /*:: && typeof Buffer !== 'undefined'*/) {\n  __lpstr = function lpstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i);\n    var len = b.readUInt32LE(i);\n    return len > 0 ? b.toString('utf8', i + 4, i + 4 + len - 1) : \"\";\n  };\n  __cpstr = function cpstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i);\n    var len = b.readUInt32LE(i);\n    return len > 0 ? b.toString('utf8', i + 4, i + 4 + len - 1) : \"\";\n  };\n  __lpwstr = function lpwstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___lpwstr(b, i);\n    var len = 2 * b.readUInt32LE(i);\n    return b.toString('utf16le', i + 4, i + 4 + len - 1);\n  };\n  __lpp4 = function lpp4_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___lpp4(b, i);\n    var len = b.readUInt32LE(i);\n    return b.toString('utf16le', i + 4, i + 4 + len);\n  };\n  __8lpp4 = function lpp4_8b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i);\n    var len = b.readUInt32LE(i);\n    return b.toString('utf8', i + 4, i + 4 + len);\n  };\n  __double = function double_(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (Buffer.isBuffer(b) /*::&& b instanceof Buffer*/) return b.readDoubleLE(i);\n    return ___double(b, i);\n  };\n  is_buf = function is_buf_b(a) {\n    return Buffer.isBuffer(a) || Array.isArray(a) || typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array;\n  };\n}\n\n/* from js-xls */\nfunction cpdoit() {\n  __utf16le = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n    return $cptable.utils.decode(1200, b.slice(s, e)).replace(chr0, '');\n  };\n  __utf8 = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n    return $cptable.utils.decode(65001, b.slice(s, e));\n  };\n  __lpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(current_ansi, b.slice(i + 4, i + 4 + len - 1)) : \"\";\n  };\n  __cpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(current_codepage, b.slice(i + 4, i + 4 + len - 1)) : \"\";\n  };\n  __lpwstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = 2 * __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(1200, b.slice(i + 4, i + 4 + len - 1)) : \"\";\n  };\n  __lpp4 = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(1200, b.slice(i + 4, i + 4 + len)) : \"\";\n  };\n  __8lpp4 = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    var len = __readUInt32LE(b, i);\n    return len > 0 ? $cptable.utils.decode(65001, b.slice(i + 4, i + 4 + len)) : \"\";\n  };\n}\nif (typeof $cptable !== 'undefined') cpdoit();\nvar __readUInt8 = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx];\n};\nvar __readUInt16LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 1] * (1 << 8) + b[idx];\n};\nvar __readInt16LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  var u = b[idx + 1] * (1 << 8) + b[idx];\n  return u < 0x8000 ? u : (0xffff - u + 1) * -1;\n};\nvar __readUInt32LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 3] * (1 << 24) + (b[idx + 2] << 16) + (b[idx + 1] << 8) + b[idx];\n};\nvar __readInt32LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 3] << 24 | b[idx + 2] << 16 | b[idx + 1] << 8 | b[idx];\n};\nvar __readInt32BE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx] << 24 | b[idx + 1] << 16 | b[idx + 2] << 8 | b[idx + 3];\n};\nfunction ReadShift(size /*:number*/, t /*:?string*/) /*:number|string*/{\n  var o = \"\",\n    oI /*:: :number = 0*/,\n    oR,\n    oo = [],\n    w,\n    vv,\n    i,\n    loc;\n  switch (t) {\n    case 'dbcs':\n      loc = this.l;\n      if (has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l + 2 * size).toString(\"utf16le\");else for (i = 0; i < size; ++i) {\n        o += String.fromCharCode(__readUInt16LE(this, loc));\n        loc += 2;\n      }\n      size *= 2;\n      break;\n    case 'utf8':\n      o = __utf8(this, this.l, this.l + size);\n      break;\n    case 'utf16le':\n      size *= 2;\n      o = __utf16le(this, this.l, this.l + size);\n      break;\n    case 'wstr':\n      if (typeof $cptable !== 'undefined') o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + 2 * size));else return ReadShift.call(this, size, 'dbcs');\n      size = 2 * size;\n      break;\n\n    /* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n    case 'lpstr-ansi':\n      o = __lpstr(this, this.l);\n      size = 4 + __readUInt32LE(this, this.l);\n      break;\n    case 'lpstr-cp':\n      o = __cpstr(this, this.l);\n      size = 4 + __readUInt32LE(this, this.l);\n      break;\n    /* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n    case 'lpwstr':\n      o = __lpwstr(this, this.l);\n      size = 4 + 2 * __readUInt32LE(this, this.l);\n      break;\n    /* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n    case 'lpp4':\n      size = 4 + __readUInt32LE(this, this.l);\n      o = __lpp4(this, this.l);\n      if (size & 0x02) size += 2;\n      break;\n    /* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n    case '8lpp4':\n      size = 4 + __readUInt32LE(this, this.l);\n      o = __8lpp4(this, this.l);\n      if (size & 0x03) size += 4 - (size & 0x03);\n      break;\n    case 'cstr':\n      size = 0;\n      o = \"\";\n      while ((w = __readUInt8(this, this.l + size++)) !== 0) oo.push(_getchar(w));\n      o = oo.join(\"\");\n      break;\n    case '_wstr':\n      size = 0;\n      o = \"\";\n      while ((w = __readUInt16LE(this, this.l + size)) !== 0) {\n        oo.push(_getchar(w));\n        size += 2;\n      }\n      size += 2;\n      o = oo.join(\"\");\n      break;\n\n    /* sbcs and dbcs support continue records in the SST way TODO codepages */\n    case 'dbcs-cont':\n      o = \"\";\n      loc = this.l;\n      for (i = 0; i < size; ++i) {\n        if (this.lens && this.lens.indexOf(loc) !== -1) {\n          w = __readUInt8(this, loc);\n          this.l = loc + 1;\n          vv = ReadShift.call(this, size - i, w ? 'dbcs-cont' : 'sbcs-cont');\n          return oo.join(\"\") + vv;\n        }\n        oo.push(_getchar(__readUInt16LE(this, loc)));\n        loc += 2;\n      }\n      o = oo.join(\"\");\n      size *= 2;\n      break;\n    case 'cpstr':\n      if (typeof $cptable !== 'undefined') {\n        o = $cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n        break;\n      }\n    /* falls through */\n    case 'sbcs-cont':\n      o = \"\";\n      loc = this.l;\n      for (i = 0; i != size; ++i) {\n        if (this.lens && this.lens.indexOf(loc) !== -1) {\n          w = __readUInt8(this, loc);\n          this.l = loc + 1;\n          vv = ReadShift.call(this, size - i, w ? 'dbcs-cont' : 'sbcs-cont');\n          return oo.join(\"\") + vv;\n        }\n        oo.push(_getchar(__readUInt8(this, loc)));\n        loc += 1;\n      }\n      o = oo.join(\"\");\n      break;\n    default:\n      switch (size) {\n        case 1:\n          oI = __readUInt8(this, this.l);\n          this.l++;\n          return oI;\n        case 2:\n          oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l);\n          this.l += 2;\n          return oI;\n        case 4:\n        case -4:\n          if (t === 'i' || (this[this.l + 3] & 0x80) === 0) {\n            oI = (size > 0 ? __readInt32LE : __readInt32BE)(this, this.l);\n            this.l += 4;\n            return oI;\n          } else {\n            oR = __readUInt32LE(this, this.l);\n            this.l += 4;\n          }\n          return oR;\n        case 8:\n        case -8:\n          if (t === 'f') {\n            if (size == 8) oR = __double(this, this.l);else oR = __double([this[this.l + 7], this[this.l + 6], this[this.l + 5], this[this.l + 4], this[this.l + 3], this[this.l + 2], this[this.l + 1], this[this.l + 0]], 0);\n            this.l += 8;\n            return oR;\n          } else size = 8;\n        /* falls through */\n        case 16:\n          o = __hexlify(this, this.l, size);\n          break;\n      }\n  }\n  this.l += size;\n  return o;\n}\nvar __writeUInt32LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >>> 8 & 0xFF;\n  b[idx + 2] = val >>> 16 & 0xFF;\n  b[idx + 3] = val >>> 24 & 0xFF;\n};\nvar __writeInt32LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >> 8 & 0xFF;\n  b[idx + 2] = val >> 16 & 0xFF;\n  b[idx + 3] = val >> 24 & 0xFF;\n};\nvar __writeUInt16LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >>> 8 & 0xFF;\n};\nfunction WriteShift(t /*:number*/, val /*:string|number*/, f /*:?string*/) /*:any*/{\n  var size = 0,\n    i = 0;\n  if (f === 'dbcs') {\n    /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n    for (i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n    size = 2 * val.length;\n  } else if (f === 'sbcs') {\n    if (typeof $cptable !== 'undefined' && current_ansi == 874) {\n      /* TODO: use tables directly, don't encode */\n      /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n      for (i = 0; i != val.length; ++i) {\n        var cppayload = $cptable.utils.encode(current_ansi, val.charAt(i));\n        this[this.l + i] = cppayload[0];\n      }\n    } else {\n      /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n      val = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n      /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n      for (i = 0; i != val.length; ++i) this[this.l + i] = val.charCodeAt(i) & 0xFF;\n    }\n    size = val.length;\n  } else if (f === 'hex') {\n    for (; i < t; ++i) {\n      /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n      this[this.l++] = parseInt(val.slice(2 * i, 2 * i + 2), 16) || 0;\n    }\n    return this;\n  } else if (f === 'utf16le') {\n    /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n    var end /*:number*/ = Math.min(this.l + t, this.length);\n    for (i = 0; i < Math.min(val.length, t); ++i) {\n      var cc = val.charCodeAt(i);\n      this[this.l++] = cc & 0xff;\n      this[this.l++] = cc >> 8;\n    }\n    while (this.l < end) this[this.l++] = 0;\n    return this;\n  } else /*:: if(typeof val === 'number') */switch (t) {\n      case 1:\n        size = 1;\n        this[this.l] = val & 0xFF;\n        break;\n      case 2:\n        size = 2;\n        this[this.l] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 1] = val & 0xFF;\n        break;\n      case 3:\n        size = 3;\n        this[this.l] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 1] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 2] = val & 0xFF;\n        break;\n      case 4:\n        size = 4;\n        __writeUInt32LE(this, val, this.l);\n        break;\n      case 8:\n        size = 8;\n        if (f === 'f') {\n          write_double_le(this, val, this.l);\n          break;\n        }\n      /* falls through */\n      case 16:\n        break;\n      case -4:\n        size = 4;\n        __writeInt32LE(this, val, this.l);\n        break;\n    }\n  this.l += size;\n  return this;\n}\nfunction CheckField(hexstr /*:string*/, fld /*:string*/) /*:void*/{\n  var m = __hexlify(this, this.l, hexstr.length >> 1);\n  if (m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n  this.l += hexstr.length >> 1;\n}\nfunction prep_blob(blob, pos /*:number*/) /*:void*/{\n  blob.l = pos;\n  blob.read_shift = /*::(*/ReadShift /*:: :any)*/;\n  blob.chk = CheckField;\n  blob.write_shift = WriteShift;\n}\nfunction parsenoop(blob, length /*:: :number, opts?:any */) {\n  blob.l += length;\n}\nfunction new_buf(sz /*:number*/) /*:Block*/{\n  var o = new_raw_buf(sz);\n  prep_blob(o, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb /*:RecordHopperCB*/, opts /*:?any*/) {\n  if (!data) return;\n  var tmpbyte, cntbyte, length;\n  prep_blob(data, data.l || 0);\n  var L = data.length,\n    RT = 0,\n    tgt = 0;\n  while (data.l < L) {\n    RT = data.read_shift(1);\n    if (RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F) << 7);\n    var R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n    tmpbyte = data.read_shift(1);\n    length = tmpbyte & 0x7F;\n    for (cntbyte = 1; cntbyte < 4 && tmpbyte & 0x80; ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F) << 7 * cntbyte;\n    tgt = data.l + length;\n    var d = R.f && R.f(data, length, opts);\n    data.l = tgt;\n    if (cb(d, R, RT)) return;\n  }\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array() /*:BufArray*/{\n  var bufs /*:Array<Block>*/ = [],\n    blksz = has_buf ? 256 : 2048;\n  var newblk = function ba_newblk(sz /*:number*/) /*:Block*/{\n    var o /*:Block*/ = new_buf(sz) /*:any*/;\n    prep_blob(o, 0);\n    return o;\n  };\n  var curbuf /*:Block*/ = newblk(blksz);\n  var endbuf = function ba_endbuf() {\n    if (!curbuf) return;\n    if (curbuf.length > curbuf.l) {\n      curbuf = curbuf.slice(0, curbuf.l);\n      curbuf.l = curbuf.length;\n    }\n    if (curbuf.length > 0) bufs.push(curbuf);\n    curbuf = null;\n  };\n  var next = function ba_next(sz /*:number*/) /*:Block*/{\n    if (curbuf && sz < curbuf.length - curbuf.l) return curbuf;\n    endbuf();\n    return curbuf = newblk(Math.max(sz + 1, blksz));\n  };\n  var end = function ba_end() {\n    endbuf();\n    return bconcat(bufs);\n  };\n  var push = function ba_push(buf) {\n    endbuf();\n    curbuf = buf;\n    if (curbuf.l == null) curbuf.l = curbuf.length;\n    next(blksz);\n  };\n  return {\n    next: next,\n    push: push,\n    end: end,\n    _bufs: bufs\n  } /*:any*/;\n}\nfunction write_record(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) {\n  var t /*:number*/ = +type,\n    l;\n  if (isNaN(t)) return; // TODO: throw something here?\n  if (!length) length = XLSBRecordEnum[t].p || (payload || []).length || 0;\n  l = 1 + (t >= 0x80 ? 1 : 0) + 1 /* + length*/;\n  if (length >= 0x80) ++l;\n  if (length >= 0x4000) ++l;\n  if (length >= 0x200000) ++l;\n  var o = ba.next(l);\n  if (t <= 0x7F) o.write_shift(1, t);else {\n    o.write_shift(1, (t & 0x7F) + 0x80);\n    o.write_shift(1, t >> 7);\n  }\n  for (var i = 0; i != 4; ++i) {\n    if (length >= 0x80) {\n      o.write_shift(1, (length & 0x7F) + 0x80);\n      length >>= 7;\n    } else {\n      o.write_shift(1, length);\n      break;\n    }\n  }\n  if ( /*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell /*:CellAddress*/, tgt /*:any*/, opts /*:?any*/) /*:CellAddress*/{\n  var out = dup(cell);\n  if (tgt.s) {\n    if (out.cRel) out.c += tgt.s.c;\n    if (out.rRel) out.r += tgt.s.r;\n  } else {\n    if (out.cRel) out.c += tgt.c;\n    if (out.rRel) out.r += tgt.r;\n  }\n  if (!opts || opts.biff < 12) {\n    while (out.c >= 0x100) out.c -= 0x100;\n    while (out.r >= 0x10000) out.r -= 0x10000;\n  }\n  return out;\n}\nfunction shift_range_xls(cell, range, opts) {\n  var out = dup(cell);\n  out.s = shift_cell_xls(out.s, range.s, opts);\n  out.e = shift_cell_xls(out.e, range.s, opts);\n  return out;\n}\nfunction encode_cell_xls(c /*:CellAddress*/, biff /*:number*/) /*:string*/{\n  if (c.cRel && c.c < 0) {\n    c = dup(c);\n    while (c.c < 0) c.c += biff > 8 ? 0x4000 : 0x100;\n  }\n  if (c.rRel && c.r < 0) {\n    c = dup(c);\n    while (c.r < 0) c.r += biff > 8 ? 0x100000 : biff > 5 ? 0x10000 : 0x4000;\n  }\n  var s = encode_cell(c);\n  if (!c.cRel && c.cRel != null) s = fix_col(s);\n  if (!c.rRel && c.rRel != null) s = fix_row(s);\n  return s;\n}\nfunction encode_range_xls(r, opts) /*:string*/{\n  if (r.s.r == 0 && !r.s.rRel) {\n    if (r.e.r == (opts.biff >= 12 ? 0xFFFFF : opts.biff >= 8 ? 0x10000 : 0x4000) && !r.e.rRel) {\n      return (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n    }\n  }\n  if (r.s.c == 0 && !r.s.cRel) {\n    if (r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n      return (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n    }\n  }\n  return encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr /*:string*/) /*:number*/{\n  return parseInt(unfix_row(rowstr), 10) - 1;\n}\nfunction encode_row(row /*:number*/) /*:string*/{\n  return \"\" + (row + 1);\n}\nfunction fix_row(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/([A-Z]|^)(\\d+)$/, \"$1$$$2\");\n}\nfunction unfix_row(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/\\$(\\d+)$/, \"$1\");\n}\nfunction decode_col(colstr /*:string*/) /*:number*/{\n  var c = unfix_col(colstr),\n    d = 0,\n    i = 0;\n  for (; i !== c.length; ++i) d = 26 * d + c.charCodeAt(i) - 64;\n  return d - 1;\n}\nfunction encode_col(col /*:number*/) /*:string*/{\n  if (col < 0) throw new Error(\"invalid column \" + col);\n  var s = \"\";\n  for (++col; col; col = Math.floor((col - 1) / 26)) s = String.fromCharCode((col - 1) % 26 + 65) + s;\n  return s;\n}\nfunction fix_col(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/^([A-Z])/, \"$$$1\");\n}\nfunction unfix_col(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/^\\$([A-Z])/, \"$1\");\n}\nfunction split_cell(cstr /*:string*/) /*:Array<string>*/{\n  return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/, \"$1,$2\").split(\",\");\n}\n//function decode_cell(cstr/*:string*/)/*:CellAddress*/ { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }\nfunction decode_cell(cstr /*:string*/) /*:CellAddress*/{\n  var R = 0,\n    C = 0;\n  for (var i = 0; i < cstr.length; ++i) {\n    var cc = cstr.charCodeAt(i);\n    if (cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);else if (cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n  }\n  return {\n    c: C - 1,\n    r: R - 1\n  };\n}\n//function encode_cell(cell/*:CellAddress*/)/*:string*/ { return encode_col(cell.c) + encode_row(cell.r); }\nfunction encode_cell(cell /*:CellAddress*/) /*:string*/{\n  var col = cell.c + 1;\n  var s = \"\";\n  for (; col; col = (col - 1) / 26 | 0) s = String.fromCharCode((col - 1) % 26 + 65) + s;\n  return s + (cell.r + 1);\n}\nfunction decode_range(range /*:string*/) /*:Range*/{\n  var idx = range.indexOf(\":\");\n  if (idx == -1) return {\n    s: decode_cell(range),\n    e: decode_cell(range)\n  };\n  return {\n    s: decode_cell(range.slice(0, idx)),\n    e: decode_cell(range.slice(idx + 1))\n  };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs /*:CellAddrSpec|Range*/, ce /*:?CellAddrSpec*/) /*:string*/{\n  if (typeof ce === 'undefined' || typeof ce === 'number') {\n    /*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n    return encode_range(cs.s, cs.e);\n  }\n  /*:: if((cs instanceof Range)) throw \"unreachable\"; */\n  if (typeof cs !== 'string') cs = encode_cell(cs /*:any*/);\n  if (typeof ce !== 'string') ce = encode_cell(ce /*:any*/);\n  /*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n  /*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n  return cs == ce ? cs : cs + \":\" + ce;\n}\nfunction safe_decode_range(range /*:string*/) /*:Range*/{\n  var o = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  var idx = 0,\n    i = 0,\n    cc = 0;\n  var len = range.length;\n  for (idx = 0; i < len; ++i) {\n    if ((cc = range.charCodeAt(i) - 64) < 1 || cc > 26) break;\n    idx = 26 * idx + cc;\n  }\n  o.s.c = --idx;\n  for (idx = 0; i < len; ++i) {\n    if ((cc = range.charCodeAt(i) - 48) < 0 || cc > 9) break;\n    idx = 10 * idx + cc;\n  }\n  o.s.r = --idx;\n  if (i === len || cc != 10) {\n    o.e.c = o.s.c;\n    o.e.r = o.s.r;\n    return o;\n  }\n  ++i;\n  for (idx = 0; i != len; ++i) {\n    if ((cc = range.charCodeAt(i) - 64) < 1 || cc > 26) break;\n    idx = 26 * idx + cc;\n  }\n  o.e.c = --idx;\n  for (idx = 0; i != len; ++i) {\n    if ((cc = range.charCodeAt(i) - 48) < 0 || cc > 9) break;\n    idx = 10 * idx + cc;\n  }\n  o.e.r = --idx;\n  return o;\n}\nfunction safe_format_cell(cell /*:Cell*/, v /*:any*/) {\n  var q = cell.t == 'd' && v instanceof Date;\n  if (cell.z != null) try {\n    return cell.w = SSF_format(cell.z, q ? datenum(v) : v);\n  } catch (e) {}\n  try {\n    return cell.w = SSF_format((cell.XF || {}).numFmtId || (q ? 14 : 0), q ? datenum(v) : v);\n  } catch (e) {\n    return '' + v;\n  }\n}\nfunction format_cell(cell /*:Cell*/, v /*:any*/, o /*:any*/) {\n  if (cell == null || cell.t == null || cell.t == 'z') return \"\";\n  if (cell.w !== undefined) return cell.w;\n  if (cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n  if (cell.t == \"e\") return BErr[cell.v] || cell.v;\n  if (v == undefined) return safe_format_cell(cell, cell.v);\n  return safe_format_cell(cell, v);\n}\nfunction sheet_to_workbook(sheet /*:Worksheet*/, opts) /*:Workbook*/{\n  var n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n  var sheets = {};\n  sheets[n] = sheet;\n  return {\n    SheetNames: [n],\n    Sheets: sheets\n  };\n}\nfunction sheet_add_aoa(_ws /*:?Worksheet*/, data /*:AOA*/, opts /*:?any*/) /*:Worksheet*/{\n  var o = opts || {};\n  var dense = _ws ? Array.isArray(_ws) : o.dense;\n  if (DENSE != null && dense == null) dense = DENSE;\n  var ws /*:Worksheet*/ = _ws || (dense ? [] /*:any*/ : {} /*:any*/);\n  var _R = 0,\n    _C = 0;\n  if (ws && o.origin != null) {\n    if (typeof o.origin == 'number') _R = o.origin;else {\n      var _origin /*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n      _R = _origin.r;\n      _C = _origin.c;\n    }\n    if (!ws[\"!ref\"]) ws[\"!ref\"] = \"A1:A1\";\n  }\n  var range /*:Range*/ = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  } /*:any*/;\n  if (ws['!ref']) {\n    var _range = safe_decode_range(ws['!ref']);\n    range.s.c = _range.s.c;\n    range.s.r = _range.s.r;\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    if (_R == -1) range.e.r = _R = _range.e.r + 1;\n  }\n  for (var R = 0; R != data.length; ++R) {\n    if (!data[R]) continue;\n    if (!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n    for (var C = 0; C != data[R].length; ++C) {\n      if (typeof data[R][C] === 'undefined') continue;\n      var cell /*:Cell*/ = {\n        v: data[R][C]\n      } /*:any*/;\n      var __R = _R + R,\n        __C = _C + C;\n      if (range.s.r > __R) range.s.r = __R;\n      if (range.s.c > __C) range.s.c = __C;\n      if (range.e.r < __R) range.e.r = __R;\n      if (range.e.c < __C) range.e.c = __C;\n      if (data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];else {\n        if (Array.isArray(cell.v)) {\n          cell.f = data[R][C][1];\n          cell.v = cell.v[0];\n        }\n        if (cell.v === null) {\n          if (cell.f) cell.t = 'n';else if (o.nullError) {\n            cell.t = 'e';\n            cell.v = 0;\n          } else if (!o.sheetStubs) continue;else cell.t = 'z';\n        } else if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n          cell.z = o.dateNF || table_fmt[14];\n          if (o.cellDates) {\n            cell.t = 'd';\n            cell.w = SSF_format(cell.z, datenum(cell.v));\n          } else {\n            cell.t = 'n';\n            cell.v = datenum(cell.v);\n            cell.w = SSF_format(cell.z, cell.v);\n          }\n        } else cell.t = 's';\n      }\n      if (dense) {\n        if (!ws[__R]) ws[__R] = [];\n        if (ws[__R][__C] && ws[__R][__C].z) cell.z = ws[__R][__C].z;\n        ws[__R][__C] = cell;\n      } else {\n        var cell_ref = encode_cell({\n          c: __C,\n          r: __R\n        } /*:any*/);\n        if (ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n        ws[cell_ref] = cell;\n      }\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = encode_range(range);\n  return ws;\n}\nfunction aoa_to_sheet(data /*:AOA*/, opts /*:?any*/) /*:Worksheet*/{\n  return sheet_add_aoa(null, data, opts);\n}\nfunction parse_Int32LE(data) {\n  return data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x /*:number*/, o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(4, x);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data /*::, length*/) /*:string*/{\n  var cchCharacters = data.read_shift(4);\n  return cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data /*:string*/, o) {\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(4 + 2 * data.length);\n  }\n  o.write_shift(4, data.length);\n  if (data.length > 0) o.write_shift(0, data, 'dbcs');\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n  return {\n    ich: data.read_shift(2),\n    ifnt: data.read_shift(2)\n  };\n}\nfunction write_StrRun(run, o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(2, run.ich || 0);\n  o.write_shift(2, run.ifnt || 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length /*:number*/) /*:XLString*/{\n  var start = data.l;\n  var flags = data.read_shift(1);\n  var str = parse_XLWideString(data);\n  var rgsStrRun = [];\n  var z = {\n    t: str,\n    h: str\n  } /*:any*/;\n  if ((flags & 1) !== 0) {\n    /* fRichStr */\n    /* TODO: formatted string */\n    var dwSizeStrRun = data.read_shift(4);\n    for (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n    z.r = rgsStrRun;\n  } else z.r = [{\n    ich: 0,\n    ifnt: 0\n  }];\n  //if((flags & 2) !== 0) { /* fExtStr */\n  //\t/* TODO: phonetic string */\n  //}\n  data.l = start + length;\n  return z;\n}\nfunction write_RichStr(str /*:XLString*/, o /*:?Block*/) /*:Block*/{\n  /* TODO: formatted string */\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(15 + 4 * str.t.length);\n  }\n  o.write_shift(1, 0);\n  write_XLWideString(str.t, o);\n  return _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str /*:XLString*/, o /*:?Block*/) /*:Block*/{\n  /* TODO: formatted string */\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(23 + 4 * str.t.length);\n  }\n  o.write_shift(1, 1);\n  write_XLWideString(str.t, o);\n  o.write_shift(4, 1);\n  write_StrRun({\n    ich: 0,\n    ifnt: 0\n  }, o);\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data) /*:any*/{\n  var col = data.read_shift(4);\n  var iStyleRef = data.read_shift(2);\n  iStyleRef += data.read_shift(1) << 16;\n  data.l++; //var fPhShow = data.read_shift(1);\n  return {\n    c: col,\n    iStyleRef: iStyleRef\n  };\n}\nfunction write_XLSBCell(cell /*:any*/, o /*:?Block*/) {\n  if (o == null) o = new_buf(8);\n  o.write_shift(-4, cell.c);\n  o.write_shift(3, cell.iStyleRef || cell.s);\n  o.write_shift(1, 0); /* fPhShow */\n  return o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data) /*:any*/{\n  var iStyleRef = data.read_shift(2);\n  iStyleRef += data.read_shift(1) << 16;\n  data.l++; //var fPhShow = data.read_shift(1);\n  return {\n    c: -1,\n    iStyleRef: iStyleRef\n  };\n}\nfunction write_XLSBShortCell(cell /*:any*/, o /*:?Block*/) {\n  if (o == null) o = new_buf(4);\n  o.write_shift(3, cell.iStyleRef || cell.s);\n  o.write_shift(1, 0); /* fPhShow */\n  return o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data /*::, length*/) /*:string*/{\n  var cchCharacters = data.read_shift(4);\n  return cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data /*:string*/, o) {\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(127);\n  }\n  o.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n  if (data.length > 0) o.write_shift(0, data, 'dbcs');\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data) /*:number*/{\n  var b = data.slice(data.l, data.l + 4);\n  var fX100 = b[0] & 1,\n    fInt = b[0] & 2;\n  data.l += 4;\n  var RK = fInt === 0 ? __double([0, 0, 0, 0, b[0] & 0xFC, b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n  return fX100 ? RK / 100 : RK;\n}\nfunction write_RkNumber(data /*:number*/, o) {\n  if (o == null) o = new_buf(4);\n  var fX100 = 0,\n    fInt = 0,\n    d100 = data * 100;\n  if (data == (data | 0) && data >= -(1 << 29) && data < 1 << 29) {\n    fInt = 1;\n  } else if (d100 == (d100 | 0) && d100 >= -(1 << 29) && d100 < 1 << 29) {\n    fInt = 1;\n    fX100 = 1;\n  }\n  if (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));else throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/) /*:Range*/{\n  var cell /*:Range*/ = {\n    s: {},\n    e: {}\n  } /*:any*/;\n  cell.s.r = data.read_shift(4);\n  cell.e.r = data.read_shift(4);\n  cell.s.c = data.read_shift(4);\n  cell.e.c = data.read_shift(4);\n  return cell;\n}\nfunction write_RfX(r /*:Range*/, o) {\n  if (!o) o = new_buf(16);\n  o.write_shift(4, r.s.r);\n  o.write_shift(4, r.e.r);\n  o.write_shift(4, r.s.c);\n  o.write_shift(4, r.e.c);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data /*::, length*/) {\n  if (data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n  return data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) {\n  return (o || new_buf(8)).write_shift(8, data, 'f');\n}\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data /*::, length*/) {\n  var out = {};\n  var d = data.read_shift(1);\n\n  //var fValidRGB = d & 1;\n  var xColorType = d >>> 1;\n  var index = data.read_shift(1);\n  var nTS = data.read_shift(2, 'i');\n  var bR = data.read_shift(1);\n  var bG = data.read_shift(1);\n  var bB = data.read_shift(1);\n  data.l++; //var bAlpha = data.read_shift(1);\n\n  switch (xColorType) {\n    case 0:\n      out.auto = 1;\n      break;\n    case 1:\n      out.index = index;\n      var icv = XLSIcv[index];\n      /* automatic pseudo index 81 */\n      if (icv) out.rgb = rgb2Hex(icv);\n      break;\n    case 2:\n      /* if(!fValidRGB) throw new Error(\"invalid\"); */\n      out.rgb = rgb2Hex([bR, bG, bB]);\n      break;\n    case 3:\n      out.theme = index;\n      break;\n  }\n  if (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n  return out;\n}\nfunction write_BrtColor(color, o) {\n  if (!o) o = new_buf(8);\n  if (!color || color.auto) {\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    return o;\n  }\n  if (color.index != null) {\n    o.write_shift(1, 0x02);\n    o.write_shift(1, color.index);\n  } else if (color.theme != null) {\n    o.write_shift(1, 0x06);\n    o.write_shift(1, color.theme);\n  } else {\n    o.write_shift(1, 0x05);\n    o.write_shift(1, 0);\n  }\n  var nTS = color.tint || 0;\n  if (nTS > 0) nTS *= 32767;else if (nTS < 0) nTS *= 32768;\n  o.write_shift(2, nTS);\n  if (!color.rgb || color.theme != null) {\n    o.write_shift(2, 0);\n    o.write_shift(1, 0);\n    o.write_shift(1, 0);\n  } else {\n    var rgb = color.rgb || 'FFFFFF';\n    if (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n    o.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n    o.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n    o.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n    o.write_shift(1, 0xFF);\n  }\n  return o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data /*::, length, opts*/) {\n  var d = data.read_shift(1);\n  data.l++;\n  var out = {\n    fBold: d & 0x01,\n    fItalic: d & 0x02,\n    fUnderline: d & 0x04,\n    fStrikeout: d & 0x08,\n    fOutline: d & 0x10,\n    fShadow: d & 0x20,\n    fCondense: d & 0x40,\n    fExtend: d & 0x80\n  };\n  return out;\n}\nfunction write_FontFlags(font, o) {\n  if (!o) o = new_buf(2);\n  var grbit = (font.italic ? 0x02 : 0) | (font.strike ? 0x08 : 0) | (font.outline ? 0x10 : 0) | (font.shadow ? 0x20 : 0) | (font.condense ? 0x40 : 0) | (font.extend ? 0x80 : 0);\n  o.write_shift(1, grbit);\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w /*:number*/) /*:string*/{\n  // $FlowIgnore\n  var ClipFmt = {\n    2: \"BITMAP\",\n    3: \"METAFILEPICT\",\n    8: \"DIB\",\n    14: \"ENHMETAFILE\"\n  };\n  var m /*:number*/ = o.read_shift(4);\n  switch (m) {\n    case 0x00000000:\n      return \"\";\n    case 0xffffffff:\n    case 0xfffffffe:\n      return ClipFmt[o.read_shift(4)] || \"\";\n  }\n  if (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n  o.l -= 4;\n  return o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) {\n  return parse_ClipboardFormatOrString(o, 1);\n}\nfunction parse_ClipboardFormatOrUnicodeString(o) {\n  return parse_ClipboardFormatOrString(o, 2);\n}\n\n/* [MS-OLEPS] 2.2 PropertyType */\n// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2 = 0x0002;\nvar VT_I4 = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL = 0x000B;\nvar VT_VARIANT = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4 = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\nvar VT_LPSTR = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\nvar VT_VECTOR = 0x1000;\nvar VT_VECTOR_VARIANT = 0x100C;\nvar VT_VECTOR_LPSTR = 0x101E;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'CodePage',\n    t: VT_I2\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'Category',\n    t: VT_STRING\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'PresentationFormat',\n    t: VT_STRING\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'ByteCount',\n    t: VT_I4\n  },\n  /*::[*/0x05 /*::]*/: {\n    n: 'LineCount',\n    t: VT_I4\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'ParagraphCount',\n    t: VT_I4\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'SlideCount',\n    t: VT_I4\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'NoteCount',\n    t: VT_I4\n  },\n  /*::[*/0x09 /*::]*/: {\n    n: 'HiddenCount',\n    t: VT_I4\n  },\n  /*::[*/0x0a /*::]*/: {\n    n: 'MultimediaClipCount',\n    t: VT_I4\n  },\n  /*::[*/0x0b /*::]*/: {\n    n: 'ScaleCrop',\n    t: VT_BOOL\n  },\n  /*::[*/0x0c /*::]*/: {\n    n: 'HeadingPairs',\n    t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */\n  },\n  /*::[*/0x0d /*::]*/: {\n    n: 'TitlesOfParts',\n    t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */\n  },\n  /*::[*/0x0e /*::]*/: {\n    n: 'Manager',\n    t: VT_STRING\n  },\n  /*::[*/0x0f /*::]*/: {\n    n: 'Company',\n    t: VT_STRING\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'LinksUpToDate',\n    t: VT_BOOL\n  },\n  /*::[*/0x11 /*::]*/: {\n    n: 'CharacterCount',\n    t: VT_I4\n  },\n  /*::[*/0x13 /*::]*/: {\n    n: 'SharedDoc',\n    t: VT_BOOL\n  },\n  /*::[*/0x16 /*::]*/: {\n    n: 'HyperlinksChanged',\n    t: VT_BOOL\n  },\n  /*::[*/0x17 /*::]*/: {\n    n: 'AppVersion',\n    t: VT_I4,\n    p: 'version'\n  },\n  /*::[*/0x18 /*::]*/: {\n    n: 'DigSig',\n    t: VT_BLOB\n  },\n  /*::[*/0x1A /*::]*/: {\n    n: 'ContentType',\n    t: VT_STRING\n  },\n  /*::[*/0x1B /*::]*/: {\n    n: 'ContentStatus',\n    t: VT_STRING\n  },\n  /*::[*/0x1C /*::]*/: {\n    n: 'Language',\n    t: VT_STRING\n  },\n  /*::[*/0x1D /*::]*/: {\n    n: 'Version',\n    t: VT_STRING\n  },\n  /*::[*/0xFF /*::]*/: {},\n  /* [MS-OLEPS] 2.18 */\n  /*::[*/0x80000000 /*::]*/: {\n    n: 'Locale',\n    t: VT_UI4\n  },\n  /*::[*/0x80000003 /*::]*/: {\n    n: 'Behavior',\n    t: VT_UI4\n  },\n  /*::[*/0x72627262 /*::]*/: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'CodePage',\n    t: VT_I2\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'Title',\n    t: VT_STRING\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'Subject',\n    t: VT_STRING\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'Author',\n    t: VT_STRING\n  },\n  /*::[*/0x05 /*::]*/: {\n    n: 'Keywords',\n    t: VT_STRING\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'Comments',\n    t: VT_STRING\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'Template',\n    t: VT_STRING\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'LastAuthor',\n    t: VT_STRING\n  },\n  /*::[*/0x09 /*::]*/: {\n    n: 'RevNumber',\n    t: VT_STRING\n  },\n  /*::[*/0x0A /*::]*/: {\n    n: 'EditTime',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0B /*::]*/: {\n    n: 'LastPrinted',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0C /*::]*/: {\n    n: 'CreatedDate',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0D /*::]*/: {\n    n: 'ModifiedDate',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0E /*::]*/: {\n    n: 'PageCount',\n    t: VT_I4\n  },\n  /*::[*/0x0F /*::]*/: {\n    n: 'WordCount',\n    t: VT_I4\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'CharCount',\n    t: VT_I4\n  },\n  /*::[*/0x11 /*::]*/: {\n    n: 'Thumbnail',\n    t: VT_CF\n  },\n  /*::[*/0x12 /*::]*/: {\n    n: 'Application',\n    t: VT_STRING\n  },\n  /*::[*/0x13 /*::]*/: {\n    n: 'DocSecurity',\n    t: VT_I4\n  },\n  /*::[*/0xFF /*::]*/: {},\n  /* [MS-OLEPS] 2.18 */\n  /*::[*/0x80000000 /*::]*/: {\n    n: 'Locale',\n    t: VT_UI4\n  },\n  /*::[*/0x80000003 /*::]*/: {\n    n: 'Behavior',\n    t: VT_UI4\n  },\n  /*::[*/0x72627262 /*::]*/: {}\n};\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n  /*::[*/0x0001 /*::]*/: \"US\",\n  // United States\n  /*::[*/\n  0x0002 /*::]*/: \"CA\",\n  // Canada\n  /*::[*/\n  0x0003 /*::]*/: \"\",\n  // Latin America (except Brazil)\n  /*::[*/\n  0x0007 /*::]*/: \"RU\",\n  // Russia\n  /*::[*/\n  0x0014 /*::]*/: \"EG\",\n  // Egypt\n  /*::[*/\n  0x001E /*::]*/: \"GR\",\n  // Greece\n  /*::[*/\n  0x001F /*::]*/: \"NL\",\n  // Netherlands\n  /*::[*/\n  0x0020 /*::]*/: \"BE\",\n  // Belgium\n  /*::[*/\n  0x0021 /*::]*/: \"FR\",\n  // France\n  /*::[*/\n  0x0022 /*::]*/: \"ES\",\n  // Spain\n  /*::[*/\n  0x0024 /*::]*/: \"HU\",\n  // Hungary\n  /*::[*/\n  0x0027 /*::]*/: \"IT\",\n  // Italy\n  /*::[*/\n  0x0029 /*::]*/: \"CH\",\n  // Switzerland\n  /*::[*/\n  0x002B /*::]*/: \"AT\",\n  // Austria\n  /*::[*/\n  0x002C /*::]*/: \"GB\",\n  // United Kingdom\n  /*::[*/\n  0x002D /*::]*/: \"DK\",\n  // Denmark\n  /*::[*/\n  0x002E /*::]*/: \"SE\",\n  // Sweden\n  /*::[*/\n  0x002F /*::]*/: \"NO\",\n  // Norway\n  /*::[*/\n  0x0030 /*::]*/: \"PL\",\n  // Poland\n  /*::[*/\n  0x0031 /*::]*/: \"DE\",\n  // Germany\n  /*::[*/\n  0x0034 /*::]*/: \"MX\",\n  // Mexico\n  /*::[*/\n  0x0037 /*::]*/: \"BR\",\n  // Brazil\n  /*::[*/\n  0x003d /*::]*/: \"AU\",\n  // Australia\n  /*::[*/\n  0x0040 /*::]*/: \"NZ\",\n  // New Zealand\n  /*::[*/\n  0x0042 /*::]*/: \"TH\",\n  // Thailand\n  /*::[*/\n  0x0051 /*::]*/: \"JP\",\n  // Japan\n  /*::[*/\n  0x0052 /*::]*/: \"KR\",\n  // Korea\n  /*::[*/\n  0x0054 /*::]*/: \"VN\",\n  // Viet Nam\n  /*::[*/\n  0x0056 /*::]*/: \"CN\",\n  // China\n  /*::[*/\n  0x005A /*::]*/: \"TR\",\n  // Turkey\n  /*::[*/\n  0x0069 /*::]*/: \"JS\",\n  // Ramastan\n  /*::[*/\n  0x00D5 /*::]*/: \"DZ\",\n  // Algeria\n  /*::[*/\n  0x00D8 /*::]*/: \"MA\",\n  // Morocco\n  /*::[*/\n  0x00DA /*::]*/: \"LY\",\n  // Libya\n  /*::[*/\n  0x015F /*::]*/: \"PT\",\n  // Portugal\n  /*::[*/\n  0x0162 /*::]*/: \"IS\",\n  // Iceland\n  /*::[*/\n  0x0166 /*::]*/: \"FI\",\n  // Finland\n  /*::[*/\n  0x01A4 /*::]*/: \"CZ\",\n  // Czech Republic\n  /*::[*/\n  0x0376 /*::]*/: \"TW\",\n  // Taiwan\n  /*::[*/\n  0x03C1 /*::]*/: \"LB\",\n  // Lebanon\n  /*::[*/\n  0x03C2 /*::]*/: \"JO\",\n  // Jordan\n  /*::[*/\n  0x03C3 /*::]*/: \"SY\",\n  // Syria\n  /*::[*/\n  0x03C4 /*::]*/: \"IQ\",\n  // Iraq\n  /*::[*/\n  0x03C5 /*::]*/: \"KW\",\n  // Kuwait\n  /*::[*/\n  0x03C6 /*::]*/: \"SA\",\n  // Saudi Arabia\n  /*::[*/\n  0x03CB /*::]*/: \"AE\",\n  // United Arab Emirates\n  /*::[*/\n  0x03CC /*::]*/: \"IL\",\n  // Israel\n  /*::[*/\n  0x03CE /*::]*/: \"QA\",\n  // Qatar\n  /*::[*/\n  0x03D5 /*::]*/: \"IR\",\n  // Iran\n  /*::[*/\n  0xFFFF /*::]*/: \"US\" // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [null, 'solid', 'mediumGray', 'darkGray', 'lightGray', 'darkHorizontal', 'darkVertical', 'darkDown', 'darkUp', 'darkGrid', 'darkTrellis', 'lightHorizontal', 'lightVertical', 'lightDown', 'lightUp', 'lightGrid', 'lightTrellis', 'gray125', 'gray0625'];\nfunction rgbify(arr /*:Array<number>*/) /*:Array<[number, number, number]>*/{\n  return arr.map(function (x) {\n    return [x >> 16 & 255, x >> 8 & 255, x & 255];\n  });\n}\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = /*#__PURE__*/rgbify([/* Color Constants */\n0x000000, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, /* Overridable Defaults */\n0x000000, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, 0x800000, 0x008000, 0x000080, 0x808000, 0x800080, 0x008080, 0xC0C0C0, 0x808080, 0x9999FF, 0x993366, 0xFFFFCC, 0xCCFFFF, 0x660066, 0xFF8080, 0x0066CC, 0xCCCCFF, 0x000080, 0xFF00FF, 0xFFFF00, 0x00FFFF, 0x800080, 0x800000, 0x008080, 0x0000FF, 0x00CCFF, 0xCCFFFF, 0xCCFFCC, 0xFFFF99, 0x99CCFF, 0xFF99CC, 0xCC99FF, 0xFFCC99, 0x3366FF, 0x33CCCC, 0x99CC00, 0xFFCC00, 0xFF9900, 0xFF6600, 0x666699, 0x969696, 0x003366, 0x339966, 0x003300, 0x333300, 0x993300, 0x993366, 0x333399, 0x333333, /* Other entries to appease BIFF8/12 */\n0xFFFFFF, /* 0x40 icvForeground ?? */\n0x000000, /* 0x41 icvBackground ?? */\n0x000000, /* 0x42 icvFrame ?? */\n0x000000, /* 0x43 icv3D ?? */\n0x000000, /* 0x44 icv3DText ?? */\n0x000000, /* 0x45 icv3DHilite ?? */\n0x000000, /* 0x46 icv3DShadow ?? */\n0x000000, /* 0x47 icvHilite ?? */\n0x000000, /* 0x48 icvCtlText ?? */\n0x000000, /* 0x49 icvCtlScrl ?? */\n0x000000, /* 0x4A icvCtlInv ?? */\n0x000000, /* 0x4B icvCtlBody ?? */\n0x000000, /* 0x4C icvCtlFrame ?? */\n0x000000, /* 0x4D icvCtlFore ?? */\n0x000000, /* 0x4E icvCtlBack ?? */\n0x000000, /* 0x4F icvCtlNeutral */\n0x000000, /* 0x50 icvInfoBk ?? */\n0x000000 /* 0x51 icvInfoText ?? */]);\nvar XLSIcv = /*#__PURE__*/dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n  /*::[*/0x00 /*::]*/: \"#NULL!\",\n  /*::[*/0x07 /*::]*/: \"#DIV/0!\",\n  /*::[*/0x0F /*::]*/: \"#VALUE!\",\n  /*::[*/0x17 /*::]*/: \"#REF!\",\n  /*::[*/0x1D /*::]*/: \"#NAME?\",\n  /*::[*/0x24 /*::]*/: \"#NUM!\",\n  /*::[*/0x2A /*::]*/: \"#N/A\",\n  /*::[*/0x2B /*::]*/: \"#GETTING_DATA\",\n  /*::[*/0xFF /*::]*/: \"#WTF?\"\n};\n//var RBErr = evert_num(BErr);\nvar RBErr = {\n  \"#NULL!\": 0x00,\n  \"#DIV/0!\": 0x07,\n  \"#VALUE!\": 0x0F,\n  \"#REF!\": 0x17,\n  \"#NAME?\": 0x1D,\n  \"#NUM!\": 0x24,\n  \"#N/A\": 0x2A,\n  \"#GETTING_DATA\": 0x2B,\n  \"#WTF?\": 0xFF\n};\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type /*{[string]:string}*/ = {\n  /* Workbook */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n  \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\": \"workbooks\",\n  \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\": \"workbooks\",\n  \"application/vnd.ms-excel.addin.macroEnabled.main+xml\": \"workbooks\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": \"workbooks\",\n  /* Worksheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": \"sheets\",\n  \"application/vnd.ms-excel.worksheet\": \"sheets\",\n  \"application/vnd.ms-excel.binIndexWs\": \"TODO\",\n  /* Binary Index */\n\n  /* Chartsheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": \"charts\",\n  \"application/vnd.ms-excel.chartsheet\": \"charts\",\n  /* Macrosheet */\n  \"application/vnd.ms-excel.macrosheet+xml\": \"macros\",\n  \"application/vnd.ms-excel.macrosheet\": \"macros\",\n  \"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n  \"application/vnd.ms-excel.binIndexMs\": \"TODO\",\n  /* Binary Index */\n\n  /* Dialogsheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": \"dialogs\",\n  \"application/vnd.ms-excel.dialogsheet\": \"dialogs\",\n  /* Shared Strings */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\": \"strs\",\n  \"application/vnd.ms-excel.sharedStrings\": \"strs\",\n  /* Styles */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": \"styles\",\n  \"application/vnd.ms-excel.styles\": \"styles\",\n  /* File Properties */\n  \"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n  /* Custom Data Properties */\n  \"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n  /* Comments */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": \"comments\",\n  \"application/vnd.ms-excel.comments\": \"comments\",\n  \"application/vnd.ms-excel.threadedcomments+xml\": \"threadedcomments\",\n  \"application/vnd.ms-excel.person+xml\": \"people\",\n  /* Metadata (Stock/Geography and Dynamic Array) */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n  \"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n  /* PivotTable */\n  \"application/vnd.ms-excel.pivotTable\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n  /* Chart Objects */\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n  /* Chart Colors */\n  \"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n  /* Chart Style */\n  \"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n  /* Chart Advanced */\n  \"application/vnd.ms-office.chartex+xml\": \"TODO\",\n  /* Calculation Chain */\n  \"application/vnd.ms-excel.calcChain\": \"calcchains\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n  /* Printer Settings */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n  /* ActiveX */\n  \"application/vnd.ms-office.activeX\": \"TODO\",\n  \"application/vnd.ms-office.activeX+xml\": \"TODO\",\n  /* Custom Toolbars */\n  \"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n  /* External Data Connections */\n  \"application/vnd.ms-excel.connections\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n  /* External Links */\n  \"application/vnd.ms-excel.externalLink\": \"links\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n  /* PivotCache */\n  \"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n  \"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n  /* Query Table */\n  \"application/vnd.ms-excel.queryTable\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n  /* Shared Workbook */\n  \"application/vnd.ms-excel.userNames\": \"TODO\",\n  \"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n  \"application/vnd.ms-excel.revisionLog\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n  /* Single Cell Table */\n  \"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n  /* Slicer */\n  \"application/vnd.ms-excel.slicer\": \"TODO\",\n  \"application/vnd.ms-excel.slicerCache\": \"TODO\",\n  \"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n  \"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n  /* Sort Map */\n  \"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n  /* Table */\n  \"application/vnd.ms-excel.table\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n  /* Themes */\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n  /* Theme Override */\n  \"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n  /* Timeline */\n  \"application/vnd.ms-excel.Timeline+xml\": \"TODO\",\n  /* verify */\n  \"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\",\n  /* verify */\n\n  /* VBA */\n  \"application/vnd.ms-office.vbaProject\": \"vba\",\n  \"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n  /* Volatile Dependencies */\n  \"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n  /* Control Properties */\n  \"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n  /* Data Model */\n  \"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n  /* Survey */\n  \"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n  /* Drawing */\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n  /* VML */\n  \"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n  \"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n  \"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n  /* Image */\n  \"image/png\": \"TODO\",\n  \"sheet\": \"js\"\n} /*:any*/;\nvar CT_LIST = {\n  workbooks: {\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n    xlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n    xlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n    xlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n    xltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n  },\n  strs: {\n    /* Shared Strings */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n    xlsb: \"application/vnd.ms-excel.sharedStrings\"\n  },\n  comments: {\n    /* Comments */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n    xlsb: \"application/vnd.ms-excel.comments\"\n  },\n  sheets: {\n    /* Worksheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n    xlsb: \"application/vnd.ms-excel.worksheet\"\n  },\n  charts: {\n    /* Chartsheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n    xlsb: \"application/vnd.ms-excel.chartsheet\"\n  },\n  dialogs: {\n    /* Dialogsheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n    xlsb: \"application/vnd.ms-excel.dialogsheet\"\n  },\n  macros: {\n    /* Macrosheet (Excel 4.0 Macros) */\n    xlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n    xlsb: \"application/vnd.ms-excel.macrosheet\"\n  },\n  metadata: {\n    /* Metadata (Stock/Geography and Dynamic Array) */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n    xlsb: \"application/vnd.ms-excel.sheetMetadata\"\n  },\n  styles: {\n    /* Styles */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n    xlsb: \"application/vnd.ms-excel.styles\"\n  }\n};\nfunction new_ct() /*:any*/{\n  return {\n    workbooks: [],\n    sheets: [],\n    charts: [],\n    dialogs: [],\n    macros: [],\n    rels: [],\n    strs: [],\n    comments: [],\n    threadedcomments: [],\n    links: [],\n    coreprops: [],\n    extprops: [],\n    custprops: [],\n    themes: [],\n    styles: [],\n    calcchains: [],\n    vba: [],\n    drawings: [],\n    metadata: [],\n    people: [],\n    TODO: [],\n    xmlns: \"\"\n  } /*:any*/;\n}\nfunction parse_ct(data /*:?string*/) {\n  var ct = new_ct();\n  if (!data || !data.match) return ct;\n  var ctext = {};\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0].replace(nsregex, \"<\")) {\n      case '<?xml':\n        break;\n      case '<Types':\n        ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/) || [\"\", \"\"])[1]];\n        break;\n      case '<Default':\n        ctext[y.Extension] = y.ContentType;\n        break;\n      case '<Override':\n        if (ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n        break;\n    }\n  });\n  if (ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n  ct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n  ct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n  ct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n  ct.defaults = ctext;\n  delete ct.calcchains;\n  return ct;\n}\nfunction write_ct(ct, opts) /*:string*/{\n  var type2ct /*{[string]:Array<string>}*/ = evert_arr(ct2type);\n  var o /*:Array<string>*/ = [],\n    v;\n  o[o.length] = XML_HEADER;\n  o[o.length] = writextag('Types', null, {\n    'xmlns': XMLNS.CT,\n    'xmlns:xsd': XMLNS.xsd,\n    'xmlns:xsi': XMLNS.xsi\n  });\n  o = o.concat([['xml', 'application/xml'], ['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'], ['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'], ['data', 'application/vnd.openxmlformats-officedocument.model+data'], /* from test files */\n  ['bmp', 'image/bmp'], ['png', 'image/png'], ['gif', 'image/gif'], ['emf', 'image/x-emf'], ['wmf', 'image/x-wmf'], ['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'], ['tif', 'image/tiff'], ['tiff', 'image/tiff'], ['pdf', 'application/pdf'], ['rels', 'application/vnd.openxmlformats-package.relationships+xml']].map(function (x) {\n    return writextag('Default', null, {\n      'Extension': x[0],\n      'ContentType': x[1]\n    });\n  }));\n\n  /* only write first instance */\n  var f1 = function (w) {\n    if (ct[w] && ct[w].length > 0) {\n      v = ct[w][0];\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n      });\n    }\n  };\n\n  /* book type-specific */\n  var f2 = function (w) {\n    (ct[w] || []).forEach(function (v) {\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n      });\n    });\n  };\n\n  /* standard type */\n  var f3 = function (t) {\n    (ct[t] || []).forEach(function (v) {\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': type2ct[t][0]\n      });\n    });\n  };\n  f1('workbooks');\n  f2('sheets');\n  f2('charts');\n  f3('themes');\n  ['strs', 'styles'].forEach(f1);\n  ['coreprops', 'extprops', 'custprops'].forEach(f3);\n  f3('vba');\n  f3('comments');\n  f3('threadedcomments');\n  f3('drawings');\n  f2('metadata');\n  f3('people');\n  if (o.length > 2) {\n    o[o.length] = '</Types>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = {\n  WB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n  SHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n  HLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n  VML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n  XPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n  XMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n  XLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n  CXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n  CXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n  CMNT: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\",\n  CORE_PROPS: \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n  EXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n  CUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',\n  SST: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\",\n  STY: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n  THEME: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n  CHART: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\",\n  CHARTEX: \"http://schemas.microsoft.com/office/2014/relationships/chartEx\",\n  CS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\",\n  WS: [\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\", \"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"],\n  DS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\",\n  MS: \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\",\n  IMG: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n  DRAW: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\",\n  XLMETA: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\",\n  TCMNT: \"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment\",\n  PEOPLE: \"http://schemas.microsoft.com/office/2017/10/relationships/person\",\n  VBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n} /*:any*/;\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file /*:string*/) /*:string*/{\n  var n = file.lastIndexOf(\"/\");\n  return file.slice(0, n + 1) + '_rels/' + file.slice(n + 1) + \".rels\";\n}\nfunction parse_rels(data /*:?string*/, currentFilePath /*:string*/) {\n  var rels = {\n    \"!id\": {}\n  };\n  if (!data) return rels;\n  if (currentFilePath.charAt(0) !== '/') {\n    currentFilePath = '/' + currentFilePath;\n  }\n  var hash = {};\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    /* 9.3.2.2 OPC_Relationships */\n    if (y[0] === '<Relationship') {\n      var rel = {};\n      rel.Type = y.Type;\n      rel.Target = y.Target;\n      rel.Id = y.Id;\n      if (y.TargetMode) rel.TargetMode = y.TargetMode;\n      var canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n      rels[canonictarget] = rel;\n      hash[y.Id] = rel;\n    }\n  });\n  rels[\"!id\"] = hash;\n  return rels;\n}\n\n/* TODO */\nfunction write_rels(rels) /*:string*/{\n  var o = [XML_HEADER, writextag('Relationships', null, {\n    //'xmlns:ns0': XMLNS.RELS,\n    'xmlns': XMLNS.RELS\n  })];\n  keys(rels['!id']).forEach(function (rid) {\n    o[o.length] = writextag('Relationship', null, rels['!id'][rid]);\n  });\n  if (o.length > 2) {\n    o[o.length] = '</Relationships>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\nfunction add_rels(rels, rId /*:number*/, f, type, relobj, targetmode /*:?string*/) /*:number*/{\n  if (!relobj) relobj = {};\n  if (!rels['!id']) rels['!id'] = {};\n  if (!rels['!idx']) rels['!idx'] = 1;\n  if (rId < 0) for (rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId) {/* empty */}\n  rels['!idx'] = rId + 1;\n  relobj.Id = 'rId' + rId;\n  relobj.Type = type;\n  relobj.Target = f;\n  if (targetmode) relobj.TargetMode = targetmode;else if ([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n  if (rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n  rels['!id'][relobj.Id] = relobj;\n  rels[('/' + relobj.Target).replace(\"//\", \"/\")] = relobj;\n  return rId;\n}\n/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\n/* Part 3 Section 4 Manifest File */\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n  var str = xlml_normalize(d);\n  var Rn;\n  var FEtag;\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3]) {\n    case 'manifest':\n      break;\n    // 4.2 <manifest:manifest>\n    case 'file-entry':\n      // 4.3 <manifest:file-entry>\n      FEtag = parsexmltag(Rn[0], false);\n      if (FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n      break;\n    case 'encryption-data': // 4.4 <manifest:encryption-data>\n    case 'algorithm': // 4.5 <manifest:algorithm>\n    case 'start-key-generation': // 4.6 <manifest:start-key-generation>\n    case 'key-derivation':\n      // 4.7 <manifest:key-derivation>\n      throw new Error(\"Unsupported ODS Encryption\");\n    default:\n      if (opts && opts.WTF) throw Rn;\n  }\n}\nfunction write_manifest(manifest /*:Array<Array<string> >*/) /*:string*/{\n  var o = [XML_HEADER];\n  o.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n  o.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n  for (var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n  o.push('</manifest:manifest>');\n  return o.join(\"\");\n}\n\n/* Part 3 Section 6 Metadata Manifest File */\nfunction write_rdf_type(file /*:string*/, res /*:string*/, tag /*:?string*/) {\n  return ['  <rdf:Description rdf:about=\"' + file + '\">\\n', '    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + '#' + res + '\"/>\\n', '  </rdf:Description>\\n'].join(\"\");\n}\nfunction write_rdf_has(base /*:string*/, file /*:string*/) {\n  return ['  <rdf:Description rdf:about=\"' + base + '\">\\n', '    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n', '  </rdf:Description>\\n'].join(\"\");\n}\nfunction write_rdf(rdf) {\n  var o = [XML_HEADER];\n  o.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n  for (var i = 0; i != rdf.length; ++i) {\n    o.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n    o.push(write_rdf_has(\"\", rdf[i][0]));\n  }\n  o.push(write_rdf_type(\"\", \"Document\", \"pkg\"));\n  o.push('</rdf:RDF>');\n  return o.join(\"\");\n}\n/* TODO: pull properties */\nfunction write_meta_ods( /*:: wb: Workbook, opts: any*/\n) /*:string*/{\n  return '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';\n}\n\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS /*:Array<Array<string> >*/ = [[\"cp:category\", \"Category\"], [\"cp:contentStatus\", \"ContentStatus\"], [\"cp:keywords\", \"Keywords\"], [\"cp:lastModifiedBy\", \"LastAuthor\"], [\"cp:lastPrinted\", \"LastPrinted\"], [\"cp:revision\", \"RevNumber\"], [\"cp:version\", \"Version\"], [\"dc:creator\", \"Author\"], [\"dc:description\", \"Comments\"], [\"dc:identifier\", \"Identifier\"], [\"dc:language\", \"Language\"], [\"dc:subject\", \"Subject\"], [\"dc:title\", \"Title\"], [\"dcterms:created\", \"CreatedDate\", 'date'], [\"dcterms:modified\", \"ModifiedDate\", 'date']];\nvar CORE_PROPS_REGEX /*:Array<RegExp>*/ = /*#__PURE__*/function () {\n  var r = new Array(CORE_PROPS.length);\n  for (var i = 0; i < CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i];\n    var g = \"(?:\" + f[0].slice(0, f[0].indexOf(\":\")) + \":)\" + f[0].slice(f[0].indexOf(\":\") + 1);\n    r[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n  }\n  return r;\n}();\nfunction parse_core_props(data) {\n  var p = {};\n  data = utf8read(data);\n  for (var i = 0; i < CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i],\n      cur = data.match(CORE_PROPS_REGEX[i]);\n    if (cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n    if (f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n  }\n  return p;\n}\nfunction cp_doit(f, g, h, o, p) {\n  if (p[f] != null || g == null || g === \"\") return;\n  p[f] = g;\n  g = escapexml(g);\n  o[o.length] = h ? writextag(f, g, h) : writetag(f, g);\n}\nfunction write_core_props(cp, _opts) {\n  var opts = _opts || {};\n  var o = [XML_HEADER, writextag('cp:coreProperties', null, {\n      //'xmlns': XMLNS.CORE_PROPS,\n      'xmlns:cp': XMLNS.CORE_PROPS,\n      'xmlns:dc': XMLNS.dc,\n      'xmlns:dcterms': XMLNS.dcterms,\n      'xmlns:dcmitype': XMLNS.dcmitype,\n      'xmlns:xsi': XMLNS.xsi\n    })],\n    p = {};\n  if (!cp && !opts.Props) return o.join(\"\");\n  if (cp) {\n    if (cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\n      \"xsi:type\": \"dcterms:W3CDTF\"\n    }, o, p);\n    if (cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\n      \"xsi:type\": \"dcterms:W3CDTF\"\n    }, o, p);\n  }\n  for (var i = 0; i != CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i];\n    var v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n    if (v === true) v = \"1\";else if (v === false) v = \"0\";else if (typeof v == \"number\") v = String(v);\n    if (v != null) cp_doit(f[0], v, null, o, p);\n  }\n  if (o.length > 2) {\n    o[o.length] = '</cp:coreProperties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS /*:Array<Array<string> >*/ = [[\"Application\", \"Application\", \"string\"], [\"AppVersion\", \"AppVersion\", \"string\"], [\"Company\", \"Company\", \"string\"], [\"DocSecurity\", \"DocSecurity\", \"string\"], [\"Manager\", \"Manager\", \"string\"], [\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"], [\"SharedDoc\", \"SharedDoc\", \"bool\"], [\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"], [\"ScaleCrop\", \"ScaleCrop\", \"bool\"], [\"HeadingPairs\", \"HeadingPairs\", \"raw\"], [\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]];\nvar PseudoPropsPairs = [\"Worksheets\", \"SheetNames\", \"NamedRanges\", \"DefinedNames\", \"Chartsheets\", \"ChartNames\"];\nfunction load_props_pairs(HP /*:string|Array<Array<any>>*/, TOP, props, opts) {\n  var v = [];\n  if (typeof HP == \"string\") v = parseVector(HP, opts);else for (var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function (hp) {\n    return {\n      v: hp\n    };\n  }));\n  var parts = typeof TOP == \"string\" ? parseVector(TOP, opts).map(function (x) {\n    return x.v;\n  }) : TOP;\n  var idx = 0,\n    len = 0;\n  if (parts.length > 0) for (var i = 0; i !== v.length; i += 2) {\n    len = +v[i + 1].v;\n    switch (v[i].v) {\n      case \"Worksheets\":\n      case \"工作表\":\n      case \"Листы\":\n      case \"أوراق العمل\":\n      case \"ワークシート\":\n      case \"גליונות עבודה\":\n      case \"Arbeitsblätter\":\n      case \"Çalışma Sayfaları\":\n      case \"Feuilles de calcul\":\n      case \"Fogli di lavoro\":\n      case \"Folhas de cálculo\":\n      case \"Planilhas\":\n      case \"Regneark\":\n      case \"Hojas de cálculo\":\n      case \"Werkbladen\":\n        props.Worksheets = len;\n        props.SheetNames = parts.slice(idx, idx + len);\n        break;\n      case \"Named Ranges\":\n      case \"Rangos con nombre\":\n      case \"名前付き一覧\":\n      case \"Benannte Bereiche\":\n      case \"Navngivne områder\":\n        props.NamedRanges = len;\n        props.DefinedNames = parts.slice(idx, idx + len);\n        break;\n      case \"Charts\":\n      case \"Diagramme\":\n        props.Chartsheets = len;\n        props.ChartNames = parts.slice(idx, idx + len);\n        break;\n    }\n    idx += len;\n  }\n}\nfunction parse_ext_props(data, p, opts) {\n  var q = {};\n  if (!p) p = {};\n  data = utf8read(data);\n  EXT_PROPS.forEach(function (f) {\n    var xml = (data.match(matchtag(f[0])) || [])[1];\n    switch (f[2]) {\n      case \"string\":\n        if (xml) p[f[1]] = unescapexml(xml);\n        break;\n      case \"bool\":\n        p[f[1]] = xml === \"true\";\n        break;\n      case \"raw\":\n        var cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n        if (cur && cur.length > 0) q[f[1]] = cur[1];\n        break;\n    }\n  });\n  if (q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n  return p;\n}\nfunction write_ext_props(cp /*::, opts*/) /*:string*/{\n  var o /*:Array<string>*/ = [],\n    W = writextag;\n  if (!cp) cp = {};\n  cp.Application = \"SheetJS\";\n  o[o.length] = XML_HEADER;\n  o[o.length] = writextag('Properties', null, {\n    'xmlns': XMLNS.EXT_PROPS,\n    'xmlns:vt': XMLNS.vt\n  });\n  EXT_PROPS.forEach(function (f) {\n    if (cp[f[1]] === undefined) return;\n    var v;\n    switch (f[2]) {\n      case 'string':\n        v = escapexml(String(cp[f[1]]));\n        break;\n      case 'bool':\n        v = cp[f[1]] ? 'true' : 'false';\n        break;\n    }\n    if (v !== undefined) o[o.length] = W(f[0], v);\n  });\n\n  /* TODO: HeadingPairs, TitlesOfParts */\n  o[o.length] = W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>') + W('vt:variant', W('vt:i4', String(cp.Worksheets))), {\n    size: 2,\n    baseType: \"variant\"\n  }));\n  o[o.length] = W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function (s) {\n    return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\";\n  }).join(\"\"), {\n    size: cp.Worksheets,\n    baseType: \"lpstr\"\n  }));\n  if (o.length > 2) {\n    o[o.length] = '</Properties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nvar custregex = /<[^>]+>[^<]*/g;\nfunction parse_cust_props(data /*:string*/, opts) {\n  var p = {},\n    name = \"\";\n  var m = data.match(custregex);\n  if (m) for (var i = 0; i != m.length; ++i) {\n    var x = m[i],\n      y = parsexmltag(x);\n    switch (y[0]) {\n      case '<?xml':\n        break;\n      case '<Properties':\n        break;\n      case '<property':\n        name = unescapexml(y.name);\n        break;\n      case '</property>':\n        name = null;\n        break;\n      default:\n        if (x.indexOf('<vt:') === 0) {\n          var toks = x.split('>');\n          var type = toks[0].slice(4),\n            text = toks[1];\n          /* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n          switch (type) {\n            case 'lpstr':\n            case 'bstr':\n            case 'lpwstr':\n              p[name] = unescapexml(text);\n              break;\n            case 'bool':\n              p[name] = parsexmlbool(text);\n              break;\n            case 'i1':\n            case 'i2':\n            case 'i4':\n            case 'i8':\n            case 'int':\n            case 'uint':\n              p[name] = parseInt(text, 10);\n              break;\n            case 'r4':\n            case 'r8':\n            case 'decimal':\n              p[name] = parseFloat(text);\n              break;\n            case 'filetime':\n            case 'date':\n              p[name] = parseDate(text);\n              break;\n            case 'cy':\n            case 'error':\n              p[name] = unescapexml(text);\n              break;\n            default:\n              if (type.slice(-1) == '/') break;\n              if (opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n          }\n        } else if (x.slice(0, 2) === \"</\") {/* empty */\n        } else if (opts.WTF) throw new Error(x);\n    }\n  }\n  return p;\n}\nfunction write_cust_props(cp /*::, opts*/) /*:string*/{\n  var o = [XML_HEADER, writextag('Properties', null, {\n    'xmlns': XMLNS.CUST_PROPS,\n    'xmlns:vt': XMLNS.vt\n  })];\n  if (!cp) return o.join(\"\");\n  var pid = 1;\n  keys(cp).forEach(function custprop(k) {\n    ++pid;\n    o[o.length] = writextag('property', write_vt(cp[k], true), {\n      'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n      'pid': pid,\n      'name': escapexml(k)\n    });\n  });\n  if (o.length > 2) {\n    o[o.length] = '</Properties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n  Title: 'Title',\n  Subject: 'Subject',\n  Author: 'Author',\n  Keywords: 'Keywords',\n  Comments: 'Description',\n  LastAuthor: 'LastAuthor',\n  RevNumber: 'Revision',\n  Application: 'AppName',\n  /* TotalTime: 'TotalTime', */\n  LastPrinted: 'LastPrinted',\n  CreatedDate: 'Created',\n  ModifiedDate: 'LastSaved',\n  /* Pages */\n  /* Words */\n  /* Characters */\n  Category: 'Category',\n  /* PresentationFormat */\n  Manager: 'Manager',\n  Company: 'Company',\n  /* Guid */\n  /* HyperlinkBase */\n  /* Bytes */\n  /* Lines */\n  /* Paragraphs */\n  /* CharactersWithSpaces */\n  AppVersion: 'Version',\n  ContentStatus: 'ContentStatus',\n  /* NOTE: missing from schema */\n  Identifier: 'Identifier',\n  /* NOTE: missing from schema */\n  Language: 'Language' /* NOTE: missing from schema */\n};\nvar evert_XLMLDPM;\nfunction xlml_set_prop(Props, tag /*:string*/, val) {\n  if (!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);\n  tag = evert_XLMLDPM[tag] || tag;\n  Props[tag] = val;\n}\nfunction xlml_write_docprops(Props, opts) {\n  var o /*:Array<string>*/ = [];\n  keys(XLMLDocPropsMap).map(function (m) {\n    for (var i = 0; i < CORE_PROPS.length; ++i) if (CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n    for (i = 0; i < EXT_PROPS.length; ++i) if (EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n    throw m;\n  }).forEach(function (p) {\n    if (Props[p[1]] == null) return;\n    var m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n    switch (p[2]) {\n      case 'date':\n        m = new Date(m).toISOString().replace(/\\.\\d*Z/, \"Z\");\n        break;\n    }\n    if (typeof m == 'number') m = String(m);else if (m === true || m === false) {\n      m = m ? \"1\" : \"0\";\n    } else if (m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/, \"\");\n    o.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n  });\n  return writextag('DocumentProperties', o.join(\"\"), {\n    xmlns: XLMLNS.o\n  });\n}\nfunction xlml_write_custprops(Props, Custprops /*::, opts*/) {\n  var BLACKLIST = [\"Worksheets\", \"SheetNames\"];\n  var T = 'CustomDocumentProperties';\n  var o /*:Array<string>*/ = [];\n  if (Props) keys(Props).forEach(function (k) {\n    /*:: if(!Props) return; */\n    if (!Object.prototype.hasOwnProperty.call(Props, k)) return;\n    for (var i = 0; i < CORE_PROPS.length; ++i) if (k == CORE_PROPS[i][1]) return;\n    for (i = 0; i < EXT_PROPS.length; ++i) if (k == EXT_PROPS[i][1]) return;\n    for (i = 0; i < BLACKLIST.length; ++i) if (k == BLACKLIST[i]) return;\n    var m = Props[k];\n    var t = \"string\";\n    if (typeof m == 'number') {\n      t = \"float\";\n      m = String(m);\n    } else if (m === true || m === false) {\n      t = \"boolean\";\n      m = m ? \"1\" : \"0\";\n    } else m = String(m);\n    o.push(writextag(escapexmltag(k), m, {\n      \"dt:dt\": t\n    }));\n  });\n  if (Custprops) keys(Custprops).forEach(function (k) {\n    /*:: if(!Custprops) return; */\n    if (!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n    if (Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n    var m = Custprops[k];\n    var t = \"string\";\n    if (typeof m == 'number') {\n      t = \"float\";\n      m = String(m);\n    } else if (m === true || m === false) {\n      t = \"boolean\";\n      m = m ? \"1\" : \"0\";\n    } else if (m instanceof Date) {\n      t = \"dateTime.tz\";\n      m = m.toISOString();\n    } else m = String(m);\n    o.push(writextag(escapexmltag(k), m, {\n      \"dt:dt\": t\n    }));\n  });\n  return '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n  var dwLowDateTime = blob.read_shift(4),\n    dwHighDateTime = blob.read_shift(4);\n  return new Date((dwHighDateTime / 1e7 * Math.pow(2, 32) + dwLowDateTime / 1e7 - 11644473600) * 1000).toISOString().replace(/\\.000/, \"\");\n}\nfunction write_FILETIME(time /*:string|Date*/) {\n  var date = typeof time == \"string\" ? new Date(Date.parse(time)) : time;\n  var t = date.getTime() / 1000 + 11644473600;\n  var l = t % Math.pow(2, 32),\n    h = (t - l) / Math.pow(2, 32);\n  l *= 1e7;\n  h *= 1e7;\n  var w = l / Math.pow(2, 32) | 0;\n  if (w > 0) {\n    l = l % Math.pow(2, 32);\n    h += w;\n  }\n  var o = new_buf(8);\n  o.write_shift(4, l);\n  o.write_shift(4, h);\n  return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad /*:?number*/) {\n  var start = blob.l;\n  var str = blob.read_shift(0, 'lpstr-cp');\n  if (pad) while (blob.l - start & 3) ++blob.l;\n  return str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n  var str = blob.read_shift(0, 'lpwstr');\n  if (pad) blob.l += 4 - (str.length + 1 & 3) & 3;\n  return str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n  if (stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n  return parse_lpstr(blob, stringType, pad);\n}\nfunction parse_VtString(blob, t /*:number*/, pad /*:?boolean*/) {\n  return parse_VtStringBase(blob, t, pad === false ? 0 : 4);\n}\nfunction parse_VtUnalignedString(blob, t /*:number*/) {\n  if (!t) throw new Error(\"VtUnalignedString must have positive length\");\n  return parse_VtStringBase(blob, t, 0);\n}\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob) /*:Array<string>*/{\n  var length = blob.read_shift(4);\n  var ret /*:Array<string>*/ = [];\n  for (var i = 0; i != length; ++i) {\n    var start = blob.l;\n    ret[i] = blob.read_shift(0, 'lpwstr').replace(chr0, '');\n    if (blob.l - start & 0x02) blob.l += 2;\n  }\n  return ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob) /*:Array<string>*/{\n  var length = blob.read_shift(4);\n  var ret /*:Array<string>*/ = [];\n  for (var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0, '');\n  return ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n  var start = blob.l;\n  var headingString = parse_TypedPropertyValue(blob, VT_USTR);\n  if (blob[blob.l] == 0x00 && blob[blob.l + 1] == 0x00 && blob.l - start & 0x02) blob.l += 2;\n  var headerParts = parse_TypedPropertyValue(blob, VT_I4);\n  return [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n  var cElements = blob.read_shift(4);\n  var out = [];\n  for (var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n  return out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob, CodePage) {\n  var cnt = blob.read_shift(4);\n  var dict /*:{[number]:string}*/ = {} /*:any*/;\n  for (var j = 0; j != cnt; ++j) {\n    var pid = blob.read_shift(4);\n    var len = blob.read_shift(4);\n    dict[pid] = blob.read_shift(len, CodePage === 0x4B0 ? 'utf16le' : 'utf8').replace(chr0, '').replace(chr1, '!');\n    if (CodePage === 0x4B0 && len % 2) blob.l += 2;\n  }\n  if (blob.l & 3) blob.l = blob.l >> 2 + 1 << 2;\n  return dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n  var size = blob.read_shift(4);\n  var bytes = blob.slice(blob.l, blob.l + size);\n  blob.l += size;\n  if ((size & 3) > 0) blob.l += 4 - (size & 3) & 3;\n  return bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n  // TODO\n  var o = {};\n  o.Size = blob.read_shift(4);\n  //o.Format = blob.read_shift(4);\n  blob.l += o.Size + 3 - (o.Size - 1) % 4;\n  return o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type /*:number*/, _opts) /*:any*/{\n  var t = blob.read_shift(2),\n    ret,\n    opts = _opts || {};\n  blob.l += 2;\n  if (type !== VT_VARIANT) if (t !== type && VT_CUSTOM.indexOf(type) === -1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n  switch (type === VT_VARIANT ? t : type) {\n    case 0x02 /*VT_I2*/:\n      ret = blob.read_shift(2, 'i');\n      if (!opts.raw) blob.l += 2;\n      return ret;\n    case 0x03 /*VT_I4*/:\n      ret = blob.read_shift(4, 'i');\n      return ret;\n    case 0x0B /*VT_BOOL*/:\n      return blob.read_shift(4) !== 0x0;\n    case 0x13 /*VT_UI4*/:\n      ret = blob.read_shift(4);\n      return ret;\n    case 0x1E /*VT_LPSTR*/:\n      return parse_lpstr(blob, t, 4).replace(chr0, '');\n    case 0x1F /*VT_LPWSTR*/:\n      return parse_lpwstr(blob);\n    case 0x40 /*VT_FILETIME*/:\n      return parse_FILETIME(blob);\n    case 0x41 /*VT_BLOB*/:\n      return parse_BLOB(blob);\n    case 0x47 /*VT_CF*/:\n      return parse_ClipboardData(blob);\n    case 0x50 /*VT_STRING*/:\n      return parse_VtString(blob, t, !opts.raw).replace(chr0, '');\n    case 0x51 /*VT_USTR*/:\n      return parse_VtUnalignedString(blob, t /*, 4*/).replace(chr0, '');\n    case 0x100C /*VT_VECTOR|VT_VARIANT*/:\n      return parse_VtVecHeadingPairValue(blob);\n    case 0x101E /*VT_VECTOR|VT_LPSTR*/:\n    case 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n      return t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n    default:\n      throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n  }\n}\nfunction write_TypedPropertyValue(type /*:number*/, value) {\n  var o = new_buf(4),\n    p = new_buf(4);\n  o.write_shift(4, type == 0x50 ? 0x1F : type);\n  switch (type) {\n    case 0x03 /*VT_I4*/:\n      p.write_shift(-4, value);\n      break;\n    case 0x05 /*VT_I4*/:\n      p = new_buf(8);\n      p.write_shift(8, value, 'f');\n      break;\n    case 0x0B /*VT_BOOL*/:\n      p.write_shift(4, value ? 0x01 : 0x00);\n      break;\n    case 0x40 /*VT_FILETIME*/:\n      /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */p = write_FILETIME(value);\n      break;\n    case 0x1F /*VT_LPWSTR*/:\n    case 0x50 /*VT_STRING*/:\n      /*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n      p = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n      p.write_shift(4, value.length + 1);\n      p.write_shift(0, value, \"dbcs\");\n      while (p.l != p.length) p.write_shift(1, 0);\n      break;\n    default:\n      throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n  }\n  return bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n  var start_addr = blob.l;\n  var size = blob.read_shift(4);\n  var NumProps = blob.read_shift(4);\n  var Props = [],\n    i = 0;\n  var CodePage = 0;\n  var Dictionary = -1,\n    DictObj /*:{[number]:string}*/ = {} /*:any*/;\n  for (i = 0; i != NumProps; ++i) {\n    var PropID = blob.read_shift(4);\n    var Offset = blob.read_shift(4);\n    Props[i] = [PropID, Offset + start_addr];\n  }\n  Props.sort(function (x, y) {\n    return x[1] - y[1];\n  });\n  var PropH = {};\n  for (i = 0; i != NumProps; ++i) {\n    if (blob.l !== Props[i][1]) {\n      var fail = true;\n      if (i > 0 && PIDSI) switch (PIDSI[Props[i - 1][0]].t) {\n        case 0x02 /*VT_I2*/:\n          if (blob.l + 2 === Props[i][1]) {\n            blob.l += 2;\n            fail = false;\n          }\n          break;\n        case 0x50 /*VT_STRING*/:\n          if (blob.l <= Props[i][1]) {\n            blob.l = Props[i][1];\n            fail = false;\n          }\n          break;\n        case 0x100C /*VT_VECTOR|VT_VARIANT*/:\n          if (blob.l <= Props[i][1]) {\n            blob.l = Props[i][1];\n            fail = false;\n          }\n          break;\n      }\n      if ((!PIDSI || i == 0) && blob.l <= Props[i][1]) {\n        fail = false;\n        blob.l = Props[i][1];\n      }\n      if (fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n    }\n    if (PIDSI) {\n      var piddsi = PIDSI[Props[i][0]];\n      PropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {\n        raw: true\n      });\n      if (piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n      if (piddsi.n == \"CodePage\") switch (PropH[piddsi.n]) {\n        case 0:\n          PropH[piddsi.n] = 1252;\n        /* falls through */\n        case 874:\n        case 932:\n        case 936:\n        case 949:\n        case 950:\n        case 1250:\n        case 1251:\n        case 1253:\n        case 1254:\n        case 1255:\n        case 1256:\n        case 1257:\n        case 1258:\n        case 10000:\n        case 1200:\n        case 1201:\n        case 1252:\n        case 65000:\n        case -536:\n        case 65001:\n        case -535:\n          set_cp(CodePage = PropH[piddsi.n] >>> 0 & 0xFFFF);\n          break;\n        default:\n          throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n      }\n    } else {\n      if (Props[i][0] === 0x1) {\n        CodePage = PropH.CodePage = parse_TypedPropertyValue(blob, VT_I2) /*:number*/;\n        set_cp(CodePage);\n        if (Dictionary !== -1) {\n          var oldpos = blob.l;\n          blob.l = Props[Dictionary][1];\n          DictObj = parse_dictionary(blob, CodePage);\n          blob.l = oldpos;\n        }\n      } else if (Props[i][0] === 0) {\n        if (CodePage === 0) {\n          Dictionary = i;\n          blob.l = Props[i + 1][1];\n          continue;\n        }\n        DictObj = parse_dictionary(blob, CodePage);\n      } else {\n        var name = DictObj[Props[i][0]];\n        var val;\n        /* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n        switch (blob[blob.l]) {\n          case 0x41 /*VT_BLOB*/:\n            blob.l += 4;\n            val = parse_BLOB(blob);\n            break;\n          case 0x1E /*VT_LPSTR*/:\n            blob.l += 4;\n            val = parse_VtString(blob, blob[blob.l - 4]).replace(/\\u0000+$/, \"\");\n            break;\n          case 0x1F /*VT_LPWSTR*/:\n            blob.l += 4;\n            val = parse_VtString(blob, blob[blob.l - 4]).replace(/\\u0000+$/, \"\");\n            break;\n          case 0x03 /*VT_I4*/:\n            blob.l += 4;\n            val = blob.read_shift(4, 'i');\n            break;\n          case 0x13 /*VT_UI4*/:\n            blob.l += 4;\n            val = blob.read_shift(4);\n            break;\n          case 0x05 /*VT_R8*/:\n            blob.l += 4;\n            val = blob.read_shift(8, 'f');\n            break;\n          case 0x0B /*VT_BOOL*/:\n            blob.l += 4;\n            val = parsebool(blob, 4);\n            break;\n          case 0x40 /*VT_FILETIME*/:\n            blob.l += 4;\n            val = parseDate(parse_FILETIME(blob));\n            break;\n          default:\n            throw new Error(\"unparsed value: \" + blob[blob.l]);\n        }\n        PropH[name] = val;\n      }\n    }\n  }\n  blob.l = start_addr + size; /* step ahead to skip padding */\n  return PropH;\n}\nvar XLSPSSkip = [\"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\"]; //.concat(PseudoPropsPairs);\nfunction guess_property_type(val /*:any*/) /*:number*/{\n  switch (typeof val) {\n    case \"boolean\":\n      return 0x0B;\n    case \"number\":\n      return (val | 0) == val ? 0x03 : 0x05;\n    case \"string\":\n      return 0x1F;\n    case \"object\":\n      if (val instanceof Date) return 0x40;\n      break;\n  }\n  return -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n  var hdr = new_buf(8),\n    piao = [],\n    prop = [];\n  var sz = 8,\n    i = 0;\n  var pr = new_buf(8),\n    pio = new_buf(8);\n  pr.write_shift(4, 0x0002);\n  pr.write_shift(4, 0x04B0);\n  pio.write_shift(4, 0x0001);\n  prop.push(pr);\n  piao.push(pio);\n  sz += 8 + pr.length;\n  if (!RE) {\n    pio = new_buf(8);\n    pio.write_shift(4, 0);\n    piao.unshift(pio);\n    var bufs = [new_buf(4)];\n    bufs[0].write_shift(4, entries.length);\n    for (i = 0; i < entries.length; ++i) {\n      var value = entries[i][0];\n      pr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n      pr.write_shift(4, i + 2);\n      pr.write_shift(4, value.length + 1);\n      pr.write_shift(0, value, \"dbcs\");\n      while (pr.l != pr.length) pr.write_shift(1, 0);\n      bufs.push(pr);\n    }\n    pr = bconcat(bufs);\n    prop.unshift(pr);\n    sz += 8 + pr.length;\n  }\n  for (i = 0; i < entries.length; ++i) {\n    if (RE && !RE[entries[i][0]]) continue;\n    if (XLSPSSkip.indexOf(entries[i][0]) > -1 || PseudoPropsPairs.indexOf(entries[i][0]) > -1) continue;\n    if (entries[i][1] == null) continue;\n    var val = entries[i][1],\n      idx = 0;\n    if (RE) {\n      idx = +RE[entries[i][0]];\n      var pinfo = PIDSI /*:: || {}*/[idx] /*:: || {} */;\n      if (pinfo.p == \"version\" && typeof val == \"string\") {\n        /*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n        var arr = val.split(\".\");\n        val = (+arr[0] << 16) + (+arr[1] || 0);\n      }\n      pr = write_TypedPropertyValue(pinfo.t, val);\n    } else {\n      var T = guess_property_type(val);\n      if (T == -1) {\n        T = 0x1F;\n        val = String(val);\n      }\n      pr = write_TypedPropertyValue(T, val);\n    }\n    prop.push(pr);\n    pio = new_buf(8);\n    pio.write_shift(4, !RE ? 2 + i : idx);\n    piao.push(pio);\n    sz += 8 + pr.length;\n  }\n  var w = 8 * (prop.length + 1);\n  for (i = 0; i < prop.length; ++i) {\n    piao[i].write_shift(4, w);\n    w += prop[i].length;\n  }\n  hdr.write_shift(4, sz);\n  hdr.write_shift(4, prop.length);\n  return bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n  var blob = file.content;\n  if (!blob) return {} /*:any*/;\n  prep_blob(blob, 0);\n  var NumSets,\n    FMTID0,\n    FMTID1,\n    Offset0,\n    Offset1 = 0;\n  blob.chk('feff', 'Byte Order: ');\n\n  /*var vers = */\n  blob.read_shift(2); // TODO: check version\n  var SystemIdentifier = blob.read_shift(4);\n  var CLSID = blob.read_shift(16);\n  if (CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n  NumSets = blob.read_shift(4);\n  if (NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n  FMTID0 = blob.read_shift(16);\n  Offset0 = blob.read_shift(4);\n  if (NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);else if (NumSets === 2) {\n    FMTID1 = blob.read_shift(16);\n    Offset1 = blob.read_shift(4);\n  }\n  var PSet0 = parse_PropertySet(blob, PIDSI);\n  var rval = {\n    SystemIdentifier: SystemIdentifier\n  } /*:any*/;\n  for (var y in PSet0) rval[y] = PSet0[y];\n  //rval.blob = blob;\n  rval.FMTID = FMTID0;\n  //rval.PSet0 = PSet0;\n  if (NumSets === 1) return rval;\n  if (Offset1 - blob.l == 2) blob.l += 2;\n  if (blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n  var PSet1;\n  try {\n    PSet1 = parse_PropertySet(blob, null);\n  } catch (e) {/* empty */}\n  for (y in PSet1) rval[y] = PSet1[y];\n  rval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n  return rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI /*:{[key:string|number]:any}*/, entries2 /*:?any*/, clsid2 /*:?any*/) {\n  var hdr = new_buf(entries2 ? 68 : 48);\n  var bufs = [hdr];\n  hdr.write_shift(2, 0xFFFE);\n  hdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n  hdr.write_shift(4, 0x32363237);\n  hdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n  hdr.write_shift(4, entries2 ? 2 : 1);\n  hdr.write_shift(16, clsid, \"hex\");\n  hdr.write_shift(4, entries2 ? 68 : 48);\n  var ps0 = write_PropertySet(entries, RE, PIDSI);\n  bufs.push(ps0);\n  if (entries2) {\n    var ps1 = write_PropertySet(entries2, null, null);\n    hdr.write_shift(16, clsid2, \"hex\");\n    hdr.write_shift(4, 68 + ps0.length);\n    bufs.push(ps1);\n  }\n  return bconcat(bufs);\n}\nfunction parsenoop2(blob, length) {\n  blob.read_shift(length);\n  return null;\n}\nfunction writezeroes(n, o) {\n  if (!o) o = new_buf(n);\n  for (var j = 0; j < n; ++j) o.write_shift(1, 0);\n  return o;\n}\nfunction parslurp(blob, length, cb) {\n  var arr = [],\n    target = blob.l + length;\n  while (blob.l < target) arr.push(cb(blob, target - blob.l));\n  if (target !== blob.l) throw new Error(\"Slurp error\");\n  return arr;\n}\nfunction parsebool(blob, length /*:number*/) {\n  return blob.read_shift(length) === 0x1;\n}\nfunction writebool(v /*:any*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(2, +!!v);\n  return o;\n}\nfunction parseuint16(blob /*::, length:?number, opts:?any*/) {\n  return blob.read_shift(2, 'u');\n}\nfunction writeuint16(v /*:number*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(2, v);\n  return o;\n}\nfunction parseuint16a(blob, length /*:: :?number, opts:?any*/) {\n  return parslurp(blob, length, parseuint16);\n}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob /*::, length*/) {\n  var v = blob.read_shift(1),\n    t = blob.read_shift(1);\n  return t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t /*:string*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(1, t == 'e' ? +v : +!!v);\n  o.write_shift(1, t == 'e' ? 1 : 0);\n  return o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n  var cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n  var encoding = 'sbcs-cont';\n  var cp = current_codepage;\n  if (opts && opts.biff >= 8) current_codepage = 1200;\n  if (!opts || opts.biff == 8) {\n    var fHighByte = blob.read_shift(1);\n    if (fHighByte) {\n      encoding = 'dbcs-cont';\n    }\n  } else if (opts.biff == 12) {\n    encoding = 'wstr';\n  }\n  if (opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n  var o = cch ? blob.read_shift(cch, encoding) : \"\";\n  current_codepage = cp;\n  return o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n  var cp = current_codepage;\n  current_codepage = 1200;\n  var cch = blob.read_shift(2),\n    flags = blob.read_shift(1);\n  var /*fHighByte = flags & 0x1,*/fExtSt = flags & 0x4,\n    fRichSt = flags & 0x8;\n  var width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n  var cRun = 0,\n    cbExtRst;\n  var z = {};\n  if (fRichSt) cRun = blob.read_shift(2);\n  if (fExtSt) cbExtRst = blob.read_shift(4);\n  var encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n  var msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n  if (fRichSt) blob.l += 4 * cRun; //TODO: parse this\n  if (fExtSt) blob.l += cbExtRst; //TODO: parse this\n  z.t = msg;\n  if (!fRichSt) {\n    z.raw = \"<t>\" + z.t + \"</t>\";\n    z.r = z.t;\n  }\n  current_codepage = cp;\n  return z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr /*:: :XLString, opts*/) {\n  var str = xlstr.t || \"\",\n    nfmts = 1;\n  var hdr = new_buf(3 + (nfmts > 1 ? 2 : 0));\n  hdr.write_shift(2, str.length);\n  hdr.write_shift(1, (nfmts > 1 ? 0x08 : 0x00) | 0x01);\n  if (nfmts > 1) hdr.write_shift(2, nfmts);\n  var otext = new_buf(2 * str.length);\n  otext.write_shift(2 * str.length, str, 'utf16le');\n  var out = [hdr, otext];\n  return bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n  var retval;\n  if (opts) {\n    if (opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n    if (opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n  }\n  var fHighByte = blob.read_shift(1);\n  if (fHighByte === 0) {\n    retval = blob.read_shift(cch, 'sbcs-cont');\n  } else {\n    retval = blob.read_shift(cch, 'dbcs-cont');\n  }\n  return retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n  var cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n  if (opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n  var cch = blob.read_shift(1);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return blob.read_shift(cch, opts.biff <= 4 || !blob.lens ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n  if (!o) o = new_buf(3 + 2 * str.length);\n  o.write_shift(2, str.length);\n  o.write_shift(1, 1);\n  o.write_shift(31, str, 'utf16le');\n  return o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob /*::, length, opts*/) {\n  var flags = blob.read_shift(1);\n  blob.l++;\n  var accel = blob.read_shift(2);\n  blob.l += 2;\n  return [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob /*::, length, opts*/) {\n  var len = blob.read_shift(4),\n    start = blob.l;\n  var extra = false;\n  if (len > 24) {\n    /* look ahead */\n    blob.l += len - 24;\n    if (blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n    blob.l = start;\n  }\n  var url = blob.read_shift((extra ? len - 24 : len) >> 1, 'utf16le').replace(chr0, \"\");\n  if (extra) blob.l += 24;\n  return url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob /*::, length*/) {\n  var cAnti = blob.read_shift(2);\n  var preamble = \"\";\n  while (cAnti-- > 0) preamble += \"../\";\n  var ansiPath = blob.read_shift(0, 'lpstr-ansi');\n  blob.l += 2; //var endServer = blob.read_shift(2);\n  if (blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n  var sz = blob.read_shift(4);\n  if (sz === 0) return preamble + ansiPath.replace(/\\\\/g, \"/\");\n  var bytes = blob.read_shift(4);\n  if (blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n  var unicodePath = blob.read_shift(bytes >> 1, 'utf16le').replace(chr0, \"\");\n  return preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n  var clsid = blob.read_shift(16);\n  length -= 16;\n  switch (clsid) {\n    case \"e0c9ea79f9bace118c8200aa004ba90b\":\n      return parse_URLMoniker(blob, length);\n    case \"0303000000000000c000000000000046\":\n      return parse_FileMoniker(blob, length);\n    default:\n      throw new Error(\"Unsupported Moniker \" + clsid);\n  }\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob /*::, length*/) {\n  var len = blob.read_shift(4);\n  var o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n  return o;\n}\nfunction write_HyperlinkString(str /*:string*/, o) {\n  if (!o) o = new_buf(6 + str.length * 2);\n  o.write_shift(4, 1 + str.length);\n  for (var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length) /*:Hyperlink*/{\n  var end = blob.l + length;\n  var sVer = blob.read_shift(4);\n  if (sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n  var flags = blob.read_shift(2);\n  blob.l += 2;\n  var displayName,\n    targetFrameName,\n    moniker,\n    oleMoniker,\n    Loc = \"\",\n    guid,\n    fileTime;\n  if (flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n  if (flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n  if ((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n  if ((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n  if (flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n  if (flags & 0x0020) guid = blob.read_shift(16);\n  if (flags & 0x0040) fileTime = parse_FILETIME(blob /*, 8*/);\n  blob.l = end;\n  var target = targetFrameName || moniker || oleMoniker || \"\";\n  if (target && Loc) target += \"#\" + Loc;\n  if (!target) target = \"#\" + Loc;\n  if (flags & 0x0002 && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n  var out = {\n    Target: target\n  } /*:any*/;\n  if (guid) out.guid = guid;\n  if (fileTime) out.time = fileTime;\n  if (displayName) out.Tooltip = displayName;\n  return out;\n}\nfunction write_Hyperlink(hl) {\n  var out = new_buf(512),\n    i = 0;\n  var Target = hl.Target;\n  if (Target.slice(0, 7) == \"file://\") Target = Target.slice(7);\n  var hashidx = Target.indexOf(\"#\");\n  var F = hashidx > -1 ? 0x1f : 0x17;\n  switch (Target.charAt(0)) {\n    case \"#\":\n      F = 0x1c;\n      break;\n    case \".\":\n      F &= ~2;\n      break;\n  }\n  out.write_shift(4, 2);\n  out.write_shift(4, F);\n  var data = [8, 6815827, 6619237, 4849780, 83];\n  for (i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n  if (F == 0x1C) {\n    Target = Target.slice(1);\n    write_HyperlinkString(Target, out);\n  } else if (F & 0x02) {\n    data = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n    for (i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n    var Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n    out.write_shift(4, 2 * (Pretarget.length + 1));\n    for (i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n    out.write_shift(2, 0);\n    if (F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx + 1) : \"\", out);\n  } else {\n    data = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n    for (i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n    var P = 0;\n    while (Target.slice(P * 3, P * 3 + 3) == \"../\" || Target.slice(P * 3, P * 3 + 3) == \"..\\\\\") ++P;\n    out.write_shift(2, P);\n    out.write_shift(4, Target.length - 3 * P + 1);\n    for (i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n    out.write_shift(1, 0);\n    out.write_shift(2, 0xFFFF);\n    out.write_shift(2, 0xDEAD);\n    for (i = 0; i < 6; ++i) out.write_shift(4, 0);\n  }\n  return out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob /*::, length*/) {\n  var r = blob.read_shift(1),\n    g = blob.read_shift(1),\n    b = blob.read_shift(1),\n    a = blob.read_shift(1);\n  return [r, g, b, a];\n}\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) {\n  var x = parse_LongRGBA(blob, length);\n  x[3] = 0;\n  return x;\n}\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob /*::, length*/) /*:Cell*/{\n  var rw = blob.read_shift(2); // 0-indexed\n  var col = blob.read_shift(2);\n  var ixfe = blob.read_shift(2);\n  return {\n    r: rw,\n    c: col,\n    ixfe: ixfe\n  } /*:any*/;\n}\nfunction write_XLSCell(R /*:number*/, C /*:number*/, ixfe /*:?number*/, o) {\n  if (!o) o = new_buf(6);\n  o.write_shift(2, R);\n  o.write_shift(2, C);\n  o.write_shift(2, ixfe || 0);\n  return o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n  var rt = blob.read_shift(2);\n  var flags = blob.read_shift(2); // TODO: parse these flags\n  blob.l += 8;\n  return {\n    type: rt,\n    flags: flags\n  };\n}\nfunction parse_OptXLUnicodeString(blob, length, opts) {\n  return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts);\n}\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n  var w = opts.biff > 8 ? 4 : 2;\n  var iSupBook = blob.read_shift(w),\n    itabFirst = blob.read_shift(w, 'i'),\n    itabLast = blob.read_shift(w, 'i');\n  return [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n  var ixfe = blob.read_shift(2);\n  var RK = parse_RkNumber(blob);\n  return [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n  blob.l += 4;\n  length -= 4;\n  var l = blob.l + length;\n  var udfName = parse_ShortXLUnicodeString(blob, length, opts);\n  var cb = blob.read_shift(2);\n  l -= blob.l;\n  if (cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n  blob.l += cb;\n  return udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob /*::, length*/) {\n  var rwFirst = blob.read_shift(2);\n  var rwLast = blob.read_shift(2);\n  var colFirst = blob.read_shift(2);\n  var colLast = blob.read_shift(2);\n  return {\n    s: {\n      c: colFirst,\n      r: rwFirst\n    },\n    e: {\n      c: colLast,\n      r: rwLast\n    }\n  };\n}\nfunction write_Ref8U(r /*:Range*/, o) {\n  if (!o) o = new_buf(8);\n  o.write_shift(2, r.s.r);\n  o.write_shift(2, r.e.r);\n  o.write_shift(2, r.s.c);\n  o.write_shift(2, r.e.c);\n  return o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob /*::, length*/) {\n  var rwFirst = blob.read_shift(2);\n  var rwLast = blob.read_shift(2);\n  var colFirst = blob.read_shift(1);\n  var colLast = blob.read_shift(1);\n  return {\n    s: {\n      c: colFirst,\n      r: rwFirst\n    },\n    e: {\n      c: colLast,\n      r: rwLast\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob /*::, length*/) {\n  blob.l += 4;\n  var ot = blob.read_shift(2);\n  var id = blob.read_shift(2);\n  var flags = blob.read_shift(2);\n  blob.l += 12;\n  return [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n  var out = {};\n  blob.l += 4;\n  blob.l += 16; // GUID TODO\n  out.fSharedNote = blob.read_shift(2);\n  blob.l += 4;\n  return out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n  var out = {};\n  blob.l += 4;\n  blob.cf = blob.read_shift(2);\n  return out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) {\n  blob.l += 2;\n  blob.l += blob.read_shift(2);\n}\nvar FtTab = {\n  /*::[*/0x00 /*::]*/: parse_FtSkip,\n  /* FtEnd */\n  /*::[*/0x04 /*::]*/: parse_FtSkip,\n  /* FtMacro */\n  /*::[*/0x05 /*::]*/: parse_FtSkip,\n  /* FtButton */\n  /*::[*/0x06 /*::]*/: parse_FtSkip,\n  /* FtGmo */\n  /*::[*/0x07 /*::]*/: parse_FtCf,\n  /* FtCf */\n  /*::[*/0x08 /*::]*/: parse_FtSkip,\n  /* FtPioGrbit */\n  /*::[*/0x09 /*::]*/: parse_FtSkip,\n  /* FtPictFmla */\n  /*::[*/0x0A /*::]*/: parse_FtSkip,\n  /* FtCbls */\n  /*::[*/0x0B /*::]*/: parse_FtSkip,\n  /* FtRbo */\n  /*::[*/0x0C /*::]*/: parse_FtSkip,\n  /* FtSbs */\n  /*::[*/0x0D /*::]*/: parse_FtNts,\n  /* FtNts */\n  /*::[*/0x0E /*::]*/: parse_FtSkip,\n  /* FtSbsFmla */\n  /*::[*/0x0F /*::]*/: parse_FtSkip,\n  /* FtGboData */\n  /*::[*/0x10 /*::]*/: parse_FtSkip,\n  /* FtEdoData */\n  /*::[*/0x11 /*::]*/: parse_FtSkip,\n  /* FtRboData */\n  /*::[*/0x12 /*::]*/: parse_FtSkip,\n  /* FtCblsData */\n  /*::[*/0x13 /*::]*/: parse_FtSkip,\n  /* FtLbsData */\n  /*::[*/0x14 /*::]*/: parse_FtSkip,\n  /* FtCblsFmla */\n  /*::[*/0x15 /*::]*/: parse_FtCmo\n};\nfunction parse_FtArray(blob, length /*::, ot*/) {\n  var tgt = blob.l + length;\n  var fts = [];\n  while (blob.l < tgt) {\n    var ft = blob.read_shift(2);\n    blob.l -= 2;\n    try {\n      fts.push(FtTab[ft](blob, tgt - blob.l));\n    } catch (e) {\n      blob.l = tgt;\n      return fts;\n    }\n  }\n  if (blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n  return fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n  var o = {\n    BIFFVer: 0,\n    dt: 0\n  };\n  o.BIFFVer = blob.read_shift(2);\n  length -= 2;\n  if (length >= 2) {\n    o.dt = blob.read_shift(2);\n    blob.l -= 2;\n  }\n  switch (o.BIFFVer) {\n    case 0x0600: /* BIFF8 */\n    case 0x0500: /* BIFF5 */\n    case 0x0400: /* BIFF4 */\n    case 0x0300: /* BIFF3 */\n    case 0x0200: /* BIFF2 */\n    case 0x0002:\n    case 0x0007:\n      /* BIFF2 */\n      break;\n    default:\n      if (length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n  }\n  blob.read_shift(length);\n  return o;\n}\nfunction write_BOF(wb /*:Workbook*/, t /*:number*/, o) {\n  var h = 0x0600,\n    w = 16;\n  switch (o.bookType) {\n    case 'biff8':\n      break;\n    case 'biff5':\n      h = 0x0500;\n      w = 8;\n      break;\n    case 'biff4':\n      h = 0x0004;\n      w = 6;\n      break;\n    case 'biff3':\n      h = 0x0003;\n      w = 6;\n      break;\n    case 'biff2':\n      h = 0x0002;\n      w = 4;\n      break;\n    case 'xla':\n      break;\n    default:\n      throw new Error(\"unsupported BIFF version\");\n  }\n  var out = new_buf(w);\n  out.write_shift(2, h);\n  out.write_shift(2, t);\n  if (w > 4) out.write_shift(2, 0x7262);\n  if (w > 6) out.write_shift(2, 0x07CD);\n  if (w > 8) {\n    out.write_shift(2, 0xC009);\n    out.write_shift(2, 0x0001);\n    out.write_shift(2, 0x0706);\n    out.write_shift(2, 0x0000);\n  }\n  return out;\n}\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n  if (length === 0) return 0x04b0;\n  if (blob.read_shift(2) !== 0x04b0) {/* empty */}\n  return 0x04b0;\n}\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n  if (opts.enc) {\n    blob.l += length;\n    return \"\";\n  }\n  var l = blob.l;\n  // TODO: make sure XLUnicodeString doesnt overrun\n  var UserName = parse_XLUnicodeString2(blob, 0, opts);\n  blob.read_shift(length + l - blob.l);\n  return UserName;\n}\nfunction write_WriteAccess(s /*:string*/, opts) {\n  var b8 = !opts || opts.biff == 8;\n  var o = new_buf(b8 ? 112 : 54);\n  o.write_shift(opts.biff == 8 ? 2 : 1, 7);\n  if (b8) o.write_shift(1, 0);\n  o.write_shift(4, 0x33336853);\n  o.write_shift(4, 0x00534A74 | (b8 ? 0 : 0x20000000));\n  while (o.l < o.length) o.write_shift(1, b8 ? 0 : 32);\n  return o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n  var flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n  return {\n    fDialog: flags & 0x10,\n    fBelow: flags & 0x40,\n    fRight: flags & 0x80\n  };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n  var pos = blob.read_shift(4);\n  var hidden = blob.read_shift(1) & 0x03;\n  var dt = blob.read_shift(1);\n  switch (dt) {\n    case 0:\n      dt = 'Worksheet';\n      break;\n    case 1:\n      dt = 'Macrosheet';\n      break;\n    case 2:\n      dt = 'Chartsheet';\n      break;\n    case 6:\n      dt = 'VBAModule';\n      break;\n  }\n  var name = parse_ShortXLUnicodeString(blob, 0, opts);\n  if (name.length === 0) name = \"Sheet1\";\n  return {\n    pos: pos,\n    hs: hidden,\n    dt: dt,\n    name: name\n  };\n}\nfunction write_BoundSheet8(data, opts) {\n  var w = !opts || opts.biff >= 8 ? 2 : 1;\n  var o = new_buf(8 + w * data.name.length);\n  o.write_shift(4, data.pos);\n  o.write_shift(1, data.hs || 0);\n  o.write_shift(1, data.dt);\n  o.write_shift(1, data.name.length);\n  if (opts.biff >= 8) o.write_shift(1, 1);\n  o.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n  var out = o.slice(0, o.l);\n  out.l = o.l;\n  return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length) /*:SST*/{\n  var end = blob.l + length;\n  var cnt = blob.read_shift(4);\n  var ucnt = blob.read_shift(4);\n  var strs /*:SST*/ = [] /*:any*/;\n  for (var i = 0; i != ucnt && blob.l < end; ++i) {\n    strs.push(parse_XLUnicodeRichExtendedString(blob));\n  }\n  strs.Count = cnt;\n  strs.Unique = ucnt;\n  return strs;\n}\nfunction write_SST(sst, opts) {\n  var header = new_buf(8);\n  header.write_shift(4, sst.Count);\n  header.write_shift(4, sst.Unique);\n  var strs = [];\n  for (var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j], opts);\n  var o = bconcat([header].concat(strs));\n  /*::(*/\n  o /*:: :any)*/.parts = [header.length].concat(strs.map(function (str) {\n    return str.length;\n  }));\n  return o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n  var extsst = {};\n  extsst.dsst = blob.read_shift(2);\n  blob.l += length - 2;\n  return extsst;\n}\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n  var z = {} /*:any*/;\n  z.r = blob.read_shift(2);\n  z.c = blob.read_shift(2);\n  z.cnt = blob.read_shift(2) - z.c;\n  var miyRw = blob.read_shift(2);\n  blob.l += 4; // reserved(2), unused(2)\n  var flags = blob.read_shift(1); // various flags\n  blob.l += 3; // reserved(8), ixfe(12), flags(4)\n  if (flags & 0x07) z.level = flags & 0x07;\n  // collapsed: flags & 0x10\n  if (flags & 0x20) z.hidden = true;\n  if (flags & 0x40) z.hpt = miyRw / 20;\n  return z;\n}\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n  var header = parse_frtHeader(blob);\n  if (header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n  var fullcalc = blob.read_shift(4);\n  return fullcalc !== 0x0;\n}\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n  blob.read_shift(2);\n  return blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n  var f = 0;\n  if (!(opts && opts.biff == 2)) {\n    f = blob.read_shift(2);\n  }\n  var miyRw = blob.read_shift(2);\n  if (opts && opts.biff == 2) {\n    f = 1 - (miyRw >> 15);\n    miyRw &= 0x7fff;\n  }\n  var fl = {\n    Unsynced: f & 1,\n    DyZero: (f & 2) >> 1,\n    ExAsc: (f & 4) >> 2,\n    ExDsc: (f & 8) >> 3\n  };\n  return [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n  var xWn = blob.read_shift(2),\n    yWn = blob.read_shift(2),\n    dxWn = blob.read_shift(2),\n    dyWn = blob.read_shift(2);\n  var flags = blob.read_shift(2),\n    iTabCur = blob.read_shift(2),\n    iTabFirst = blob.read_shift(2);\n  var ctabSel = blob.read_shift(2),\n    wTabRatio = blob.read_shift(2);\n  return {\n    Pos: [xWn, yWn],\n    Dim: [dxWn, dyWn],\n    Flags: flags,\n    CurTab: iTabCur,\n    FirstTab: iTabFirst,\n    Selected: ctabSel,\n    TabRatio: wTabRatio\n  };\n}\nfunction write_Window1( /*::opts*/\n) {\n  var o = new_buf(18);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0x7260);\n  o.write_shift(2, 0x44c0);\n  o.write_shift(2, 0x38);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 1);\n  o.write_shift(2, 0x01f4);\n  return o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n  if (opts && opts.biff >= 2 && opts.biff < 5) return {};\n  var f = blob.read_shift(2);\n  return {\n    RTL: f & 0x40\n  };\n}\nfunction write_Window2(view) {\n  var o = new_buf(18),\n    f = 0x6b6;\n  if (view && view.RTL) f |= 0x40;\n  o.write_shift(2, f);\n  o.write_shift(4, 0);\n  o.write_shift(4, 64);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane( /*blob, length, opts*/\n) {}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n  var o /*:any*/ = {\n    dyHeight: blob.read_shift(2),\n    fl: blob.read_shift(2)\n  };\n  switch (opts && opts.biff || 8) {\n    case 2:\n      break;\n    case 3:\n    case 4:\n      blob.l += 2;\n      break;\n    default:\n      blob.l += 10;\n      break;\n  }\n  o.name = parse_ShortXLUnicodeString(blob, 0, opts);\n  return o;\n}\nfunction write_Font(data, opts) {\n  var name = data.name || \"Arial\";\n  var b5 = opts && opts.biff == 5,\n    w = b5 ? 15 + name.length : 16 + 2 * name.length;\n  var o = new_buf(w);\n  o.write_shift(2, (data.sz || 12) * 20);\n  o.write_shift(4, 0);\n  o.write_shift(2, 400);\n  o.write_shift(4, 0);\n  o.write_shift(2, 0);\n  o.write_shift(1, name.length);\n  if (!b5) o.write_shift(1, 1);\n  o.write_shift((b5 ? 1 : 2) * name.length, name, b5 ? \"sbcs\" : \"utf16le\");\n  return o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob) {\n  var cell = parse_XLSCell(blob);\n  cell.isst = blob.read_shift(4);\n  return cell;\n}\nfunction write_LabelSst(R /*:number*/, C /*:number*/, v /*:number*/, os /*:number*/ /*::, opts*/) {\n  var o = new_buf(10);\n  write_XLSCell(R, C, os, o);\n  o.write_shift(4, v);\n  return o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 2) opts.biff = 5;\n  var target = blob.l + length;\n  var cell = parse_XLSCell(blob, 6);\n  if (opts.biff == 2) blob.l++;\n  var str = parse_XLUnicodeString(blob, target - blob.l, opts);\n  cell.val = str;\n  return cell;\n}\nfunction write_Label(R /*:number*/, C /*:number*/, v /*:string*/, os /*:number*/, opts) {\n  var b8 = !opts || opts.biff == 8;\n  var o = new_buf(6 + 2 + +b8 + (1 + b8) * v.length);\n  write_XLSCell(R, C, os, o);\n  o.write_shift(2, v.length);\n  if (b8) o.write_shift(1, 1);\n  o.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n  return o;\n}\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n  var numFmtId = blob.read_shift(2);\n  var fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n  return [numFmtId, fmtstr];\n}\nfunction write_Format(i /*:number*/, f /*:string*/, opts, o) {\n  var b5 = opts && opts.biff == 5;\n  if (!o) o = new_buf(b5 ? 3 + f.length : 5 + 2 * f.length);\n  o.write_shift(2, i);\n  o.write_shift(b5 ? 1 : 2, f.length);\n  if (!b5) o.write_shift(1, 1);\n  o.write_shift((b5 ? 1 : 2) * f.length, f, b5 ? 'sbcs' : 'utf16le');\n  var out = o.length > o.l ? o.slice(0, o.l) : o;\n  if (out.l == null) out.l = out.length;\n  return out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n  var end = blob.l + length;\n  var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n  var r = blob.read_shift(w),\n    R = blob.read_shift(w);\n  var c = blob.read_shift(2),\n    C = blob.read_shift(2);\n  blob.l = end;\n  return {\n    s: {\n      r: r,\n      c: c\n    },\n    e: {\n      r: R,\n      c: C\n    }\n  };\n}\nfunction write_Dimensions(range, opts) {\n  var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n  var o = new_buf(2 * w + 6);\n  o.write_shift(w, range.s.r);\n  o.write_shift(w, range.e.r + 1);\n  o.write_shift(2, range.s.c);\n  o.write_shift(2, range.e.c + 1);\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var rkrec = parse_RkRec(blob);\n  return {\n    r: rw,\n    c: col,\n    ixfe: rkrec[0],\n    rknum: rkrec[1]\n  };\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n  var target = blob.l + length - 2;\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var rkrecs = [];\n  while (blob.l < target) rkrecs.push(parse_RkRec(blob));\n  if (blob.l !== target) throw new Error(\"MulRK read error\");\n  var lastcol = blob.read_shift(2);\n  if (rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n  return {\n    r: rw,\n    c: col,\n    C: lastcol,\n    rkrec: rkrecs\n  };\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n  var target = blob.l + length - 2;\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var ixfes = [];\n  while (blob.l < target) ixfes.push(blob.read_shift(2));\n  if (blob.l !== target) throw new Error(\"MulBlank read error\");\n  var lastcol = blob.read_shift(2);\n  if (ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n  return {\n    r: rw,\n    c: col,\n    C: lastcol,\n    ixfe: ixfes\n  };\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n  var o = {};\n  var a = blob.read_shift(4),\n    b = blob.read_shift(4);\n  var c = blob.read_shift(4),\n    d = blob.read_shift(2);\n  o.patternType = XLSFillPattern[c >> 26];\n  if (!opts.cellStyles) return o;\n  o.alc = a & 0x07;\n  o.fWrap = a >> 3 & 0x01;\n  o.alcV = a >> 4 & 0x07;\n  o.fJustLast = a >> 7 & 0x01;\n  o.trot = a >> 8 & 0xFF;\n  o.cIndent = a >> 16 & 0x0F;\n  o.fShrinkToFit = a >> 20 & 0x01;\n  o.iReadOrder = a >> 22 & 0x02;\n  o.fAtrNum = a >> 26 & 0x01;\n  o.fAtrFnt = a >> 27 & 0x01;\n  o.fAtrAlc = a >> 28 & 0x01;\n  o.fAtrBdr = a >> 29 & 0x01;\n  o.fAtrPat = a >> 30 & 0x01;\n  o.fAtrProt = a >> 31 & 0x01;\n  o.dgLeft = b & 0x0F;\n  o.dgRight = b >> 4 & 0x0F;\n  o.dgTop = b >> 8 & 0x0F;\n  o.dgBottom = b >> 12 & 0x0F;\n  o.icvLeft = b >> 16 & 0x7F;\n  o.icvRight = b >> 23 & 0x7F;\n  o.grbitDiag = b >> 30 & 0x03;\n  o.icvTop = c & 0x7F;\n  o.icvBottom = c >> 7 & 0x7F;\n  o.icvDiag = c >> 14 & 0x7F;\n  o.dgDiag = c >> 21 & 0x0F;\n  o.icvFore = d & 0x7F;\n  o.icvBack = d >> 7 & 0x7F;\n  o.fsxButton = d >> 14 & 0x01;\n  return o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n  var o = {};\n  o.ifnt = blob.read_shift(2);\n  o.numFmtId = blob.read_shift(2);\n  o.flags = blob.read_shift(2);\n  o.fStyle = o.flags >> 2 & 0x01;\n  length -= 6;\n  o.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n  return o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n  var b5 = opts && opts.biff == 5;\n  if (!o) o = new_buf(b5 ? 16 : 20);\n  o.write_shift(2, 0);\n  if (data.style) {\n    o.write_shift(2, data.numFmtId || 0);\n    o.write_shift(2, 0xFFF4);\n  } else {\n    o.write_shift(2, data.numFmtId || 0);\n    o.write_shift(2, ixfeP << 4);\n  }\n  var f = 0;\n  if (data.numFmtId > 0 && b5) f |= 0x0400;\n  o.write_shift(4, f);\n  o.write_shift(4, 0);\n  if (!b5) o.write_shift(4, 0);\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n  blob.l += 4;\n  var out = [blob.read_shift(2), blob.read_shift(2)];\n  if (out[0] !== 0) out[0]--;\n  if (out[1] !== 0) out[1]--;\n  if (out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n  return out;\n}\nfunction write_Guts(guts /*:Array<number>*/) {\n  var o = new_buf(8);\n  o.write_shift(4, 0);\n  o.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n  o.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n  var cell = parse_XLSCell(blob, 6);\n  if (opts.biff == 2 || length == 9) ++blob.l;\n  var val = parse_Bes(blob, 2);\n  cell.val = val;\n  cell.t = val === true || val === false ? 'b' : 'e';\n  return cell;\n}\nfunction write_BoolErr(R /*:number*/, C /*:number*/, v, os /*:number*/, opts, t /*:string*/) {\n  var o = new_buf(8);\n  write_XLSCell(R, C, os, o);\n  write_Bes(v, t, o);\n  return o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 2) opts.biff = 5;\n  var cell = parse_XLSCell(blob, 6);\n  var xnum = parse_Xnum(blob, 8);\n  cell.val = xnum;\n  return cell;\n}\nfunction write_Number(R /*:number*/, C /*:number*/, v, os /*:: :number, opts*/) {\n  var o = new_buf(14);\n  write_XLSCell(R, C, os, o);\n  write_Xnum(v, o);\n  return o;\n}\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n  var end = blob.l + length;\n  var ctab = blob.read_shift(2);\n  var cch = blob.read_shift(2);\n  opts.sbcch = cch;\n  if (cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n  if (cch < 0x01 || cch > 0xff) throw new Error(\"Unexpected SupBook type: \" + cch);\n  var virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n  /* TODO: 2.5.277 Virtual Path */\n  var rgst = [];\n  while (end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n  return [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n  var flags = blob.read_shift(2);\n  var body;\n  var o = {\n    fBuiltIn: flags & 0x01,\n    fWantAdvise: flags >>> 1 & 0x01,\n    fWantPict: flags >>> 2 & 0x01,\n    fOle: flags >>> 3 & 0x01,\n    fOleLink: flags >>> 4 & 0x01,\n    cf: flags >>> 5 & 0x3FF,\n    fIcon: flags >>> 15 & 0x01\n  } /*:any*/;\n  if (opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length - 2, opts);\n  //else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n  o.body = body || blob.read_shift(length - 2);\n  if (typeof body === \"string\") o.Name = body;\n  return o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nvar XLSLblBuiltIn = [\"_xlnm.Consolidate_Area\", \"_xlnm.Auto_Open\", \"_xlnm.Auto_Close\", \"_xlnm.Extract\", \"_xlnm.Database\", \"_xlnm.Criteria\", \"_xlnm.Print_Area\", \"_xlnm.Print_Titles\", \"_xlnm.Recorder\", \"_xlnm.Data_Form\", \"_xlnm.Auto_Activate\", \"_xlnm.Auto_Deactivate\", \"_xlnm.Sheet_Title\", \"_xlnm._FilterDatabase\"];\nfunction parse_Lbl(blob, length, opts) {\n  var target = blob.l + length;\n  var flags = blob.read_shift(2);\n  var chKey = blob.read_shift(1);\n  var cch = blob.read_shift(1);\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  var itab = 0;\n  if (!opts || opts.biff >= 5) {\n    if (opts.biff != 5) blob.l += 2;\n    itab = blob.read_shift(2);\n    if (opts.biff == 5) blob.l += 2;\n    blob.l += 4;\n  }\n  var name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n  if (flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n  var npflen = target - blob.l;\n  if (opts && opts.biff == 2) --npflen;\n  /*jshint -W018 */\n  var rgce = target == blob.l || cce === 0 || !(npflen > 0) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n  /*jshint +W018 */\n  return {\n    chKey: chKey,\n    Name: name,\n    itab: itab,\n    rgce: rgce\n  };\n}\n\n/* [MS-XLS] 2.4.106 TODO: verify filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n  if (opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n  var o = [],\n    target = blob.l + length,\n    len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n  while (len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n  // [iSupBook, itabFirst, itabLast];\n  if (blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n  return o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n  if (blob[blob.l + 1] == 0x03) blob[blob.l]++;\n  var o = parse_ShortXLUnicodeString(blob, length, opts);\n  return o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n  if (opts.biff < 8) {\n    blob.l += length;\n    return;\n  }\n  var cchName = blob.read_shift(2);\n  var cchComment = blob.read_shift(2);\n  var name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n  var comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n  return [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n  var ref = parse_RefU(blob, 6);\n  blob.l++;\n  var cUse = blob.read_shift(1);\n  length -= 8;\n  return [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n  var ref = parse_Ref(blob, 6);\n  /* TODO: fAlwaysCalc */\n  switch (opts.biff) {\n    case 2:\n      blob.l++;\n      length -= 7;\n      break;\n    case 3:\n    case 4:\n      blob.l += 2;\n      length -= 8;\n      break;\n    default:\n      blob.l += 6;\n      length -= 12;\n  }\n  return [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n  var fMTREnabled = blob.read_shift(4) !== 0x00;\n  var fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n  var cUserThreadCount = blob.read_shift(4);\n  return [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 TODO: BIFF5 */\nfunction parse_NoteSh(blob, length, opts) {\n  if (opts.biff < 8) return;\n  var row = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var flags = blob.read_shift(2),\n    idObj = blob.read_shift(2);\n  var stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n  if (opts.biff < 8) blob.read_shift(1);\n  return [{\n    r: row,\n    c: col\n  }, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n  /* TODO: Support revisions */\n  return parse_NoteSh(blob, length, opts);\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length) /*:Array<Range>*/{\n  var merges /*:Array<Range>*/ = [];\n  var cmcs = blob.read_shift(2);\n  while (cmcs--) merges.push(parse_Ref8U(blob, length));\n  return merges;\n}\nfunction write_MergeCells(merges /*:Array<Range>*/) {\n  var o = new_buf(2 + merges.length * 8);\n  o.write_shift(2, merges.length);\n  for (var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n  return o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n  if (opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n  var cmo = parse_FtCmo(blob, 22); // id, ot, flags\n  var fts = parse_FtArray(blob, length - 22, cmo[1]);\n  return {\n    cmo: cmo,\n    ft: fts\n  };\n}\n/* from older spec */\nvar parse_BIFF5OT = {\n  0x08: function (blob, length) {\n    var tgt = blob.l + length;\n    blob.l += 10; // todo\n    var cf = blob.read_shift(2);\n    blob.l += 4;\n    blob.l += 2; //var cbPictFmla = blob.read_shift(2);\n    blob.l += 2;\n    blob.l += 2; //var grbit = blob.read_shift(2);\n    blob.l += 4;\n    var cchName = blob.read_shift(1);\n    blob.l += cchName; // TODO: stName\n    blob.l = tgt; // TODO: fmla\n    return {\n      fmt: cf\n    };\n  }\n};\nfunction parse_BIFF5Obj(blob, length, opts) {\n  blob.l += 4; //var cnt = blob.read_shift(4);\n  var ot = blob.read_shift(2);\n  var id = blob.read_shift(2);\n  var grbit = blob.read_shift(2);\n  blob.l += 2; //var colL = blob.read_shift(2);\n  blob.l += 2; //var dxL = blob.read_shift(2);\n  blob.l += 2; //var rwT = blob.read_shift(2);\n  blob.l += 2; //var dyT = blob.read_shift(2);\n  blob.l += 2; //var colR = blob.read_shift(2);\n  blob.l += 2; //var dxR = blob.read_shift(2);\n  blob.l += 2; //var rwB = blob.read_shift(2);\n  blob.l += 2; //var dyB = blob.read_shift(2);\n  blob.l += 2; //var cbMacro = blob.read_shift(2);\n  blob.l += 6;\n  length -= 36;\n  var fts = [];\n  fts.push((parse_BIFF5OT[ot] || parsenoop)(blob, length, opts));\n  return {\n    cmo: [id, ot, grbit],\n    ft: fts\n  };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n  var s = blob.l;\n  var texts = \"\";\n  try {\n    blob.l += 4;\n    var ot = (opts.lastobj || {\n      cmo: [0, 0]\n    }).cmo[1];\n    var controlInfo; // eslint-disable-line no-unused-vars\n    if ([0, 5, 7, 11, 12, 14].indexOf(ot) == -1) blob.l += 6;else controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars\n    var cchText = blob.read_shift(2);\n    /*var cbRuns = */\n    blob.read_shift(2);\n    /*var ifntEmpty = */\n    parseuint16(blob, 2);\n    var len = blob.read_shift(2);\n    blob.l += len;\n    //var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n    for (var i = 1; i < blob.lens.length - 1; ++i) {\n      if (blob.l - s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n      var hdr = blob[blob.l];\n      var t = parse_XLUnicodeStringNoCch(blob, blob.lens[i + 1] - blob.lens[i] - 1);\n      texts += t;\n      if (texts.length >= (hdr ? cchText : 2 * cchText)) break;\n    }\n    if (texts.length !== cchText && texts.length !== cchText * 2) {\n      throw new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n    }\n    blob.l = s + length;\n    /* [MS-XLS] 2.5.272 TxORuns */\n    //\tvar rgTxoRuns = [];\n    //\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n    //\tvar cchText2 = blob.read_shift(2);\n    //\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n    //\tblob.l += 6;\n    //\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n    return {\n      t: texts\n    };\n  } catch (e) {\n    blob.l = s + length;\n    return {\n      t: texts\n    };\n  }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n  var ref = parse_Ref8U(blob, 8);\n  blob.l += 16; /* CLSID */\n  var hlink = parse_Hyperlink(blob, length - 24);\n  return [ref, hlink];\n}\nfunction write_HLink(hl) {\n  var O = new_buf(24);\n  var ref = decode_cell(hl[0]);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.c);\n  O.write_shift(2, ref.c);\n  var clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n  for (var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n  return bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n  blob.read_shift(2);\n  var ref = parse_Ref8U(blob, 8);\n  var wzTooltip = blob.read_shift((length - 10) / 2, 'dbcs-cont');\n  wzTooltip = wzTooltip.replace(chr0, \"\");\n  return [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n  var TT = hl[1].Tooltip;\n  var O = new_buf(10 + 2 * (TT.length + 1));\n  O.write_shift(2, 0x0800);\n  var ref = decode_cell(hl[0]);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.c);\n  O.write_shift(2, ref.c);\n  for (var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n  O.write_shift(2, 0);\n  return O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob) /*:[string|number, string|number]*/{\n  var o = [0, 0],\n    d;\n  d = blob.read_shift(2);\n  o[0] = CountryEnum[d] || d;\n  d = blob.read_shift(2);\n  o[1] = CountryEnum[d] || d;\n  return o;\n}\nfunction write_Country(o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(2, 0x01);\n  o.write_shift(2, 0x01);\n  return o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n  var ccv = blob.read_shift(2);\n  var o = [];\n  while (ccv-- > 0) o.push(parse_LongRGB(blob, 8));\n  return o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n  var ccv = blob.read_shift(2);\n  var o = [];\n  while (ccv-- > 0) o.push(parse_LongRGB(blob, 8));\n  return o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n  blob.l += 2;\n  var o = {\n    cxfs: 0,\n    crc: 0\n  };\n  o.cxfs = blob.read_shift(2);\n  o.crc = blob.read_shift(4);\n  return o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n  if (!opts.cellStyles) return parsenoop(blob, length);\n  var w = opts && opts.biff >= 12 ? 4 : 2;\n  var colFirst = blob.read_shift(w);\n  var colLast = blob.read_shift(w);\n  var coldx = blob.read_shift(w);\n  var ixfe = blob.read_shift(w);\n  var flags = blob.read_shift(2);\n  if (w == 2) blob.l += 2;\n  var o = {\n    s: colFirst,\n    e: colLast,\n    w: coldx,\n    ixfe: ixfe,\n    flags: flags\n  } /*:any*/;\n  if (opts.biff >= 5 || !opts.biff) o.level = flags >> 8 & 0x7;\n  return o;\n}\nfunction write_ColInfo(col, idx) {\n  var o = new_buf(12);\n  o.write_shift(2, idx);\n  o.write_shift(2, idx);\n  o.write_shift(2, col.width * 256);\n  o.write_shift(2, 0);\n  var f = 0;\n  if (col.hidden) f |= 1;\n  o.write_shift(1, f);\n  f = col.level || 0;\n  o.write_shift(1, f);\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n  var o = {};\n  if (length < 32) return o;\n  blob.l += 16;\n  o.header = parse_Xnum(blob, 8);\n  o.footer = parse_Xnum(blob, 8);\n  blob.l += 2;\n  return o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n  var def = {\n    area: false\n  };\n  if (opts.biff != 5) {\n    blob.l += length;\n    return def;\n  }\n  var d = blob.read_shift(1);\n  blob.l += 3;\n  if (d & 0x10) def.area = true;\n  return def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n /*:number*/) {\n  var out = new_buf(2 * n);\n  for (var i = 0; i < n; ++i) out.write_shift(2, i + 1);\n  return out;\n}\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n  var cf = blob.read_shift(2);\n  var env = blob.read_shift(2);\n  var lcb = blob.read_shift(4);\n  var o = {\n    fmt: cf,\n    env: env,\n    len: lcb,\n    data: blob.slice(blob.l, blob.l + lcb)\n  };\n  blob.l += lcb;\n  return o;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 5) opts.biff = 2;\n  var cell = parse_XLSCell(blob, 6);\n  ++blob.l;\n  var str = parse_XLUnicodeString2(blob, length - 7, opts);\n  cell.t = 'str';\n  cell.val = str;\n  return cell;\n}\nfunction parse_BIFF2NUM(blob /*::, length*/) {\n  var cell = parse_XLSCell(blob, 6);\n  ++blob.l;\n  var num = parse_Xnum(blob, 8);\n  cell.t = 'n';\n  cell.val = num;\n  return cell;\n}\nfunction write_BIFF2NUM(r /*:number*/, c /*:number*/, val /*:number*/) {\n  var out = new_buf(15);\n  write_BIFF2Cell(out, r, c);\n  out.write_shift(8, val, 'f');\n  return out;\n}\nfunction parse_BIFF2INT(blob) {\n  var cell = parse_XLSCell(blob, 6);\n  ++blob.l;\n  var num = blob.read_shift(2);\n  cell.t = 'n';\n  cell.val = num;\n  return cell;\n}\nfunction write_BIFF2INT(r /*:number*/, c /*:number*/, val /*:number*/) {\n  var out = new_buf(9);\n  write_BIFF2Cell(out, r, c);\n  out.write_shift(2, val);\n  return out;\n}\nfunction parse_BIFF2STRING(blob) {\n  var cch = blob.read_shift(1);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return blob.read_shift(cch, 'sbcs-cont');\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n  blob.l += 6; // unknown\n  blob.l += 2; // font weight \"bls\"\n  blob.l += 1; // charset\n  blob.l += 3; // unknown\n  blob.l += 1; // font family\n  blob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n  var end = blob.l + length;\n  var cell = parse_XLSCell(blob, 6);\n  var cch = blob.read_shift(2);\n  var str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n  blob.l = end;\n  cell.t = 'str';\n  cell.val = str;\n  return cell;\n}\n/* from js-harb (C) 2014-present  SheetJS */\nvar DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\nvar DBF = /*#__PURE__*/function () {\n  var dbf_codepage_map = {\n    /* Code Pages Supported by Visual FoxPro */\n    /*::[*/0x01 /*::]*/: 437,\n    /*::[*/0x02 /*::]*/: 850,\n    /*::[*/0x03 /*::]*/: 1252,\n    /*::[*/0x04 /*::]*/: 10000,\n    /*::[*/0x64 /*::]*/: 852,\n    /*::[*/0x65 /*::]*/: 866,\n    /*::[*/0x66 /*::]*/: 865,\n    /*::[*/0x67 /*::]*/: 861,\n    /*::[*/0x68 /*::]*/: 895,\n    /*::[*/0x69 /*::]*/: 620,\n    /*::[*/0x6A /*::]*/: 737,\n    /*::[*/0x6B /*::]*/: 857,\n    /*::[*/0x78 /*::]*/: 950,\n    /*::[*/0x79 /*::]*/: 949,\n    /*::[*/0x7A /*::]*/: 936,\n    /*::[*/0x7B /*::]*/: 932,\n    /*::[*/0x7C /*::]*/: 874,\n    /*::[*/0x7D /*::]*/: 1255,\n    /*::[*/0x7E /*::]*/: 1256,\n    /*::[*/0x96 /*::]*/: 10007,\n    /*::[*/0x97 /*::]*/: 10029,\n    /*::[*/0x98 /*::]*/: 10006,\n    /*::[*/0xC8 /*::]*/: 1250,\n    /*::[*/0xC9 /*::]*/: 1251,\n    /*::[*/0xCA /*::]*/: 1254,\n    /*::[*/0xCB /*::]*/: 1253,\n    /* shapefile DBF extension */\n    /*::[*/0x00 /*::]*/: 20127,\n    /*::[*/0x08 /*::]*/: 865,\n    /*::[*/0x09 /*::]*/: 437,\n    /*::[*/0x0A /*::]*/: 850,\n    /*::[*/0x0B /*::]*/: 437,\n    /*::[*/0x0D /*::]*/: 437,\n    /*::[*/0x0E /*::]*/: 850,\n    /*::[*/0x0F /*::]*/: 437,\n    /*::[*/0x10 /*::]*/: 850,\n    /*::[*/0x11 /*::]*/: 437,\n    /*::[*/0x12 /*::]*/: 850,\n    /*::[*/0x13 /*::]*/: 932,\n    /*::[*/0x14 /*::]*/: 850,\n    /*::[*/0x15 /*::]*/: 437,\n    /*::[*/0x16 /*::]*/: 850,\n    /*::[*/0x17 /*::]*/: 865,\n    /*::[*/0x18 /*::]*/: 437,\n    /*::[*/0x19 /*::]*/: 437,\n    /*::[*/0x1A /*::]*/: 850,\n    /*::[*/0x1B /*::]*/: 437,\n    /*::[*/0x1C /*::]*/: 863,\n    /*::[*/0x1D /*::]*/: 850,\n    /*::[*/0x1F /*::]*/: 852,\n    /*::[*/0x22 /*::]*/: 852,\n    /*::[*/0x23 /*::]*/: 852,\n    /*::[*/0x24 /*::]*/: 860,\n    /*::[*/0x25 /*::]*/: 850,\n    /*::[*/0x26 /*::]*/: 866,\n    /*::[*/0x37 /*::]*/: 850,\n    /*::[*/0x40 /*::]*/: 852,\n    /*::[*/0x4D /*::]*/: 936,\n    /*::[*/0x4E /*::]*/: 949,\n    /*::[*/0x4F /*::]*/: 950,\n    /*::[*/0x50 /*::]*/: 874,\n    /*::[*/0x57 /*::]*/: 1252,\n    /*::[*/0x58 /*::]*/: 1252,\n    /*::[*/0x59 /*::]*/: 1252,\n    /*::[*/0x6C /*::]*/: 863,\n    /*::[*/0x86 /*::]*/: 737,\n    /*::[*/0x87 /*::]*/: 852,\n    /*::[*/0x88 /*::]*/: 857,\n    /*::[*/0xCC /*::]*/: 1257,\n    /*::[*/0xFF /*::]*/: 16969\n  };\n  var dbf_reverse_map = evert({\n    /*::[*/0x01 /*::]*/: 437,\n    /*::[*/0x02 /*::]*/: 850,\n    /*::[*/0x03 /*::]*/: 1252,\n    /*::[*/0x04 /*::]*/: 10000,\n    /*::[*/0x64 /*::]*/: 852,\n    /*::[*/0x65 /*::]*/: 866,\n    /*::[*/0x66 /*::]*/: 865,\n    /*::[*/0x67 /*::]*/: 861,\n    /*::[*/0x68 /*::]*/: 895,\n    /*::[*/0x69 /*::]*/: 620,\n    /*::[*/0x6A /*::]*/: 737,\n    /*::[*/0x6B /*::]*/: 857,\n    /*::[*/0x78 /*::]*/: 950,\n    /*::[*/0x79 /*::]*/: 949,\n    /*::[*/0x7A /*::]*/: 936,\n    /*::[*/0x7B /*::]*/: 932,\n    /*::[*/0x7C /*::]*/: 874,\n    /*::[*/0x7D /*::]*/: 1255,\n    /*::[*/0x7E /*::]*/: 1256,\n    /*::[*/0x96 /*::]*/: 10007,\n    /*::[*/0x97 /*::]*/: 10029,\n    /*::[*/0x98 /*::]*/: 10006,\n    /*::[*/0xC8 /*::]*/: 1250,\n    /*::[*/0xC9 /*::]*/: 1251,\n    /*::[*/0xCA /*::]*/: 1254,\n    /*::[*/0xCB /*::]*/: 1253,\n    /*::[*/0x00 /*::]*/: 20127\n  });\n  /* TODO: find an actual specification */\n  function dbf_to_aoa(buf, opts) /*:AOA*/{\n    var out /*:AOA*/ = [];\n    var d /*:Block*/ = new_raw_buf(1) /*:any*/;\n    switch (opts.type) {\n      case 'base64':\n        d = s2a(Base64_decode(buf));\n        break;\n      case 'binary':\n        d = s2a(buf);\n        break;\n      case 'buffer':\n      case 'array':\n        d = buf;\n        break;\n    }\n    prep_blob(d, 0);\n\n    /* header */\n    var ft = d.read_shift(1);\n    var memo = !!(ft & 0x88);\n    var vfp = false,\n      l7 = false;\n    switch (ft) {\n      case 0x02:\n        break;\n      // dBASE II\n      case 0x03:\n        break;\n      // dBASE III\n      case 0x30:\n        vfp = true;\n        memo = true;\n        break;\n      // VFP\n      case 0x31:\n        vfp = true;\n        memo = true;\n        break;\n      // VFP with autoincrement\n      // 0x43 dBASE IV SQL table files\n      // 0x63 dBASE IV SQL system files\n      case 0x83:\n        break;\n      // dBASE III with memo\n      case 0x8B:\n        break;\n      // dBASE IV with memo\n      case 0x8C:\n        l7 = true;\n        break;\n      // dBASE Level 7 with memo\n      // case 0xCB dBASE IV SQL table files with memo\n      case 0xF5:\n        break;\n      // FoxPro 2.x with memo\n      // case 0xFB FoxBASE\n      default:\n        throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n    }\n    var nrow = 0,\n      fpos = 0x0209;\n    if (ft == 0x02) nrow = d.read_shift(2);\n    d.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n    if (ft != 0x02) nrow = d.read_shift(4);\n    if (nrow > 1048576) nrow = 1e6;\n    if (ft != 0x02) fpos = d.read_shift(2); // header length\n    var rlen = d.read_shift(2); // record length\n\n    var /*flags = 0,*/current_cp = opts.codepage || 1252;\n    if (ft != 0x02) {\n      // 20 reserved bytes\n      d.l += 16;\n      /*flags = */\n      d.read_shift(1);\n      //if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n      /* codepage present in FoxPro and dBASE Level 7 */\n      if (d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n      d.l += 1;\n      d.l += 2;\n    }\n    if (l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n    /*:: type DBFField = { name:string; len:number; type:string; } */\n    var fields /*:Array<DBFField>*/ = [],\n      field /*:DBFField*/ = {} /*:any*/;\n    var hend = Math.min(d.length, ft == 0x02 ? 0x209 : fpos - 10 - (vfp ? 264 : 0));\n    var ww = l7 ? 32 : 11;\n    while (d.l < hend && d[d.l] != 0x0d) {\n      field = {} /*:any*/;\n      field.name = $cptable.utils.decode(current_cp, d.slice(d.l, d.l + ww)).replace(/[\\u0000\\r\\n].*$/g, \"\");\n      d.l += ww;\n      field.type = String.fromCharCode(d.read_shift(1));\n      if (ft != 0x02 && !l7) field.offset = d.read_shift(4);\n      field.len = d.read_shift(1);\n      if (ft == 0x02) field.offset = d.read_shift(2);\n      field.dec = d.read_shift(1);\n      if (field.name.length) fields.push(field);\n      if (ft != 0x02) d.l += l7 ? 13 : 14;\n      switch (field.type) {\n        case 'B':\n          // Double (VFP) / Binary (dBASE L7)\n          if ((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n          break;\n        case 'G': // General (FoxPro and dBASE L7)\n        case 'P':\n          // Picture (FoxPro and dBASE L7)\n          if (opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n          break;\n        case '+': // Autoincrement (dBASE L7 only)\n        case '0': // _NullFlags (VFP only)\n        case '@': // Timestamp (dBASE L7 only)\n        case 'C': // Character (dBASE II)\n        case 'D': // Date (dBASE III)\n        case 'F': // Float (dBASE IV)\n        case 'I': // Long (VFP and dBASE L7)\n        case 'L': // Logical (dBASE II)\n        case 'M': // Memo (dBASE III)\n        case 'N': // Number (dBASE II)\n        case 'O': // Double (dBASE L7 only)\n        case 'T': // Datetime (VFP only)\n        case 'Y':\n          // Currency (VFP only)\n          break;\n        default:\n          throw new Error('Unknown Field Type: ' + field.type);\n      }\n    }\n    if (d[d.l] !== 0x0D) d.l = fpos - 1;\n    if (d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n    d.l = fpos;\n\n    /* data */\n    var R = 0,\n      C = 0;\n    out[0] = [];\n    for (C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n    while (nrow-- > 0) {\n      if (d[d.l] === 0x2A) {\n        // TODO: record marked as deleted -- create a hidden row?\n        d.l += rlen;\n        continue;\n      }\n      ++d.l;\n      out[++R] = [];\n      C = 0;\n      for (C = 0; C != fields.length; ++C) {\n        var dd = d.slice(d.l, d.l + fields[C].len);\n        d.l += fields[C].len;\n        prep_blob(dd, 0);\n        var s = $cptable.utils.decode(current_cp, dd);\n        switch (fields[C].type) {\n          case 'C':\n            // NOTE: it is conventional to write '  /  /  ' for empty dates\n            if (s.trim().length) out[R][C] = s.replace(/\\s+$/, \"\");\n            break;\n          case 'D':\n            if (s.length === 8) out[R][C] = new Date(+s.slice(0, 4), +s.slice(4, 6) - 1, +s.slice(6, 8));else out[R][C] = s;\n            break;\n          case 'F':\n            out[R][C] = parseFloat(s.trim());\n            break;\n          case '+':\n          case 'I':\n            out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i');\n            break;\n          case 'L':\n            switch (s.trim().toUpperCase()) {\n              case 'Y':\n              case 'T':\n                out[R][C] = true;\n                break;\n              case 'N':\n              case 'F':\n                out[R][C] = false;\n                break;\n              case '':\n              case '?':\n                break;\n              default:\n                throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n            }\n            break;\n          case 'M':\n            /* TODO: handle memo files */\n            if (!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n            out[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10) : dd.read_shift(4));\n            break;\n          case 'N':\n            s = s.replace(/\\u0000/g, \"\").trim();\n            // NOTE: dBASE II interprets \"  .  \" as 0\n            if (s && s != \".\") out[R][C] = +s || 0;\n            break;\n          case '@':\n            // NOTE: dBASE specs appear to be incorrect\n            out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n            break;\n          case 'T':\n            out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4));\n            break;\n          case 'Y':\n            out[R][C] = dd.read_shift(4, 'i') / 1e4 + dd.read_shift(4, 'i') / 1e4 * Math.pow(2, 32);\n            break;\n          case 'O':\n            out[R][C] = -dd.read_shift(-8, 'f');\n            break;\n          case 'B':\n            if (vfp && fields[C].len == 8) {\n              out[R][C] = dd.read_shift(8, 'f');\n              break;\n            }\n          /* falls through */\n          case 'G':\n          case 'P':\n            dd.l += fields[C].len;\n            break;\n          case '0':\n            if (fields[C].name === '_NullFlags') break;\n          /* falls through */\n          default:\n            throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n        }\n      }\n    }\n    if (ft != 0x02) if (d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l - 1) + \" of \" + d.length + \" \" + d[d.l - 1].toString(16));\n    if (opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n    opts.DBF = fields;\n    return out;\n  }\n  function dbf_to_sheet(buf, opts) /*:Worksheet*/{\n    var o = opts || {};\n    if (!o.dateNF) o.dateNF = \"yyyymmdd\";\n    var ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);\n    ws[\"!cols\"] = o.DBF.map(function (field) {\n      return {\n        wch: field.len,\n        DBF: field\n      };\n    });\n    delete o.DBF;\n    return ws;\n  }\n  function dbf_to_workbook(buf, opts) /*:Workbook*/{\n    try {\n      return sheet_to_workbook(dbf_to_sheet(buf, opts), opts);\n    } catch (e) {\n      if (opts && opts.WTF) throw e;\n    }\n    return {\n      SheetNames: [],\n      Sheets: {}\n    };\n  }\n  var _RLEN = {\n    'B': 8,\n    'C': 250,\n    'L': 1,\n    'D': 8,\n    '?': 0,\n    '': 0\n  };\n  function sheet_to_dbf(ws /*:Worksheet*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n    var ba = buf_array();\n    var aoa /*:AOA*/ = sheet_to_json(ws, {\n      header: 1,\n      raw: true,\n      cellDates: true\n    });\n    var headers = aoa[0],\n      data = aoa.slice(1),\n      cols = ws[\"!cols\"] || [];\n    var i = 0,\n      j = 0,\n      hcnt = 0,\n      rlen = 1;\n    for (i = 0; i < headers.length; ++i) {\n      if (((cols[i] || {}).DBF || {}).name) {\n        headers[i] = cols[i].DBF.name;\n        ++hcnt;\n        continue;\n      }\n      if (headers[i] == null) continue;\n      ++hcnt;\n      if (typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n      if (typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + typeof headers[i] + \"|\");\n      if (headers.indexOf(headers[i]) !== i) for (j = 0; j < 1024; ++j) if (headers.indexOf(headers[i] + \"_\" + j) == -1) {\n        headers[i] += \"_\" + j;\n        break;\n      }\n    }\n    var range = safe_decode_range(ws['!ref']);\n    var coltypes /*:Array<string>*/ = [];\n    var colwidths /*:Array<number>*/ = [];\n    var coldecimals /*:Array<number>*/ = [];\n    for (i = 0; i <= range.e.c - range.s.c; ++i) {\n      var guess = '',\n        _guess = '',\n        maxlen = 0;\n      var col /*:Array<any>*/ = [];\n      for (j = 0; j < data.length; ++j) {\n        if (data[j][i] != null) col.push(data[j][i]);\n      }\n      if (col.length == 0 || headers[i] == null) {\n        coltypes[i] = '?';\n        continue;\n      }\n      for (j = 0; j < col.length; ++j) {\n        switch (typeof col[j]) {\n          /* TODO: check if L2 compat is desired */\n          case 'number':\n            _guess = 'B';\n            break;\n          case 'string':\n            _guess = 'C';\n            break;\n          case 'boolean':\n            _guess = 'L';\n            break;\n          case 'object':\n            _guess = col[j] instanceof Date ? 'D' : 'C';\n            break;\n          default:\n            _guess = 'C';\n        }\n        maxlen = Math.max(maxlen, String(col[j]).length);\n        guess = guess && guess != _guess ? 'C' : _guess;\n        //if(guess == 'C') break;\n      }\n      if (maxlen > 250) maxlen = 250;\n      _guess = ((cols[i] || {}).DBF || {}).type;\n      /* TODO: more fine grained control over DBF type resolution */\n      if (_guess == 'C') {\n        if (cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;\n      }\n      if (guess == 'B' && _guess == 'N') {\n        guess = 'N';\n        coldecimals[i] = cols[i].DBF.dec;\n        maxlen = cols[i].DBF.len;\n      }\n      colwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : _RLEN[guess] || 0;\n      rlen += colwidths[i];\n      coltypes[i] = guess;\n    }\n    var h = ba.next(32);\n    h.write_shift(4, 0x13021130);\n    h.write_shift(4, data.length);\n    h.write_shift(2, 296 + 32 * hcnt);\n    h.write_shift(2, rlen);\n    for (i = 0; i < 4; ++i) h.write_shift(4, 0);\n    h.write_shift(4, 0x00000000 | (+dbf_reverse_map[/*::String(*/current_ansi /*::)*/] || 0x03) << 8);\n    for (i = 0, j = 0; i < headers.length; ++i) {\n      if (headers[i] == null) continue;\n      var hf = ba.next(32);\n      var _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n      hf.write_shift(1, _f, \"sbcs\");\n      hf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n      hf.write_shift(4, j);\n      hf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);\n      hf.write_shift(1, coldecimals[i] || 0);\n      hf.write_shift(1, 0x02);\n      hf.write_shift(4, 0);\n      hf.write_shift(1, 0);\n      hf.write_shift(4, 0);\n      hf.write_shift(4, 0);\n      j += colwidths[i] || _RLEN[coltypes[i]] || 0;\n    }\n    var hb = ba.next(264);\n    hb.write_shift(4, 0x0000000D);\n    for (i = 0; i < 65; ++i) hb.write_shift(4, 0x00000000);\n    for (i = 0; i < data.length; ++i) {\n      var rout = ba.next(rlen);\n      rout.write_shift(1, 0);\n      for (j = 0; j < headers.length; ++j) {\n        if (headers[j] == null) continue;\n        switch (coltypes[j]) {\n          case 'L':\n            rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46);\n            break;\n          case 'B':\n            rout.write_shift(8, data[i][j] || 0, 'f');\n            break;\n          case 'N':\n            var _n = \"0\";\n            if (typeof data[i][j] == \"number\") _n = data[i][j].toFixed(coldecimals[j] || 0);\n            for (hcnt = 0; hcnt < colwidths[j] - _n.length; ++hcnt) rout.write_shift(1, 0x20);\n            rout.write_shift(1, _n, \"sbcs\");\n            break;\n          case 'D':\n            if (!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");else {\n              rout.write_shift(4, (\"0000\" + data[i][j].getFullYear()).slice(-4), \"sbcs\");\n              rout.write_shift(2, (\"00\" + (data[i][j].getMonth() + 1)).slice(-2), \"sbcs\");\n              rout.write_shift(2, (\"00\" + data[i][j].getDate()).slice(-2), \"sbcs\");\n            }\n            break;\n          case 'C':\n            var _s = String(data[i][j] != null ? data[i][j] : \"\").slice(0, colwidths[j]);\n            rout.write_shift(1, _s, \"sbcs\");\n            for (hcnt = 0; hcnt < colwidths[j] - _s.length; ++hcnt) rout.write_shift(1, 0x20);\n            break;\n        }\n      }\n      // data\n    }\n    ba.next(1).write_shift(1, 0x1A);\n    return ba.end();\n  }\n  return {\n    to_workbook: dbf_to_workbook,\n    to_sheet: dbf_to_sheet,\n    from_sheet: sheet_to_dbf\n  };\n}();\nvar SYLK = /*#__PURE__*/function () {\n  /* TODO: stress test sequences */\n  var sylk_escapes = {\n    AA: 'À',\n    BA: 'Á',\n    CA: 'Â',\n    DA: 195,\n    HA: 'Ä',\n    JA: 197,\n    AE: 'È',\n    BE: 'É',\n    CE: 'Ê',\n    HE: 'Ë',\n    AI: 'Ì',\n    BI: 'Í',\n    CI: 'Î',\n    HI: 'Ï',\n    AO: 'Ò',\n    BO: 'Ó',\n    CO: 'Ô',\n    DO: 213,\n    HO: 'Ö',\n    AU: 'Ù',\n    BU: 'Ú',\n    CU: 'Û',\n    HU: 'Ü',\n    Aa: 'à',\n    Ba: 'á',\n    Ca: 'â',\n    Da: 227,\n    Ha: 'ä',\n    Ja: 229,\n    Ae: 'è',\n    Be: 'é',\n    Ce: 'ê',\n    He: 'ë',\n    Ai: 'ì',\n    Bi: 'í',\n    Ci: 'î',\n    Hi: 'ï',\n    Ao: 'ò',\n    Bo: 'ó',\n    Co: 'ô',\n    Do: 245,\n    Ho: 'ö',\n    Au: 'ù',\n    Bu: 'ú',\n    Cu: 'û',\n    Hu: 'ü',\n    KC: 'Ç',\n    Kc: 'ç',\n    q: 'æ',\n    z: 'œ',\n    a: 'Æ',\n    j: 'Œ',\n    DN: 209,\n    Dn: 241,\n    Hy: 255,\n    S: 169,\n    c: 170,\n    R: 174,\n    \"B \": 180,\n    /*::[*/0 /*::]*/: 176,\n    /*::[*/1 /*::]*/: 177,\n    /*::[*/2 /*::]*/: 178,\n    /*::[*/3 /*::]*/: 179,\n    /*::[*/5 /*::]*/: 181,\n    /*::[*/6 /*::]*/: 182,\n    /*::[*/7 /*::]*/: 183,\n    Q: 185,\n    k: 186,\n    b: 208,\n    i: 216,\n    l: 222,\n    s: 240,\n    y: 248,\n    \"!\": 161,\n    '\"': 162,\n    \"#\": 163,\n    \"(\": 164,\n    \"%\": 165,\n    \"'\": 167,\n    \"H \": 168,\n    \"+\": 171,\n    \";\": 187,\n    \"<\": 188,\n    \"=\": 189,\n    \">\": 190,\n    \"?\": 191,\n    \"{\": 223\n  } /*:any*/;\n  var sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g, \"\\\\$1\") + \"|\\\\|)\", \"gm\");\n  var sylk_char_fn = function (_, $1) {\n    var o = sylk_escapes[$1];\n    return typeof o == \"number\" ? _getansi(o) : o;\n  };\n  var decode_sylk_char = function ($$, $1, $2) {\n    var newcc = $1.charCodeAt(0) - 0x20 << 4 | $2.charCodeAt(0) - 0x30;\n    return newcc == 59 ? $$ : _getansi(newcc);\n  };\n  sylk_escapes[\"|\"] = 254;\n  /* TODO: find an actual specification */\n  function sylk_to_aoa(d /*:RawData*/, opts) /*:[AOA, Worksheet]*/{\n    switch (opts.type) {\n      case 'base64':\n        return sylk_to_aoa_str(Base64_decode(d), opts);\n      case 'binary':\n        return sylk_to_aoa_str(d, opts);\n      case 'buffer':\n        return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n      case 'array':\n        return sylk_to_aoa_str(cc2str(d), opts);\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n  function sylk_to_aoa_str(str /*:string*/, opts) /*:[AOA, Worksheet]*/{\n    var records = str.split(/[\\n\\r]+/),\n      R = -1,\n      C = -1,\n      ri = 0,\n      rj = 0,\n      arr /*:AOA*/ = [];\n    var formats /*:Array<string>*/ = [];\n    var next_cell_format /*:string|null*/ = null;\n    var sht = {},\n      rowinfo /*:Array<RowInfo>*/ = [],\n      colinfo /*:Array<ColInfo>*/ = [],\n      cw /*:Array<string>*/ = [];\n    var Mval = 0,\n      j;\n    if (+opts.codepage >= 0) set_cp(+opts.codepage);\n    for (; ri !== records.length; ++ri) {\n      Mval = 0;\n      var rstr = records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n      var record = rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function (x) {\n        return x.replace(/\\u0000/g, \";\");\n      });\n      var RT = record[0],\n        val;\n      if (rstr.length > 0) switch (RT) {\n        case 'ID':\n          break;\n        /* header */\n        case 'E':\n          break;\n        /* EOF */\n        case 'B':\n          break;\n        /* dimensions */\n        case 'O':\n          break;\n        /* options? */\n        case 'W':\n          break;\n        /* window? */\n        case 'P':\n          if (record[1].charAt(0) == 'P') formats.push(rstr.slice(3).replace(/;;/g, \";\"));\n          break;\n        case 'C':\n          var C_seen_K = false,\n            C_seen_X = false,\n            C_seen_S = false,\n            C_seen_E = false,\n            _R = -1,\n            _C = -1;\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'A':\n              break;\n            // TODO: comment\n            case 'X':\n              C = parseInt(record[rj].slice(1)) - 1;\n              C_seen_X = true;\n              break;\n            case 'Y':\n              R = parseInt(record[rj].slice(1)) - 1;\n              if (!C_seen_X) C = 0;\n              for (j = arr.length; j <= R; ++j) arr[j] = [];\n              break;\n            case 'K':\n              val = record[rj].slice(1);\n              if (val.charAt(0) === '\"') val = val.slice(1, val.length - 1);else if (val === 'TRUE') val = true;else if (val === 'FALSE') val = false;else if (!isNaN(fuzzynum(val))) {\n                val = fuzzynum(val);\n                if (next_cell_format !== null && fmt_is_date(next_cell_format)) val = numdate(val);\n              } else if (!isNaN(fuzzydate(val).getDate())) {\n                val = parseDate(val);\n              }\n              if (typeof $cptable !== 'undefined' && typeof val == \"string\" && (opts || {}).type != \"string\" && (opts || {}).codepage) val = $cptable.utils.decode(opts.codepage, val);\n              C_seen_K = true;\n              break;\n            case 'E':\n              C_seen_E = true;\n              var formula = rc_to_a1(record[rj].slice(1), {\n                r: R,\n                c: C\n              });\n              arr[R][C] = [arr[R][C], formula];\n              break;\n            case 'S':\n              C_seen_S = true;\n              arr[R][C] = [arr[R][C], \"S5S\"];\n              break;\n            case 'G':\n              break;\n            // unknown\n            case 'R':\n              _R = parseInt(record[rj].slice(1)) - 1;\n              break;\n            case 'C':\n              _C = parseInt(record[rj].slice(1)) - 1;\n              break;\n            default:\n              if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n          }\n          if (C_seen_K) {\n            if (arr[R][C] && arr[R][C].length == 2) arr[R][C][0] = val;else arr[R][C] = val;\n            next_cell_format = null;\n          }\n          if (C_seen_S) {\n            if (C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n            var shrbase = _R > -1 && arr[_R][_C];\n            if (!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n            arr[R][C][1] = shift_formula_str(shrbase[1], {\n              r: R - _R,\n              c: C - _C\n            });\n          }\n          break;\n        case 'F':\n          var F_seen = 0;\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'X':\n              C = parseInt(record[rj].slice(1)) - 1;\n              ++F_seen;\n              break;\n            case 'Y':\n              R = parseInt(record[rj].slice(1)) - 1; /*C = 0;*/\n              for (j = arr.length; j <= R; ++j) arr[j] = [];\n              break;\n            case 'M':\n              Mval = parseInt(record[rj].slice(1)) / 20;\n              break;\n            case 'F':\n              break;\n            /* ??? */\n            case 'G':\n              break;\n            /* hide grid */\n            case 'P':\n              next_cell_format = formats[parseInt(record[rj].slice(1))];\n              break;\n            case 'S':\n              break;\n            /* cell style */\n            case 'D':\n              break;\n            /* column */\n            case 'N':\n              break;\n            /* font */\n            case 'W':\n              cw = record[rj].slice(1).split(\" \");\n              for (j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n                Mval = parseInt(cw[2], 10);\n                colinfo[j - 1] = Mval === 0 ? {\n                  hidden: true\n                } : {\n                  wch: Mval\n                };\n                process_col(colinfo[j - 1]);\n              }\n              break;\n            case 'C':\n              /* default column format */\n              C = parseInt(record[rj].slice(1)) - 1;\n              if (!colinfo[C]) colinfo[C] = {};\n              break;\n            case 'R':\n              /* row properties */\n              R = parseInt(record[rj].slice(1)) - 1;\n              if (!rowinfo[R]) rowinfo[R] = {};\n              if (Mval > 0) {\n                rowinfo[R].hpt = Mval;\n                rowinfo[R].hpx = pt2px(Mval);\n              } else if (Mval === 0) rowinfo[R].hidden = true;\n              break;\n            default:\n              if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n          }\n          if (F_seen < 1) next_cell_format = null;\n          break;\n        default:\n          if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n      }\n    }\n    if (rowinfo.length > 0) sht['!rows'] = rowinfo;\n    if (colinfo.length > 0) sht['!cols'] = colinfo;\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return [arr, sht];\n  }\n  function sylk_to_sheet(d /*:RawData*/, opts) /*:Worksheet*/{\n    var aoasht = sylk_to_aoa(d, opts);\n    var aoa = aoasht[0],\n      ws = aoasht[1];\n    var o = aoa_to_sheet(aoa, opts);\n    keys(ws).forEach(function (k) {\n      o[k] = ws[k];\n    });\n    return o;\n  }\n  function sylk_to_workbook(d /*:RawData*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(sylk_to_sheet(d, opts), opts);\n  }\n  function write_ws_cell_sylk(cell /*:Cell*/, ws /*:Worksheet*/, R /*:number*/, C /*:number*/ /*::, opts*/) /*:string*/{\n    var o = \"C;Y\" + (R + 1) + \";X\" + (C + 1) + \";K\";\n    switch (cell.t) {\n      case 'n':\n        o += cell.v || 0;\n        if (cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {\n          r: R,\n          c: C\n        });\n        break;\n      case 'b':\n        o += cell.v ? \"TRUE\" : \"FALSE\";\n        break;\n      case 'e':\n        o += cell.w || cell.v;\n        break;\n      case 'd':\n        o += '\"' + (cell.w || cell.v) + '\"';\n        break;\n      case 's':\n        o += '\"' + cell.v.replace(/\"/g, \"\").replace(/;/g, \";;\") + '\"';\n        break;\n    }\n    return o;\n  }\n  function write_ws_cols_sylk(out, cols) {\n    cols.forEach(function (col, i) {\n      var rec = \"F;W\" + (i + 1) + \" \" + (i + 1) + \" \";\n      if (col.hidden) rec += \"0\";else {\n        if (typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n        if (typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n        if (typeof col.wch == 'number') rec += Math.round(col.wch);\n      }\n      if (rec.charAt(rec.length - 1) != \" \") out.push(rec);\n    });\n  }\n  function write_ws_rows_sylk(out /*:Array<string>*/, rows /*:Array<RowInfo>*/) {\n    rows.forEach(function (row, i) {\n      var rec = \"F;\";\n      if (row.hidden) rec += \"M0;\";else if (row.hpt) rec += \"M\" + 20 * row.hpt + \";\";else if (row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n      if (rec.length > 2) out.push(rec + \"R\" + (i + 1));\n    });\n  }\n  function sheet_to_sylk(ws /*:Worksheet*/, opts /*:?any*/) /*:string*/{\n    var preamble /*:Array<string>*/ = [\"ID;PWXL;N;E\"],\n      o /*:Array<string>*/ = [];\n    var r = safe_decode_range(ws['!ref']),\n      cell /*:Cell*/;\n    var dense = Array.isArray(ws);\n    var RS = \"\\r\\n\";\n    preamble.push(\"P;PGeneral\");\n    preamble.push(\"F;P0;DG0G8;M255\");\n    if (ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n    if (ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n    preamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c, r.s.r, r.e.c, r.e.r].join(\" \"));\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        var coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null && (!cell.f || cell.F)) continue;\n        o.push(write_ws_cell_sylk(cell, ws, R, C, opts));\n      }\n    }\n    return preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n  }\n  return {\n    to_workbook: sylk_to_workbook,\n    to_sheet: sylk_to_sheet,\n    from_sheet: sheet_to_sylk\n  };\n}();\nvar DIF = /*#__PURE__*/function () {\n  function dif_to_aoa(d /*:RawData*/, opts) /*:AOA*/{\n    switch (opts.type) {\n      case 'base64':\n        return dif_to_aoa_str(Base64_decode(d), opts);\n      case 'binary':\n        return dif_to_aoa_str(d, opts);\n      case 'buffer':\n        return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n      case 'array':\n        return dif_to_aoa_str(cc2str(d), opts);\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n  function dif_to_aoa_str(str /*:string*/, opts) /*:AOA*/{\n    var records = str.split('\\n'),\n      R = -1,\n      C = -1,\n      ri = 0,\n      arr /*:AOA*/ = [];\n    for (; ri !== records.length; ++ri) {\n      if (records[ri].trim() === 'BOT') {\n        arr[++R] = [];\n        C = 0;\n        continue;\n      }\n      if (R < 0) continue;\n      var metadata = records[ri].trim().split(\",\");\n      var type = metadata[0],\n        value = metadata[1];\n      ++ri;\n      var data = records[ri] || \"\";\n      while ((data.match(/[\"]/g) || []).length & 1 && ri < records.length - 1) data += \"\\n\" + records[++ri];\n      data = data.trim();\n      switch (+type) {\n        case -1:\n          if (data === 'BOT') {\n            arr[++R] = [];\n            C = 0;\n            continue;\n          } else if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n          break;\n        case 0:\n          if (data === 'TRUE') arr[R][C] = true;else if (data === 'FALSE') arr[R][C] = false;else if (!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);else if (!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);else arr[R][C] = value;\n          ++C;\n          break;\n        case 1:\n          data = data.slice(1, data.length - 1);\n          data = data.replace(/\"\"/g, '\"');\n          if (DIF_XL && data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n          arr[R][C++] = data !== '' ? data : null;\n          break;\n      }\n      if (data === 'EOD') break;\n    }\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return arr;\n  }\n  function dif_to_sheet(str /*:string*/, opts) /*:Worksheet*/{\n    return aoa_to_sheet(dif_to_aoa(str, opts), opts);\n  }\n  function dif_to_workbook(str /*:string*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(dif_to_sheet(str, opts), opts);\n  }\n  var sheet_to_dif = /*#__PURE__*/function () {\n    var push_field = function pf(o /*:Array<string>*/, topic /*:string*/, v /*:number*/, n /*:number*/, s /*:string*/) {\n      o.push(topic);\n      o.push(v + \",\" + n);\n      o.push('\"' + s.replace(/\"/g, '\"\"') + '\"');\n    };\n    var push_value = function po(o /*:Array<string>*/, type /*:number*/, v /*:any*/, s /*:string*/) {\n      o.push(type + \",\" + v);\n      o.push(type == 1 ? '\"' + s.replace(/\"/g, '\"\"') + '\"' : s);\n    };\n    return function sheet_to_dif(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n      var o /*:Array<string>*/ = [];\n      var r = safe_decode_range(ws['!ref']),\n        cell /*:Cell*/;\n      var dense = Array.isArray(ws);\n      push_field(o, \"TABLE\", 0, 1, \"sheetjs\");\n      push_field(o, \"VECTORS\", 0, r.e.r - r.s.r + 1, \"\");\n      push_field(o, \"TUPLES\", 0, r.e.c - r.s.c + 1, \"\");\n      push_field(o, \"DATA\", 0, 0, \"\");\n      for (var R = r.s.r; R <= r.e.r; ++R) {\n        push_value(o, -1, 0, \"BOT\");\n        for (var C = r.s.c; C <= r.e.c; ++C) {\n          var coord = encode_cell({\n            r: R,\n            c: C\n          });\n          cell = dense ? (ws[R] || [])[C] : ws[coord];\n          if (!cell) {\n            push_value(o, 1, 0, \"\");\n            continue;\n          }\n          switch (cell.t) {\n            case 'n':\n              var val = DIF_XL ? cell.w : cell.v;\n              if (!val && cell.v != null) val = cell.v;\n              if (val == null) {\n                if (DIF_XL && cell.f && !cell.F) push_value(o, 1, 0, \"=\" + cell.f);else push_value(o, 1, 0, \"\");\n              } else push_value(o, 0, val, \"V\");\n              break;\n            case 'b':\n              push_value(o, 0, cell.v ? 1 : 0, cell.v ? \"TRUE\" : \"FALSE\");\n              break;\n            case 's':\n              push_value(o, 1, 0, !DIF_XL || isNaN(cell.v) ? cell.v : '=\"' + cell.v + '\"');\n              break;\n            case 'd':\n              if (!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate(cell.v)));\n              if (DIF_XL) push_value(o, 0, cell.w, \"V\");else push_value(o, 1, 0, cell.w);\n              break;\n            default:\n              push_value(o, 1, 0, \"\");\n          }\n        }\n      }\n      push_value(o, -1, 0, \"EOD\");\n      var RS = \"\\r\\n\";\n      var oo = o.join(RS);\n      //while((oo.length & 0x7F) != 0) oo += \"\\0\";\n      return oo;\n    };\n  }();\n  return {\n    to_workbook: dif_to_workbook,\n    to_sheet: dif_to_sheet,\n    from_sheet: sheet_to_dif\n  };\n}();\nvar ETH = /*#__PURE__*/function () {\n  function decode(s /*:string*/) /*:string*/{\n    return s.replace(/\\\\b/g, \"\\\\\").replace(/\\\\c/g, \":\").replace(/\\\\n/g, \"\\n\");\n  }\n  function encode(s /*:string*/) /*:string*/{\n    return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g, \"\\\\n\");\n  }\n  function eth_to_aoa(str /*:string*/, opts) /*:AOA*/{\n    var records = str.split('\\n'),\n      R = -1,\n      C = -1,\n      ri = 0,\n      arr /*:AOA*/ = [];\n    for (; ri !== records.length; ++ri) {\n      var record = records[ri].trim().split(\":\");\n      if (record[0] !== 'cell') continue;\n      var addr = decode_cell(record[1]);\n      if (arr.length <= addr.r) for (R = arr.length; R <= addr.r; ++R) if (!arr[R]) arr[R] = [];\n      R = addr.r;\n      C = addr.c;\n      switch (record[2]) {\n        case 't':\n          arr[R][C] = decode(record[3]);\n          break;\n        case 'v':\n          arr[R][C] = +record[3];\n          break;\n        case 'vtf':\n          var _f = record[record.length - 1];\n        /* falls through */\n        case 'vtc':\n          switch (record[3]) {\n            case 'nl':\n              arr[R][C] = +record[4] ? true : false;\n              break;\n            default:\n              arr[R][C] = +record[4];\n              break;\n          }\n          if (record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n      }\n    }\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return arr;\n  }\n  function eth_to_sheet(d /*:string*/, opts) /*:Worksheet*/{\n    return aoa_to_sheet(eth_to_aoa(d, opts), opts);\n  }\n  function eth_to_workbook(d /*:string*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(eth_to_sheet(d, opts), opts);\n  }\n  var header = [\"socialcalc:version:1.5\", \"MIME-Version: 1.0\", \"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"].join(\"\\n\");\n  var sep = [\"--SocialCalcSpreadsheetControlSave\", \"Content-type: text/plain; charset=UTF-8\"].join(\"\\n\") + \"\\n\";\n\n  /* TODO: the other parts */\n  var meta = [\"# SocialCalc Spreadsheet Control Save\", \"part:sheet\"].join(\"\\n\");\n  var end = \"--SocialCalcSpreadsheetControlSave--\";\n  function sheet_to_eth_data(ws /*:Worksheet*/) /*:string*/{\n    if (!ws || !ws['!ref']) return \"\";\n    var o /*:Array<string>*/ = [],\n      oo /*:Array<string>*/ = [],\n      cell,\n      coord = \"\";\n    var r = decode_range(ws['!ref']);\n    var dense = Array.isArray(ws);\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null || cell.t === 'z') continue;\n        oo = [\"cell\", coord, 't'];\n        switch (cell.t) {\n          case 's':\n          case 'str':\n            oo.push(encode(cell.v));\n            break;\n          case 'n':\n            if (!cell.f) {\n              oo[2] = 'v';\n              oo[3] = cell.v;\n            } else {\n              oo[2] = 'vtf';\n              oo[3] = 'n';\n              oo[4] = cell.v;\n              oo[5] = encode(cell.f);\n            }\n            break;\n          case 'b':\n            oo[2] = 'vt' + (cell.f ? 'f' : 'c');\n            oo[3] = 'nl';\n            oo[4] = cell.v ? \"1\" : \"0\";\n            oo[5] = encode(cell.f || (cell.v ? 'TRUE' : 'FALSE'));\n            break;\n          case 'd':\n            var t = datenum(parseDate(cell.v));\n            oo[2] = 'vtc';\n            oo[3] = 'nd';\n            oo[4] = \"\" + t;\n            oo[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);\n            break;\n          case 'e':\n            continue;\n        }\n        o.push(oo.join(\":\"));\n      }\n    }\n    o.push(\"sheet:c:\" + (r.e.c - r.s.c + 1) + \":r:\" + (r.e.r - r.s.r + 1) + \":tvf:1\");\n    o.push(\"valueformat:1:text-wiki\");\n    //o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n    return o.join(\"\\n\");\n  }\n  function sheet_to_eth(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    return [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n    // return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n  }\n  return {\n    to_workbook: eth_to_workbook,\n    to_sheet: eth_to_sheet,\n    from_sheet: sheet_to_eth\n  };\n}();\nvar PRN = /*#__PURE__*/function () {\n  function set_text_arr(data /*:string*/, arr /*:AOA*/, R /*:number*/, C /*:number*/, o /*:any*/) {\n    if (o.raw) arr[R][C] = data;else if (data === \"\") {/* empty */} else if (data === 'TRUE') arr[R][C] = true;else if (data === 'FALSE') arr[R][C] = false;else if (!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);else if (!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);else arr[R][C] = data;\n  }\n  function prn_to_aoa_str(f /*:string*/, opts) /*:AOA*/{\n    var o = opts || {};\n    var arr /*:AOA*/ = [] /*:any*/;\n    if (!f || f.length === 0) return arr;\n    var lines = f.split(/[\\r\\n]/);\n    var L = lines.length - 1;\n    while (L >= 0 && lines[L].length === 0) --L;\n    var start = 10,\n      idx = 0;\n    var R = 0;\n    for (; R <= L; ++R) {\n      idx = lines[R].indexOf(\" \");\n      if (idx == -1) idx = lines[R].length;else idx++;\n      start = Math.max(start, idx);\n    }\n    for (R = 0; R <= L; ++R) {\n      arr[R] = [];\n      /* TODO: confirm that widths are always 10 */\n      var C = 0;\n      set_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n      for (C = 1; C <= (lines[R].length - start) / 10 + 1; ++C) set_text_arr(lines[R].slice(start + (C - 1) * 10, start + C * 10).trim(), arr, R, C, o);\n    }\n    if (o.sheetRows) arr = arr.slice(0, o.sheetRows);\n    return arr;\n  }\n\n  // List of accepted CSV separators\n  var guess_seps = {\n    /*::[*/0x2C /*::]*/: ',',\n    /*::[*/0x09 /*::]*/: \"\\t\",\n    /*::[*/0x3B /*::]*/: ';',\n    /*::[*/0x7C /*::]*/: '|'\n  };\n\n  // CSV separator weights to be used in case of equal numbers\n  var guess_sep_weights = {\n    /*::[*/0x2C /*::]*/: 3,\n    /*::[*/0x09 /*::]*/: 2,\n    /*::[*/0x3B /*::]*/: 1,\n    /*::[*/0x7C /*::]*/: 0\n  };\n  function guess_sep(str) {\n    var cnt = {},\n      instr = false,\n      end = 0,\n      cc = 0;\n    for (; end < str.length; ++end) {\n      if ((cc = str.charCodeAt(end)) == 0x22) instr = !instr;else if (!instr && cc in guess_seps) cnt[cc] = (cnt[cc] || 0) + 1;\n    }\n    cc = [];\n    for (end in cnt) if (Object.prototype.hasOwnProperty.call(cnt, end)) {\n      cc.push([cnt[end], end]);\n    }\n    if (!cc.length) {\n      cnt = guess_sep_weights;\n      for (end in cnt) if (Object.prototype.hasOwnProperty.call(cnt, end)) {\n        cc.push([cnt[end], end]);\n      }\n    }\n    cc.sort(function (a, b) {\n      return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]];\n    });\n    return guess_seps[cc.pop()[1]] || 0x2C;\n  }\n  function dsv_to_sheet_str(str /*:string*/, opts) /*:Worksheet*/{\n    var o = opts || {};\n    var sep = \"\";\n    if (DENSE != null && o.dense == null) o.dense = DENSE;\n    var ws /*:Worksheet*/ = o.dense ? [] /*:any*/ : {} /*:any*/;\n    var range /*:Range*/ = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: 0,\n        r: 0\n      }\n    } /*:any*/;\n    if (str.slice(0, 4) == \"sep=\") {\n      // If the line ends in \\r\\n\n      if (str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10) {\n        sep = str.charAt(4);\n        str = str.slice(7);\n      }\n      // If line ends in \\r OR \\n\n      else if (str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10) {\n        sep = str.charAt(4);\n        str = str.slice(6);\n      } else sep = guess_sep(str.slice(0, 1024));\n    } else if (o && o.FS) sep = o.FS;else sep = guess_sep(str.slice(0, 1024));\n    var R = 0,\n      C = 0,\n      v = 0;\n    var start = 0,\n      end = 0,\n      sepcc = sep.charCodeAt(0),\n      instr = false,\n      cc = 0,\n      startcc = str.charCodeAt(0);\n    str = str.replace(/\\r\\n/mg, \"\\n\");\n    var _re /*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n    function finish_cell() {\n      var s = str.slice(start, end);\n      var cell = {} /*:any*/;\n      if (s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1, -1).replace(/\"\"/g, '\"');\n      if (s.length === 0) cell.t = 'z';else if (o.raw) {\n        cell.t = 's';\n        cell.v = s;\n      } else if (s.trim().length === 0) {\n        cell.t = 's';\n        cell.v = s;\n      } else if (s.charCodeAt(0) == 0x3D) {\n        if (s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) {\n          cell.t = 's';\n          cell.v = s.slice(2, -1).replace(/\"\"/g, '\"');\n        } else if (fuzzyfmla(s)) {\n          cell.t = 'n';\n          cell.f = s.slice(1);\n        } else {\n          cell.t = 's';\n          cell.v = s;\n        }\n      } else if (s == \"TRUE\") {\n        cell.t = 'b';\n        cell.v = true;\n      } else if (s == \"FALSE\") {\n        cell.t = 'b';\n        cell.v = false;\n      } else if (!isNaN(v = fuzzynum(s))) {\n        cell.t = 'n';\n        if (o.cellText !== false) cell.w = s;\n        cell.v = v;\n      } else if (!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {\n        cell.z = o.dateNF || table_fmt[14];\n        var k = 0;\n        if (_re && s.match(_re)) {\n          s = dateNF_fix(s, o.dateNF, s.match(_re) || []);\n          k = 1;\n        }\n        if (o.cellDates) {\n          cell.t = 'd';\n          cell.v = parseDate(s, k);\n        } else {\n          cell.t = 'n';\n          cell.v = datenum(parseDate(s, k));\n        }\n        if (o.cellText !== false) cell.w = SSF_format(cell.z, cell.v instanceof Date ? datenum(cell.v) : cell.v);\n        if (!o.cellNF) delete cell.z;\n      } else {\n        cell.t = 's';\n        cell.v = s;\n      }\n      if (cell.t == 'z') {} else if (o.dense) {\n        if (!ws[R]) ws[R] = [];\n        ws[R][C] = cell;\n      } else ws[encode_cell({\n        c: C,\n        r: R\n      })] = cell;\n      start = end + 1;\n      startcc = str.charCodeAt(start);\n      if (range.e.c < C) range.e.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (cc == sepcc) ++C;else {\n        C = 0;\n        ++R;\n        if (o.sheetRows && o.sheetRows <= R) return true;\n      }\n    }\n    outer: for (; end < str.length; ++end) switch (cc = str.charCodeAt(end)) {\n      case 0x22:\n        if (startcc === 0x22) instr = !instr;\n        break;\n      case sepcc:\n      case 0x0a:\n      case 0x0d:\n        if (!instr && finish_cell()) break outer;\n        break;\n      default:\n        break;\n    }\n    if (end - start > 0) finish_cell();\n    ws['!ref'] = encode_range(range);\n    return ws;\n  }\n  function prn_to_sheet_str(str /*:string*/, opts) /*:Worksheet*/{\n    if (!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n    if (opts.FS) return dsv_to_sheet_str(str, opts);\n    if (str.slice(0, 4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n    if (str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n    return aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n  }\n  function prn_to_sheet(d /*:RawData*/, opts) /*:Worksheet*/{\n    var str = \"\",\n      bytes = opts.type == 'string' ? [0, 0, 0, 0] : firstbyte(d, opts);\n    switch (opts.type) {\n      case 'base64':\n        str = Base64_decode(d);\n        break;\n      case 'binary':\n        str = d;\n        break;\n      case 'buffer':\n        if (opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n        else if (opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);else str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n        break;\n      case 'array':\n        str = cc2str(d);\n        break;\n      case 'string':\n        str = d;\n        break;\n      default:\n        throw new Error(\"Unrecognized type \" + opts.type);\n    }\n    if (bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));else if (opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);else if (opts.type == 'binary' && typeof $cptable !== 'undefined' && opts.codepage) str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591, str));\n    if (str.slice(0, 19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n    return prn_to_sheet_str(str, opts);\n  }\n  function prn_to_workbook(d /*:RawData*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(prn_to_sheet(d, opts), opts);\n  }\n  function sheet_to_prn(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    var o /*:Array<string>*/ = [];\n    var r = safe_decode_range(ws['!ref']),\n      cell /*:Cell*/;\n    var dense = Array.isArray(ws);\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      var oo /*:Array<string>*/ = [];\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        var coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null) {\n          oo.push(\"          \");\n          continue;\n        }\n        var w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0, 10);\n        while (w.length < 10) w += \" \";\n        oo.push(w + (C === 0 ? \" \" : \"\"));\n      }\n      o.push(oo.join(\"\"));\n    }\n    return o.join(\"\\n\");\n  }\n  return {\n    to_workbook: prn_to_workbook,\n    to_sheet: prn_to_sheet,\n    from_sheet: sheet_to_prn\n  };\n}();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n  var o = opts || {},\n    OLD_WTF = !!o.WTF;\n  o.WTF = true;\n  try {\n    var out = SYLK.to_workbook(d, o);\n    o.WTF = OLD_WTF;\n    return out;\n  } catch (e) {\n    o.WTF = OLD_WTF;\n    if (!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n    return PRN.to_workbook(d, opts);\n  }\n}\nvar WK_ = /*#__PURE__*/function () {\n  function lotushopper(data, cb /*:RecordHopperCB*/, opts /*:any*/) {\n    if (!data) return;\n    prep_blob(data, data.l || 0);\n    var Enum = opts.Enum || WK1Enum;\n    while (data.l < data.length) {\n      var RT = data.read_shift(2);\n      var R = Enum[RT] || Enum[0xFFFF];\n      var length = data.read_shift(2);\n      var tgt = data.l + length;\n      var d = R.f && R.f(data, length, opts);\n      data.l = tgt;\n      if (cb(d, R, RT)) return;\n    }\n  }\n  function lotus_to_workbook(d /*:RawData*/, opts) {\n    switch (opts.type) {\n      case 'base64':\n        return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);\n      case 'binary':\n        return lotus_to_workbook_buf(s2a(d), opts);\n      case 'buffer':\n      case 'array':\n        return lotus_to_workbook_buf(d, opts);\n    }\n    throw \"Unsupported type \" + opts.type;\n  }\n  function lotus_to_workbook_buf(d, opts) /*:Workbook*/{\n    if (!d) return d;\n    var o = opts || {};\n    if (DENSE != null && o.dense == null) o.dense = DENSE;\n    var s /*:Worksheet*/ = o.dense ? [] : {} /*:any*/,\n      n = \"Sheet1\",\n      next_n = \"\",\n      sidx = 0;\n    var sheets = {},\n      snames = [],\n      realnames = [];\n    var refguess = {\n      s: {\n        r: 0,\n        c: 0\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n    var sheetRows = o.sheetRows || 0;\n    if (d[2] == 0x00) {\n      if (d[3] == 0x08 || d[3] == 0x09) {\n        if (d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n      }\n    }\n    if (d[2] == 0x02) {\n      o.Enum = WK1Enum;\n      lotushopper(d, function (val, R, RT) {\n        switch (RT) {\n          case 0x00:\n            /* BOF */\n            o.vers = val;\n            if (val >= 0x1000) o.qpro = true;\n            break;\n          case 0x06:\n            refguess = val;\n            break;\n          /* RANGE */\n          case 0xCC:\n            if (val) next_n = val;\n            break;\n          /* SHEETNAMECS */\n          case 0xDE:\n            next_n = val;\n            break;\n          /* SHEETNAMELP */\n          case 0x0F: /* LABEL */\n          case 0x33:\n            /* STRING */\n            if (!o.qpro) val[1].v = val[1].v.slice(1);\n          /* falls through */\n          case 0x0D: /* INTEGER */\n          case 0x0E: /* NUMBER */\n          case 0x10:\n            /* FORMULA */\n            /* TODO: actual translation of the format code */\n            if (RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n              val[1].z = o.dateNF || table_fmt[14];\n              if (o.cellDates) {\n                val[1].t = 'd';\n                val[1].v = numdate(val[1].v);\n              }\n            }\n            if (o.qpro) {\n              if (val[3] > sidx) {\n                s[\"!ref\"] = encode_range(refguess);\n                sheets[n] = s;\n                snames.push(n);\n                s = o.dense ? [] : {};\n                refguess = {\n                  s: {\n                    r: 0,\n                    c: 0\n                  },\n                  e: {\n                    r: 0,\n                    c: 0\n                  }\n                };\n                sidx = val[3];\n                n = next_n || \"Sheet\" + (sidx + 1);\n                next_n = \"\";\n              }\n            }\n            var tmpcell = o.dense ? (s[val[0].r] || [])[val[0].c] : s[encode_cell(val[0])];\n            if (tmpcell) {\n              tmpcell.t = val[1].t;\n              tmpcell.v = val[1].v;\n              if (val[1].z != null) tmpcell.z = val[1].z;\n              if (val[1].f != null) tmpcell.f = val[1].f;\n              break;\n            }\n            if (o.dense) {\n              if (!s[val[0].r]) s[val[0].r] = [];\n              s[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            break;\n          default:\n        }\n      }, o);\n    } else if (d[2] == 0x1A || d[2] == 0x0E) {\n      o.Enum = WK3Enum;\n      if (d[2] == 0x0E) {\n        o.qpro = true;\n        d.l = 0;\n      }\n      lotushopper(d, function (val, R, RT) {\n        switch (RT) {\n          case 0xCC:\n            n = val;\n            break;\n          /* SHEETNAMECS */\n          case 0x16:\n            /* LABEL16 */\n            val[1].v = val[1].v.slice(1);\n          /* falls through */\n          case 0x17: /* NUMBER17 */\n          case 0x18: /* NUMBER18 */\n          case 0x19: /* FORMULA19 */\n          case 0x25: /* NUMBER25 */\n          case 0x27: /* NUMBER27 */\n          case 0x28:\n            /* FORMULA28 */\n            if (val[3] > sidx) {\n              s[\"!ref\"] = encode_range(refguess);\n              sheets[n] = s;\n              snames.push(n);\n              s = o.dense ? [] : {};\n              refguess = {\n                s: {\n                  r: 0,\n                  c: 0\n                },\n                e: {\n                  r: 0,\n                  c: 0\n                }\n              };\n              sidx = val[3];\n              n = \"Sheet\" + (sidx + 1);\n            }\n            if (sheetRows > 0 && val[0].r >= sheetRows) break;\n            if (o.dense) {\n              if (!s[val[0].r]) s[val[0].r] = [];\n              s[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            if (refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n            if (refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n            break;\n          case 0x1B:\n            /* XFORMAT */\n            if (val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n            break;\n          case 0x0601:\n            /* SHEETINFOQP */\n            realnames[val[0]] = val[1];\n            if (val[0] == sidx) n = val[1];\n            break;\n          default:\n            break;\n        }\n      }, o);\n    } else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n    s[\"!ref\"] = encode_range(refguess);\n    sheets[next_n || n] = s;\n    snames.push(next_n || n);\n    if (!realnames.length) return {\n      SheetNames: snames,\n      Sheets: sheets\n    };\n    var osheets = {},\n      rnames = [];\n    /* TODO: verify no collisions */\n    for (var i = 0; i < realnames.length; ++i) if (sheets[snames[i]]) {\n      rnames.push(realnames[i] || snames[i]);\n      osheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n    } else {\n      rnames.push(realnames[i]);\n      osheets[realnames[i]] = {\n        \"!ref\": \"A1\"\n      };\n    }\n    return {\n      SheetNames: rnames,\n      Sheets: osheets\n    };\n  }\n  function sheet_to_wk1(ws /*:Worksheet*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n    var ba = buf_array();\n    var range = safe_decode_range(ws[\"!ref\"]);\n    var dense = Array.isArray(ws);\n    var cols = [];\n    write_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n    write_biff_rec(ba, 0x06, write_RANGE(range));\n    var max_R = Math.min(range.e.r, 8191);\n    for (var R = range.s.r; R <= max_R; ++R) {\n      var rr = encode_row(R);\n      for (var C = range.s.c; C <= range.e.c; ++C) {\n        if (R === range.s.r) cols[C] = encode_col(C);\n        var ref = cols[C] + rr;\n        var cell = dense ? (ws[R] || [])[C] : ws[ref];\n        if (!cell || cell.t == \"z\") continue;\n        /* TODO: formula records */\n        if (cell.t == \"n\") {\n          if ((cell.v | 0) == cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell.v));else write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell.v));\n        } else {\n          var str = format_cell(cell);\n          write_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n        }\n      }\n    }\n    write_biff_rec(ba, 0x01);\n    return ba.end();\n  }\n  function book_to_wk3(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n    var ba = buf_array();\n    write_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n    for (var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if ((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n    var wsidx = 0;\n    for (i = 0; i < wb.SheetNames.length; ++i) {\n      var ws = wb.Sheets[wb.SheetNames[i]];\n      if (!ws || !ws[\"!ref\"]) continue;\n      var range = safe_decode_range(ws[\"!ref\"]);\n      var dense = Array.isArray(ws);\n      var cols = [];\n      var max_R = Math.min(range.e.r, 8191);\n      for (var R = range.s.r; R <= max_R; ++R) {\n        var rr = encode_row(R);\n        for (var C = range.s.c; C <= range.e.c; ++C) {\n          if (R === range.s.r) cols[C] = encode_col(C);\n          var ref = cols[C] + rr;\n          var cell = dense ? (ws[R] || [])[C] : ws[ref];\n          if (!cell || cell.t == \"z\") continue;\n          /* TODO: FORMULA19 NUMBER18 records */\n          if (cell.t == \"n\") {\n            write_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n          } else {\n            var str = format_cell(cell);\n            /* TODO: max len? */\n            write_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n          }\n        }\n      }\n      ++wsidx;\n    }\n    write_biff_rec(ba, 0x01);\n    return ba.end();\n  }\n  function write_BOF_WK1(v /*:number*/) {\n    var out = new_buf(2);\n    out.write_shift(2, v);\n    return out;\n  }\n  function write_BOF_WK3(wb /*:Workbook*/) {\n    var out = new_buf(26);\n    out.write_shift(2, 0x1000);\n    out.write_shift(2, 0x0004);\n    out.write_shift(4, 0x0000);\n    var rows = 0,\n      cols = 0,\n      wscnt = 0;\n    for (var i = 0; i < wb.SheetNames.length; ++i) {\n      var name = wb.SheetNames[i];\n      var ws = wb.Sheets[name];\n      if (!ws || !ws[\"!ref\"]) continue;\n      ++wscnt;\n      var range = decode_range(ws[\"!ref\"]);\n      if (rows < range.e.r) rows = range.e.r;\n      if (cols < range.e.c) cols = range.e.c;\n    }\n    if (rows > 8191) rows = 8191;\n    out.write_shift(2, rows);\n    out.write_shift(1, wscnt);\n    out.write_shift(1, cols);\n    out.write_shift(2, 0x00);\n    out.write_shift(2, 0x00);\n    out.write_shift(1, 0x01);\n    out.write_shift(1, 0x02);\n    out.write_shift(4, 0);\n    out.write_shift(4, 0);\n    return out;\n  }\n  function parse_RANGE(blob, length, opts) {\n    var o = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: 0,\n        r: 0\n      }\n    };\n    if (length == 8 && opts.qpro) {\n      o.s.c = blob.read_shift(1);\n      blob.l++;\n      o.s.r = blob.read_shift(2);\n      o.e.c = blob.read_shift(1);\n      blob.l++;\n      o.e.r = blob.read_shift(2);\n      return o;\n    }\n    o.s.c = blob.read_shift(2);\n    o.s.r = blob.read_shift(2);\n    if (length == 12 && opts.qpro) blob.l += 2;\n    o.e.c = blob.read_shift(2);\n    o.e.r = blob.read_shift(2);\n    if (length == 12 && opts.qpro) blob.l += 2;\n    if (o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n    return o;\n  }\n  function write_RANGE(range) {\n    var out = new_buf(8);\n    out.write_shift(2, range.s.c);\n    out.write_shift(2, range.s.r);\n    out.write_shift(2, range.e.c);\n    out.write_shift(2, range.e.r);\n    return out;\n  }\n  function parse_cell(blob, length, opts) {\n    var o = [{\n      c: 0,\n      r: 0\n    }, {\n      t: 'n',\n      v: 0\n    }, 0, 0];\n    if (opts.qpro && opts.vers != 0x5120) {\n      o[0].c = blob.read_shift(1);\n      o[3] = blob.read_shift(1);\n      o[0].r = blob.read_shift(2);\n      blob.l += 2;\n    } else {\n      o[2] = blob.read_shift(1);\n      o[0].c = blob.read_shift(2);\n      o[0].r = blob.read_shift(2);\n    }\n    return o;\n  }\n  function parse_LABEL(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    o[1].t = 's';\n    if (opts.vers == 0x5120) {\n      blob.l++;\n      var len = blob.read_shift(1);\n      o[1].v = blob.read_shift(len, 'utf8');\n      return o;\n    }\n    if (opts.qpro) blob.l++;\n    o[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n    return o;\n  }\n  function write_LABEL(R, C, s) {\n    /* TODO: encoding */\n    var o = new_buf(7 + s.length);\n    o.write_shift(1, 0xFF);\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(1, 0x27); // ??\n    for (var i = 0; i < o.length; ++i) {\n      var cc = s.charCodeAt(i);\n      o.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n    }\n    o.write_shift(1, 0);\n    return o;\n  }\n  function parse_INTEGER(blob, length, opts) {\n    var o = parse_cell(blob, length, opts);\n    o[1].v = blob.read_shift(2, 'i');\n    return o;\n  }\n  function write_INTEGER(R, C, v) {\n    var o = new_buf(7);\n    o.write_shift(1, 0xFF);\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(2, v, 'i');\n    return o;\n  }\n  function parse_NUMBER(blob, length, opts) {\n    var o = parse_cell(blob, length, opts);\n    o[1].v = blob.read_shift(8, 'f');\n    return o;\n  }\n  function write_NUMBER(R, C, v) {\n    var o = new_buf(13);\n    o.write_shift(1, 0xFF);\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(8, v, 'f');\n    return o;\n  }\n  function parse_FORMULA(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    /* TODO: formula */\n    o[1].v = blob.read_shift(8, 'f');\n    if (opts.qpro) blob.l = tgt;else {\n      var flen = blob.read_shift(2);\n      wk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n      blob.l += flen;\n    }\n    return o;\n  }\n  function wk1_parse_rc(B, V, col) {\n    var rel = V & 0x8000;\n    V &= ~0x8000;\n    V = (rel ? B : 0) + (V >= 0x2000 ? V - 0x4000 : V);\n    return (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n  }\n  /* var oprec = [\n  \t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n  \t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n  ]; */\n  /* TODO: flesh out */\n  var FuncTab = {\n    0x33: [\"FALSE\", 0],\n    0x34: [\"TRUE\", 0],\n    0x46: [\"LEN\", 1],\n    0x50: [\"SUM\", 69],\n    0x51: [\"AVERAGEA\", 69],\n    0x52: [\"COUNTA\", 69],\n    0x53: [\"MINA\", 69],\n    0x54: [\"MAXA\", 69],\n    0x6F: [\"T\", 1]\n  };\n  var BinOpTab = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"\", \"+\", \"-\", \"*\", \"/\", \"^\", \"=\", \"<>\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"<=\", \">=\", \"<\", \">\", \"\", \"\", \"\", \"\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"&\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" // eslint-disable-line no-mixed-spaces-and-tabs\n  ];\n  function wk1_fmla_to_csf(blob, o) {\n    prep_blob(blob, 0);\n    var out = [],\n      argc = 0,\n      R = \"\",\n      C = \"\",\n      argL = \"\",\n      argR = \"\";\n    while (blob.l < blob.length) {\n      var cc = blob[blob.l++];\n      switch (cc) {\n        case 0x00:\n          out.push(blob.read_shift(8, 'f'));\n          break;\n        case 0x01:\n          {\n            C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            out.push(C + R);\n          }\n          break;\n        case 0x02:\n          {\n            var c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            var r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            out.push(c + r + \":\" + C + R);\n          }\n          break;\n        case 0x03:\n          if (blob.l < blob.length) {\n            console.error(\"WK1 premature formula end\");\n            return;\n          }\n          break;\n        case 0x04:\n          out.push(\"(\" + out.pop() + \")\");\n          break;\n        case 0x05:\n          out.push(blob.read_shift(2));\n          break;\n        case 0x06:\n          {\n            /* TODO: text encoding */\n            var Z = \"\";\n            while (cc = blob[blob.l++]) Z += String.fromCharCode(cc);\n            out.push('\"' + Z.replace(/\"/g, '\"\"') + '\"');\n          }\n          break;\n        case 0x08:\n          out.push(\"-\" + out.pop());\n          break;\n        case 0x17:\n          out.push(\"+\" + out.pop());\n          break;\n        case 0x16:\n          out.push(\"NOT(\" + out.pop() + \")\");\n          break;\n        case 0x14:\n        case 0x15:\n          {\n            argR = out.pop();\n            argL = out.pop();\n            out.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n          }\n          break;\n        default:\n          if (cc < 0x20 && BinOpTab[cc]) {\n            argR = out.pop();\n            argL = out.pop();\n            out.push(argL + BinOpTab[cc] + argR);\n          } else if (FuncTab[cc]) {\n            argc = FuncTab[cc][1];\n            if (argc == 69) argc = blob[blob.l++];\n            if (argc > out.length) {\n              console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\");\n              return;\n            }\n            var args = out.slice(-argc);\n            out.length -= argc;\n            out.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n          } else if (cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));else if (cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));else if (cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));else if (cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n          // possible future functions ??\n          else return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n      }\n    }\n    if (out.length == 1) o[1].f = \"\" + out[0];else console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n  }\n  function parse_cell_3(blob /*::, length*/) {\n    var o = [{\n      c: 0,\n      r: 0\n    }, {\n      t: 'n',\n      v: 0\n    }, 0];\n    o[0].r = blob.read_shift(2);\n    o[3] = blob[blob.l++];\n    o[0].c = blob[blob.l++];\n    return o;\n  }\n  function parse_LABEL_16(blob, length) {\n    var o = parse_cell_3(blob, length);\n    o[1].t = 's';\n    o[1].v = blob.read_shift(length - 4, 'cstr');\n    return o;\n  }\n  function write_LABEL_16(R, C, wsidx, s) {\n    /* TODO: encoding */\n    var o = new_buf(6 + s.length);\n    o.write_shift(2, R);\n    o.write_shift(1, wsidx);\n    o.write_shift(1, C);\n    o.write_shift(1, 0x27);\n    for (var i = 0; i < s.length; ++i) {\n      var cc = s.charCodeAt(i);\n      o.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n    }\n    o.write_shift(1, 0);\n    return o;\n  }\n  function parse_NUMBER_18(blob, length) {\n    var o = parse_cell_3(blob, length);\n    o[1].v = blob.read_shift(2);\n    var v = o[1].v >> 1;\n    if (o[1].v & 0x1) {\n      switch (v & 0x07) {\n        case 0:\n          v = (v >> 3) * 5000;\n          break;\n        case 1:\n          v = (v >> 3) * 500;\n          break;\n        case 2:\n          v = (v >> 3) / 20;\n          break;\n        case 3:\n          v = (v >> 3) / 200;\n          break;\n        case 4:\n          v = (v >> 3) / 2000;\n          break;\n        case 5:\n          v = (v >> 3) / 20000;\n          break;\n        case 6:\n          v = (v >> 3) / 16;\n          break;\n        case 7:\n          v = (v >> 3) / 64;\n          break;\n      }\n    }\n    o[1].v = v;\n    return o;\n  }\n  function parse_NUMBER_17(blob, length) {\n    var o = parse_cell_3(blob, length);\n    var v1 = blob.read_shift(4);\n    var v2 = blob.read_shift(4);\n    var e = blob.read_shift(2);\n    if (e == 0xFFFF) {\n      if (v1 === 0 && v2 === 0xC0000000) {\n        o[1].t = \"e\";\n        o[1].v = 0x0F;\n      } // ERR -> #VALUE!\n      else if (v1 === 0 && v2 === 0xD0000000) {\n        o[1].t = \"e\";\n        o[1].v = 0x2A;\n      } // NA -> #N/A\n      else o[1].v = 0;\n      return o;\n    }\n    var s = e & 0x8000;\n    e = (e & 0x7FFF) - 16446;\n    o[1].v = (1 - s * 2) * (v2 * Math.pow(2, e + 32) + v1 * Math.pow(2, e));\n    return o;\n  }\n  function write_NUMBER_17(R, C, wsidx, v) {\n    var o = new_buf(14);\n    o.write_shift(2, R);\n    o.write_shift(1, wsidx);\n    o.write_shift(1, C);\n    if (v == 0) {\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(2, 0xFFFF);\n      return o;\n    }\n    var s = 0,\n      e = 0,\n      v1 = 0,\n      v2 = 0;\n    if (v < 0) {\n      s = 1;\n      v = -v;\n    }\n    e = Math.log2(v) | 0;\n    v /= Math.pow(2, e - 31);\n    v2 = v >>> 0;\n    if ((v2 & 0x80000000) == 0) {\n      v /= 2;\n      ++e;\n      v2 = v >>> 0;\n    }\n    v -= v2;\n    v2 |= 0x80000000;\n    v2 >>>= 0;\n    v *= Math.pow(2, 32);\n    v1 = v >>> 0;\n    o.write_shift(4, v1);\n    o.write_shift(4, v2);\n    e += 0x3FFF + (s ? 0x8000 : 0);\n    o.write_shift(2, e);\n    return o;\n  }\n  function parse_FORMULA_19(blob, length) {\n    var o = parse_NUMBER_17(blob, 14);\n    blob.l += length - 14; /* TODO: WK3 formula */\n    return o;\n  }\n  function parse_NUMBER_25(blob, length) {\n    var o = parse_cell_3(blob, length);\n    var v1 = blob.read_shift(4);\n    o[1].v = v1 >> 6;\n    return o;\n  }\n  function parse_NUMBER_27(blob, length) {\n    var o = parse_cell_3(blob, length);\n    var v1 = blob.read_shift(8, 'f');\n    o[1].v = v1;\n    return o;\n  }\n  function parse_FORMULA_28(blob, length) {\n    var o = parse_NUMBER_27(blob, 14);\n    blob.l += length - 10; /* TODO: formula */\n    return o;\n  }\n  function parse_SHEETNAMECS(blob, length) {\n    return blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n  }\n  function parse_SHEETNAMELP(blob, length) {\n    var len = blob[blob.l++];\n    if (len > length - 1) len = length - 1;\n    var o = \"\";\n    while (o.length < len) o += String.fromCharCode(blob[blob.l++]);\n    return o;\n  }\n  function parse_SHEETINFOQP(blob, length, opts) {\n    if (!opts.qpro || length < 21) return;\n    var id = blob.read_shift(1);\n    blob.l += 17;\n    blob.l += 1; //var len = blob.read_shift(1);\n    blob.l += 2;\n    var nm = blob.read_shift(length - 21, 'cstr');\n    return [id, nm];\n  }\n  function parse_XFORMAT(blob, length) {\n    var o = {},\n      tgt = blob.l + length;\n    while (blob.l < tgt) {\n      var dt = blob.read_shift(2);\n      if (dt == 0x36b0) {\n        o[dt] = [0, \"\"];\n        o[dt][0] = blob.read_shift(2);\n        while (blob[blob.l]) {\n          o[dt][1] += String.fromCharCode(blob[blob.l]);\n          blob.l++;\n        }\n        blob.l++;\n      }\n      // TODO: 0x3a99 ??\n    }\n    return o;\n  }\n  function write_XFORMAT_SHEETNAME(name, wsidx) {\n    var out = new_buf(5 + name.length);\n    out.write_shift(2, 0x36b0);\n    out.write_shift(2, wsidx);\n    for (var i = 0; i < name.length; ++i) {\n      var cc = name.charCodeAt(i);\n      out[out.l++] = cc > 0x7F ? 0x5F : cc;\n    }\n    out[out.l++] = 0;\n    return out;\n  }\n  var WK1Enum = {\n    /*::[*/0x0000 /*::]*/: {\n      n: \"BOF\",\n      f: parseuint16\n    },\n    /*::[*/0x0001 /*::]*/: {\n      n: \"EOF\"\n    },\n    /*::[*/0x0002 /*::]*/: {\n      n: \"CALCMODE\"\n    },\n    /*::[*/0x0003 /*::]*/: {\n      n: \"CALCORDER\"\n    },\n    /*::[*/0x0004 /*::]*/: {\n      n: \"SPLIT\"\n    },\n    /*::[*/0x0005 /*::]*/: {\n      n: \"SYNC\"\n    },\n    /*::[*/0x0006 /*::]*/: {\n      n: \"RANGE\",\n      f: parse_RANGE\n    },\n    /*::[*/0x0007 /*::]*/: {\n      n: \"WINDOW1\"\n    },\n    /*::[*/0x0008 /*::]*/: {\n      n: \"COLW1\"\n    },\n    /*::[*/0x0009 /*::]*/: {\n      n: \"WINTWO\"\n    },\n    /*::[*/0x000A /*::]*/: {\n      n: \"COLW2\"\n    },\n    /*::[*/0x000B /*::]*/: {\n      n: \"NAME\"\n    },\n    /*::[*/0x000C /*::]*/: {\n      n: \"BLANK\"\n    },\n    /*::[*/0x000D /*::]*/: {\n      n: \"INTEGER\",\n      f: parse_INTEGER\n    },\n    /*::[*/0x000E /*::]*/: {\n      n: \"NUMBER\",\n      f: parse_NUMBER\n    },\n    /*::[*/0x000F /*::]*/: {\n      n: \"LABEL\",\n      f: parse_LABEL\n    },\n    /*::[*/0x0010 /*::]*/: {\n      n: \"FORMULA\",\n      f: parse_FORMULA\n    },\n    /*::[*/0x0018 /*::]*/: {\n      n: \"TABLE\"\n    },\n    /*::[*/0x0019 /*::]*/: {\n      n: \"ORANGE\"\n    },\n    /*::[*/0x001A /*::]*/: {\n      n: \"PRANGE\"\n    },\n    /*::[*/0x001B /*::]*/: {\n      n: \"SRANGE\"\n    },\n    /*::[*/0x001C /*::]*/: {\n      n: \"FRANGE\"\n    },\n    /*::[*/0x001D /*::]*/: {\n      n: \"KRANGE1\"\n    },\n    /*::[*/0x0020 /*::]*/: {\n      n: \"HRANGE\"\n    },\n    /*::[*/0x0023 /*::]*/: {\n      n: \"KRANGE2\"\n    },\n    /*::[*/0x0024 /*::]*/: {\n      n: \"PROTEC\"\n    },\n    /*::[*/0x0025 /*::]*/: {\n      n: \"FOOTER\"\n    },\n    /*::[*/0x0026 /*::]*/: {\n      n: \"HEADER\"\n    },\n    /*::[*/0x0027 /*::]*/: {\n      n: \"SETUP\"\n    },\n    /*::[*/0x0028 /*::]*/: {\n      n: \"MARGINS\"\n    },\n    /*::[*/0x0029 /*::]*/: {\n      n: \"LABELFMT\"\n    },\n    /*::[*/0x002A /*::]*/: {\n      n: \"TITLES\"\n    },\n    /*::[*/0x002B /*::]*/: {\n      n: \"SHEETJS\"\n    },\n    /*::[*/0x002D /*::]*/: {\n      n: \"GRAPH\"\n    },\n    /*::[*/0x002E /*::]*/: {\n      n: \"NGRAPH\"\n    },\n    /*::[*/0x002F /*::]*/: {\n      n: \"CALCCOUNT\"\n    },\n    /*::[*/0x0030 /*::]*/: {\n      n: \"UNFORMATTED\"\n    },\n    /*::[*/0x0031 /*::]*/: {\n      n: \"CURSORW12\"\n    },\n    /*::[*/0x0032 /*::]*/: {\n      n: \"WINDOW\"\n    },\n    /*::[*/0x0033 /*::]*/: {\n      n: \"STRING\",\n      f: parse_LABEL\n    },\n    /*::[*/0x0037 /*::]*/: {\n      n: \"PASSWORD\"\n    },\n    /*::[*/0x0038 /*::]*/: {\n      n: \"LOCKED\"\n    },\n    /*::[*/0x003C /*::]*/: {\n      n: \"QUERY\"\n    },\n    /*::[*/0x003D /*::]*/: {\n      n: \"QUERYNAME\"\n    },\n    /*::[*/0x003E /*::]*/: {\n      n: \"PRINT\"\n    },\n    /*::[*/0x003F /*::]*/: {\n      n: \"PRINTNAME\"\n    },\n    /*::[*/0x0040 /*::]*/: {\n      n: \"GRAPH2\"\n    },\n    /*::[*/0x0041 /*::]*/: {\n      n: \"GRAPHNAME\"\n    },\n    /*::[*/0x0042 /*::]*/: {\n      n: \"ZOOM\"\n    },\n    /*::[*/0x0043 /*::]*/: {\n      n: \"SYMSPLIT\"\n    },\n    /*::[*/0x0044 /*::]*/: {\n      n: \"NSROWS\"\n    },\n    /*::[*/0x0045 /*::]*/: {\n      n: \"NSCOLS\"\n    },\n    /*::[*/0x0046 /*::]*/: {\n      n: \"RULER\"\n    },\n    /*::[*/0x0047 /*::]*/: {\n      n: \"NNAME\"\n    },\n    /*::[*/0x0048 /*::]*/: {\n      n: \"ACOMM\"\n    },\n    /*::[*/0x0049 /*::]*/: {\n      n: \"AMACRO\"\n    },\n    /*::[*/0x004A /*::]*/: {\n      n: \"PARSE\"\n    },\n    /*::[*/0x0066 /*::]*/: {\n      n: \"PRANGES??\"\n    },\n    /*::[*/0x0067 /*::]*/: {\n      n: \"RRANGES??\"\n    },\n    /*::[*/0x0068 /*::]*/: {\n      n: \"FNAME??\"\n    },\n    /*::[*/0x0069 /*::]*/: {\n      n: \"MRANGES??\"\n    },\n    /*::[*/0x00CC /*::]*/: {\n      n: \"SHEETNAMECS\",\n      f: parse_SHEETNAMECS\n    },\n    /*::[*/0x00DE /*::]*/: {\n      n: \"SHEETNAMELP\",\n      f: parse_SHEETNAMELP\n    },\n    /*::[*/0xFFFF /*::]*/: {\n      n: \"\"\n    }\n  };\n  var WK3Enum = {\n    /*::[*/0x0000 /*::]*/: {\n      n: \"BOF\"\n    },\n    /*::[*/0x0001 /*::]*/: {\n      n: \"EOF\"\n    },\n    /*::[*/0x0002 /*::]*/: {\n      n: \"PASSWORD\"\n    },\n    /*::[*/0x0003 /*::]*/: {\n      n: \"CALCSET\"\n    },\n    /*::[*/0x0004 /*::]*/: {\n      n: \"WINDOWSET\"\n    },\n    /*::[*/0x0005 /*::]*/: {\n      n: \"SHEETCELLPTR\"\n    },\n    /*::[*/0x0006 /*::]*/: {\n      n: \"SHEETLAYOUT\"\n    },\n    /*::[*/0x0007 /*::]*/: {\n      n: \"COLUMNWIDTH\"\n    },\n    /*::[*/0x0008 /*::]*/: {\n      n: \"HIDDENCOLUMN\"\n    },\n    /*::[*/0x0009 /*::]*/: {\n      n: \"USERRANGE\"\n    },\n    /*::[*/0x000A /*::]*/: {\n      n: \"SYSTEMRANGE\"\n    },\n    /*::[*/0x000B /*::]*/: {\n      n: \"ZEROFORCE\"\n    },\n    /*::[*/0x000C /*::]*/: {\n      n: \"SORTKEYDIR\"\n    },\n    /*::[*/0x000D /*::]*/: {\n      n: \"FILESEAL\"\n    },\n    /*::[*/0x000E /*::]*/: {\n      n: \"DATAFILLNUMS\"\n    },\n    /*::[*/0x000F /*::]*/: {\n      n: \"PRINTMAIN\"\n    },\n    /*::[*/0x0010 /*::]*/: {\n      n: \"PRINTSTRING\"\n    },\n    /*::[*/0x0011 /*::]*/: {\n      n: \"GRAPHMAIN\"\n    },\n    /*::[*/0x0012 /*::]*/: {\n      n: \"GRAPHSTRING\"\n    },\n    /*::[*/0x0013 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0014 /*::]*/: {\n      n: \"ERRCELL\"\n    },\n    /*::[*/0x0015 /*::]*/: {\n      n: \"NACELL\"\n    },\n    /*::[*/0x0016 /*::]*/: {\n      n: \"LABEL16\",\n      f: parse_LABEL_16\n    },\n    /*::[*/0x0017 /*::]*/: {\n      n: \"NUMBER17\",\n      f: parse_NUMBER_17\n    },\n    /*::[*/0x0018 /*::]*/: {\n      n: \"NUMBER18\",\n      f: parse_NUMBER_18\n    },\n    /*::[*/0x0019 /*::]*/: {\n      n: \"FORMULA19\",\n      f: parse_FORMULA_19\n    },\n    /*::[*/0x001A /*::]*/: {\n      n: \"FORMULA1A\"\n    },\n    /*::[*/0x001B /*::]*/: {\n      n: \"XFORMAT\",\n      f: parse_XFORMAT\n    },\n    /*::[*/0x001C /*::]*/: {\n      n: \"DTLABELMISC\"\n    },\n    /*::[*/0x001D /*::]*/: {\n      n: \"DTLABELCELL\"\n    },\n    /*::[*/0x001E /*::]*/: {\n      n: \"GRAPHWINDOW\"\n    },\n    /*::[*/0x001F /*::]*/: {\n      n: \"CPA\"\n    },\n    /*::[*/0x0020 /*::]*/: {\n      n: \"LPLAUTO\"\n    },\n    /*::[*/0x0021 /*::]*/: {\n      n: \"QUERY\"\n    },\n    /*::[*/0x0022 /*::]*/: {\n      n: \"HIDDENSHEET\"\n    },\n    /*::[*/0x0023 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0025 /*::]*/: {\n      n: \"NUMBER25\",\n      f: parse_NUMBER_25\n    },\n    /*::[*/0x0026 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0027 /*::]*/: {\n      n: \"NUMBER27\",\n      f: parse_NUMBER_27\n    },\n    /*::[*/0x0028 /*::]*/: {\n      n: \"FORMULA28\",\n      f: parse_FORMULA_28\n    },\n    /*::[*/0x008E /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0093 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0096 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0097 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0098 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0099 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x009A /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x009B /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x009C /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00A3 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00AE /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00AF /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B0 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B1 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B8 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B9 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00BA /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00BB /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00BC /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00C3 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00C9 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00CC /*::]*/: {\n      n: \"SHEETNAMECS\",\n      f: parse_SHEETNAMECS\n    },\n    /*::[*/0x00CD /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00CE /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00CF /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00D0 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0100 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0103 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0104 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0105 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0106 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0107 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0109 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010A /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010B /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010C /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010E /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010F /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0180 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0185 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0186 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0189 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x018C /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0200 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0202 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0201 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0204 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0205 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0280 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0281 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0282 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0283 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0284 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0285 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0286 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0287 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0288 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0292 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0293 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0294 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0295 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0296 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0299 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x029A /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0300 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0304 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0601 /*::]*/: {\n      n: \"SHEETINFOQP\",\n      f: parse_SHEETINFOQP\n    },\n    /*::[*/0x0640 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0642 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0701 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0702 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0703 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0704 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0780 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0800 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0801 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0804 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0A80 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x2AF6 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x3231 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x6E49 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x6F44 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0xFFFF /*::]*/: {\n      n: \"\"\n    }\n  };\n  return {\n    sheet_to_wk1: sheet_to_wk1,\n    book_to_wk3: book_to_wk3,\n    to_workbook: lotus_to_workbook\n  };\n}();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n  var font = {},\n    m = rpr.match(tagregex),\n    i = 0;\n  var pass = false;\n  if (m) for (; i != m.length; ++i) {\n    var y = parsexmltag(m[i]);\n    switch (y[0].replace(/\\w*:/g, \"\")) {\n      /* 18.8.12 condense CT_BooleanProperty */\n      /* ** not required . */\n      case '<condense':\n        break;\n      /* 18.8.17 extend CT_BooleanProperty */\n      /* ** not required . */\n      case '<extend':\n        break;\n      /* 18.8.36 shadow CT_BooleanProperty */\n      /* ** not required . */\n      case '<shadow':\n        if (!y.val) break;\n      /* falls through */\n      case '<shadow>':\n      case '<shadow/>':\n        font.shadow = 1;\n        break;\n      case '</shadow>':\n        break;\n\n      /* 18.4.1 charset CT_IntProperty TODO */\n      case '<charset':\n        if (y.val == '1') break;\n        font.cp = CS2CP[parseInt(y.val, 10)];\n        break;\n\n      /* 18.4.2 outline CT_BooleanProperty TODO */\n      case '<outline':\n        if (!y.val) break;\n      /* falls through */\n      case '<outline>':\n      case '<outline/>':\n        font.outline = 1;\n        break;\n      case '</outline>':\n        break;\n\n      /* 18.4.5 rFont CT_FontName */\n      case '<rFont':\n        font.name = y.val;\n        break;\n\n      /* 18.4.11 sz CT_FontSize */\n      case '<sz':\n        font.sz = y.val;\n        break;\n\n      /* 18.4.10 strike CT_BooleanProperty */\n      case '<strike':\n        if (!y.val) break;\n      /* falls through */\n      case '<strike>':\n      case '<strike/>':\n        font.strike = 1;\n        break;\n      case '</strike>':\n        break;\n\n      /* 18.4.13 u CT_UnderlineProperty */\n      case '<u':\n        if (!y.val) break;\n        switch (y.val) {\n          case 'double':\n            font.uval = \"double\";\n            break;\n          case 'singleAccounting':\n            font.uval = \"single-accounting\";\n            break;\n          case 'doubleAccounting':\n            font.uval = \"double-accounting\";\n            break;\n        }\n      /* falls through */\n      case '<u>':\n      case '<u/>':\n        font.u = 1;\n        break;\n      case '</u>':\n        break;\n\n      /* 18.8.2 b */\n      case '<b':\n        if (y.val == '0') break;\n      /* falls through */\n      case '<b>':\n      case '<b/>':\n        font.b = 1;\n        break;\n      case '</b>':\n        break;\n\n      /* 18.8.26 i */\n      case '<i':\n        if (y.val == '0') break;\n      /* falls through */\n      case '<i>':\n      case '<i/>':\n        font.i = 1;\n        break;\n      case '</i>':\n        break;\n\n      /* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n      case '<color':\n        if (y.rgb) font.color = y.rgb.slice(2, 8);\n        break;\n      case '<color>':\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* 18.8.18 family ST_FontFamily */\n      case '<family':\n        font.family = y.val;\n        break;\n      case '<family>':\n      case '<family/>':\n      case '</family>':\n        break;\n\n      /* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n      case '<vertAlign':\n        font.valign = y.val;\n        break;\n      case '<vertAlign>':\n      case '<vertAlign/>':\n      case '</vertAlign>':\n        break;\n\n      /* 18.8.35 scheme CT_FontScheme TODO */\n      case '<scheme':\n        break;\n      case '<scheme>':\n      case '<scheme/>':\n      case '</scheme>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n    }\n  }\n  return font;\n}\nvar parse_rs = /*#__PURE__*/function () {\n  var tregex = matchtag(\"t\"),\n    rpregex = matchtag(\"rPr\");\n  /* 18.4.4 r CT_RElt */\n  function parse_r(r) {\n    /* 18.4.12 t ST_Xstring */\n    var t = r.match(tregex) /*, cp = 65001*/;\n    if (!t) return {\n      t: \"s\",\n      v: \"\"\n    };\n    var o /*:Cell*/ = {\n      t: 's',\n      v: unescapexml(t[1])\n    } /*:any*/;\n    var rpr = r.match(rpregex);\n    if (rpr) o.s = parse_rpr(rpr[1]);\n    return o;\n  }\n  var rregex = /<(?:\\w+:)?r>/g,\n    rend = /<\\/(?:\\w+:)?r>/;\n  return function parse_rs(rs) {\n    return rs.replace(rregex, \"\").split(rend).map(parse_r).filter(function (r) {\n      return r.v;\n    });\n  };\n}();\n\n/* Parse a list of <r> tags */\nvar rs_to_html = /*#__PURE__*/function parse_rs_factory() {\n  var nlregex = /(\\r\\n|\\n)/g;\n  function parse_rpr2(font, intro, outro) {\n    var style /*:Array<string>*/ = [];\n    if (font.u) style.push(\"text-decoration: underline;\");\n    if (font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n    if (font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n    if (font.outline) style.push(\"text-effect: outline;\");\n    if (font.shadow) style.push(\"text-shadow: auto;\");\n    intro.push('<span style=\"' + style.join(\"\") + '\">');\n    if (font.b) {\n      intro.push(\"<b>\");\n      outro.push(\"</b>\");\n    }\n    if (font.i) {\n      intro.push(\"<i>\");\n      outro.push(\"</i>\");\n    }\n    if (font.strike) {\n      intro.push(\"<s>\");\n      outro.push(\"</s>\");\n    }\n    var align = font.valign || \"\";\n    if (align == \"superscript\" || align == \"super\") align = \"sup\";else if (align == \"subscript\") align = \"sub\";\n    if (align != \"\") {\n      intro.push(\"<\" + align + \">\");\n      outro.push(\"</\" + align + \">\");\n    }\n    outro.push(\"</span>\");\n    return font;\n  }\n\n  /* 18.4.4 r CT_RElt */\n  function r_to_html(r) {\n    var terms /*:[Array<string>, string, Array<string>]*/ = [[], r.v, []];\n    if (!r.v) return \"\";\n    if (r.s) parse_rpr2(r.s, terms[0], terms[2]);\n    return terms[0].join(\"\") + terms[1].replace(nlregex, '<br/>') + terms[2].join(\"\");\n  }\n  return function parse_rs(rs) {\n    return rs.map(r_to_html).join(\"\");\n  };\n}();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g,\n  sirregex = /<(?:\\w+:)?r>/;\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\nfunction parse_si(x, opts) {\n  var html = opts ? opts.cellHTML : true;\n  var z = {};\n  if (!x) return {\n    t: \"\"\n  };\n  //var y;\n  /* 18.4.12 t ST_Xstring (Plaintext String) */\n  // TODO: is whitespace actually valid here?\n  if (x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n    z.t = unescapexml(utf8read(x.slice(x.indexOf(\">\") + 1).split(/<\\/(?:\\w+:)?t>/)[0] || \"\"));\n    z.r = utf8read(x);\n    if (html) z.h = escapehtml(z.t);\n  }\n  /* 18.4.4 r CT_RElt (Rich Text Run) */else if (( /*y = */x.match(sirregex))) {\n    z.r = utf8read(x);\n    z.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex) || []).join(\"\").replace(tagregex, \"\")));\n    if (html) z.h = rs_to_html(parse_rs(z.r));\n  }\n  /* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n  /* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n  return z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data /*:string*/, opts) /*:SST*/{\n  var s /*:SST*/ = [] /*:any*/,\n    ss = \"\";\n  if (!data) return s;\n  /* 18.4.9 sst CT_Sst */\n  var sst = data.match(sstr0);\n  if (sst) {\n    ss = sst[2].replace(sstr1, \"\").split(sstr2);\n    for (var i = 0; i != ss.length; ++i) {\n      var o = parse_si(ss[i].trim(), opts);\n      if (o != null) s[s.length] = o;\n    }\n    sst = parsexmltag(sst[1]);\n    s.Count = sst.count;\n    s.Unique = sst.uniqueCount;\n  }\n  return s;\n}\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst /*:SST*/, opts) /*:string*/{\n  if (!opts.bookSST) return \"\";\n  var o = [XML_HEADER];\n  o[o.length] = writextag('sst', null, {\n    xmlns: XMLNS_main[0],\n    count: sst.Count,\n    uniqueCount: sst.Unique\n  });\n  for (var i = 0; i != sst.length; ++i) {\n    if (sst[i] == null) continue;\n    var s /*:XLString*/ = sst[i];\n    var sitag = \"<si>\";\n    if (s.r) sitag += s.r;else {\n      sitag += \"<t\";\n      if (!s.t) s.t = \"\";\n      if (s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n      sitag += \">\" + escapexml(s.t) + \"</t>\";\n    }\n    sitag += \"</si>\";\n    o[o.length] = sitag;\n  }\n  if (o.length > 2) {\n    o[o.length] = '</sst>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n  return [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts) /*:SST*/{\n  var s /*:SST*/ = [] /*:any*/;\n  var pass = false;\n  recordhopper(data, function hopper_sst(val, R, RT) {\n    switch (RT) {\n      case 0x009F:\n        /* BrtBeginSst */\n        s.Count = val[0];\n        s.Unique = val[1];\n        break;\n      case 0x0013:\n        /* BrtSSTItem */\n        s.push(val);\n        break;\n      case 0x00A0:\n        /* BrtEndSst */\n        return true;\n      case 0x0023:\n        /* BrtFRTBegin */\n        pass = true;\n        break;\n      case 0x0024:\n        /* BrtFRTEnd */\n        pass = false;\n        break;\n      default:\n        if (R.T) {}\n        if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return s;\n}\nfunction write_BrtBeginSst(sst, o) {\n  if (!o) o = new_buf(8);\n  o.write_shift(4, sst.Count);\n  o.write_shift(4, sst.Unique);\n  return o;\n}\nvar write_BrtSSTItem = write_RichStr;\nfunction write_sst_bin(sst /*::, opts*/) {\n  var ba = buf_array();\n  write_record(ba, 0x009F /* BrtBeginSst */, write_BrtBeginSst(sst));\n  for (var i = 0; i < sst.length; ++i) write_record(ba, 0x0013 /* BrtSSTItem */, write_BrtSSTItem(sst[i]));\n  /* FRTSST */\n  write_record(ba, 0x00A0 /* BrtEndSst */);\n  return ba.end();\n}\nfunction _JS2ANSI(str /*:string*/) /*:Array<number>*/{\n  if (typeof $cptable !== 'undefined') return $cptable.utils.encode(current_ansi, str);\n  var o /*:Array<number>*/ = [],\n    oo = str.split(\"\");\n  for (var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length /*:?number*/) {\n  var o /*:any*/ = {};\n  o.Major = blob.read_shift(2);\n  o.Minor = blob.read_shift(2);\n  /*:: if(length == null) return o; */\n  if (length >= 4) blob.l += length - 4;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n  var o = {};\n  o.id = blob.read_shift(0, 'lpp4');\n  o.R = parse_CRYPTOVersion(blob, 4);\n  o.U = parse_CRYPTOVersion(blob, 4);\n  o.W = parse_CRYPTOVersion(blob, 4);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n  var len = blob.read_shift(4);\n  var end = blob.l + len - 4;\n  var o = {};\n  var cnt = blob.read_shift(4);\n  var comps /*:Array<{t:number, v:string}>*/ = [];\n  /* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n  while (cnt-- > 0) comps.push({\n    t: blob.read_shift(4),\n    v: blob.read_shift(0, 'lpp4')\n  });\n  o.name = blob.read_shift(0, 'lpp4');\n  o.comps = comps;\n  if (blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n  var o = [];\n  blob.l += 4; // must be 0x8\n  var cnt = blob.read_shift(4);\n  while (cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob) /*:Array<string>*/{\n  var o /*:Array<string>*/ = [];\n  blob.l += 4; // must be 0x8\n  var cnt = blob.read_shift(4);\n  while (cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n  var o = {};\n  /*var len = */\n  blob.read_shift(4);\n  blob.l += 4; // must be 0x1\n  o.id = blob.read_shift(0, 'lpp4');\n  o.name = blob.read_shift(0, 'lpp4');\n  o.R = parse_CRYPTOVersion(blob, 4);\n  o.U = parse_CRYPTOVersion(blob, 4);\n  o.W = parse_CRYPTOVersion(blob, 4);\n  return o;\n}\nfunction parse_Primary(blob) {\n  /* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n  var hdr = parse_TransformInfoHeader(blob);\n  /* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n  hdr.ename = blob.read_shift(0, '8lpp4');\n  hdr.blksz = blob.read_shift(4);\n  hdr.cmode = blob.read_shift(4);\n  if (blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n  return hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length /*:number*/) {\n  var tgt = blob.l + length;\n  var o = {};\n  o.Flags = blob.read_shift(4) & 0x3F;\n  blob.l += 4;\n  o.AlgID = blob.read_shift(4);\n  var valid = false;\n  switch (o.AlgID) {\n    case 0x660E:\n    case 0x660F:\n    case 0x6610:\n      valid = o.Flags == 0x24;\n      break;\n    case 0x6801:\n      valid = o.Flags == 0x04;\n      break;\n    case 0:\n      valid = o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24;\n      break;\n    default:\n      throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n  }\n  if (!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n  o.AlgIDHash = blob.read_shift(4);\n  o.KeySize = blob.read_shift(4);\n  o.ProviderType = blob.read_shift(4);\n  blob.l += 8;\n  o.CSPName = blob.read_shift(tgt - blob.l >> 1, 'utf16le');\n  blob.l = tgt;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length /*:number*/) {\n  var o = {},\n    tgt = blob.l + length;\n  blob.l += 4; // SaltSize must be 0x10\n  o.Salt = blob.slice(blob.l, blob.l + 16);\n  blob.l += 16;\n  o.Verifier = blob.slice(blob.l, blob.l + 16);\n  blob.l += 16;\n  /*var sz = */\n  blob.read_shift(4);\n  o.VerifierHash = blob.slice(blob.l, tgt);\n  blob.l = tgt;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n  var vers = parse_CRYPTOVersion(blob);\n  switch (vers.Minor) {\n    case 0x02:\n      return [vers.Minor, parse_EncInfoStd(blob, vers)];\n    case 0x03:\n      return [vers.Minor, parse_EncInfoExt(blob, vers)];\n    case 0x04:\n      return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n  }\n  throw new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob /*::, vers*/) {\n  var flags = blob.read_shift(4);\n  if ((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n  var sz = blob.read_shift(4);\n  //var tgt = blob.l + sz;\n  var hdr = parse_EncryptionHeader(blob, sz);\n  var verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n  return {\n    t: \"Std\",\n    h: hdr,\n    v: verifier\n  };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt( /*::blob, vers*/) {\n  throw new Error(\"File is password-protected: ECMA-376 Extensible\");\n}\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob /*::, vers*/) {\n  var KeyData = [\"saltSize\", \"blockSize\", \"keyBits\", \"hashSize\", \"cipherAlgorithm\", \"cipherChaining\", \"hashAlgorithm\", \"saltValue\"];\n  blob.l += 4;\n  var xml = blob.read_shift(blob.length - blob.l, 'utf8');\n  var o = {};\n  xml.replace(tagregex, function xml_agile(x) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n      case '<encryption':\n      case '</encryption>':\n        break;\n      case '<keyData':\n        KeyData.forEach(function (k) {\n          o[k] = y[k];\n        });\n        break;\n      case '<dataIntegrity':\n        o.encryptedHmacKey = y.encryptedHmacKey;\n        o.encryptedHmacValue = y.encryptedHmacValue;\n        break;\n      case '<keyEncryptors>':\n      case '<keyEncryptors':\n        o.encs = [];\n        break;\n      case '</keyEncryptors>':\n        break;\n      case '<keyEncryptor':\n        o.uri = y.uri;\n        break;\n      case '</keyEncryptor>':\n        break;\n      case '<encryptedKey':\n        o.encs.push(y);\n        break;\n      default:\n        throw y[0];\n    }\n  });\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length /*:number*/) {\n  var o = {};\n  var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n  length -= 4;\n  if (vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n  if (vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n  o.Flags = blob.read_shift(4);\n  length -= 4;\n  var sz = blob.read_shift(4);\n  length -= 4;\n  o.EncryptionHeader = parse_EncryptionHeader(blob, sz);\n  length -= sz;\n  o.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n  return o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob /*::, length*/) {\n  var o = {};\n  var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n  if (vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n  o.Salt = blob.read_shift(16);\n  o.EncryptedVerifier = blob.read_shift(16);\n  o.EncryptedVerifierHash = blob.read_shift(16);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password /*:string*/) {\n  var Verifier = 0x0000,\n    PasswordArray;\n  var PasswordDecoded = _JS2ANSI(Password);\n  var len = PasswordDecoded.length + 1,\n    i,\n    PasswordByte;\n  var Intermediate1, Intermediate2, Intermediate3;\n  PasswordArray = new_raw_buf(len);\n  PasswordArray[0] = PasswordDecoded.length;\n  for (i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i - 1];\n  for (i = len - 1; i >= 0; --i) {\n    PasswordByte = PasswordArray[i];\n    Intermediate1 = (Verifier & 0x4000) === 0x0000 ? 0 : 1;\n    Intermediate2 = Verifier << 1 & 0x7FFF;\n    Intermediate3 = Intermediate1 | Intermediate2;\n    Verifier = Intermediate3 ^ PasswordByte;\n  }\n  return Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = /*#__PURE__*/function () {\n  var PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n  var InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n  var XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n  var Ror = function (Byte) {\n    return (Byte / 2 | Byte * 128) & 0xFF;\n  };\n  var XorRor = function (byte1, byte2) {\n    return Ror(byte1 ^ byte2);\n  };\n  var CreateXorKey_Method1 = function (Password) {\n    var XorKey = InitialCode[Password.length - 1];\n    var CurrentElement = 0x68;\n    for (var i = Password.length - 1; i >= 0; --i) {\n      var Char = Password[i];\n      for (var j = 0; j != 7; ++j) {\n        if (Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n        Char *= 2;\n        --CurrentElement;\n      }\n    }\n    return XorKey;\n  };\n  return function (password /*:string*/) {\n    var Password = _JS2ANSI(password);\n    var XorKey = CreateXorKey_Method1(Password);\n    var Index = Password.length;\n    var ObfuscationArray = new_raw_buf(16);\n    for (var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n    var Temp, PasswordLastChar, PadIndex;\n    if ((Index & 1) === 1) {\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n      --Index;\n      Temp = XorKey & 0xFF;\n      PasswordLastChar = Password[Password.length - 1];\n      ObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n    }\n    while (Index > 0) {\n      --Index;\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n      --Index;\n      Temp = XorKey & 0xFF;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n    }\n    Index = 15;\n    PadIndex = 15 - Password.length;\n    while (PadIndex > 0) {\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n      --Index;\n      --PadIndex;\n      Temp = XorKey & 0xFF;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n      --Index;\n      --PadIndex;\n    }\n    return ObfuscationArray;\n  };\n}();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function (password /*:string*/, Data, XorArrayIndex, XorArray, O) {\n  /* If XorArray is set, use it; if O is not set, make changes in-place */\n  if (!O) O = Data;\n  if (!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n  var Index, Value;\n  for (Index = 0; Index != Data.length; ++Index) {\n    Value = Data[Index];\n    Value ^= XorArray[XorArrayIndex];\n    Value = (Value >> 5 | Value << 3) & 0xFF;\n    O[Index] = Value;\n    ++XorArrayIndex;\n  }\n  return [O, XorArrayIndex, XorArray];\n};\nvar crypto_MakeXorDecryptor = function (password /*:string*/) {\n  var XorArrayIndex = 0,\n    XorArray = crypto_CreateXorArray_Method1(password);\n  return function (Data) {\n    var O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n    XorArrayIndex = O[1];\n    return O[0];\n  };\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n  var o = {\n    key: parseuint16(blob),\n    verificationBytes: parseuint16(blob)\n  } /*:any*/;\n  if (opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n  out.valid = o.verificationBytes === o.verifier;\n  if (out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n  return o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length /*:number*/, oo) {\n  var o = oo || {};\n  o.Info = blob.read_shift(2);\n  blob.l -= 2;\n  if (o.Info === 1) o.Data = parse_RC4Header(blob, length);else o.Data = parse_RC4CryptoHeader(blob, length);\n  return o;\n}\nfunction parse_FilePass(blob, length /*:number*/, opts) {\n  var o = {\n    Type: opts.biff >= 8 ? blob.read_shift(2) : 0\n  } /*:any*/; /* wEncryptionType */\n  if (o.Type) parse_FilePassHeader(blob, length - 2, o);else parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n  return o;\n}\nvar RTF = /*#__PURE__*/function () {\n  function rtf_to_sheet(d /*:RawData*/, opts) /*:Worksheet*/{\n    switch (opts.type) {\n      case 'base64':\n        return rtf_to_sheet_str(Base64_decode(d), opts);\n      case 'binary':\n        return rtf_to_sheet_str(d, opts);\n      case 'buffer':\n        return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n      case 'array':\n        return rtf_to_sheet_str(cc2str(d), opts);\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n\n  /* TODO: this is a stub */\n  function rtf_to_sheet_str(str /*:string*/, opts) /*:Worksheet*/{\n    var o = opts || {};\n    var ws /*:Worksheet*/ = o.dense ? [] /*:any*/ : {} /*:any*/;\n    var rows = str.match(/\\\\trowd.*?\\\\row\\b/g);\n    if (!rows.length) throw new Error(\"RTF missing table\");\n    var range /*:Range*/ = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: 0,\n        r: rows.length - 1\n      }\n    } /*:any*/;\n    rows.forEach(function (rowtf, R) {\n      if (Array.isArray(ws)) ws[R] = [];\n      var rtfre = /\\\\\\w+\\b/g;\n      var last_index = 0;\n      var res;\n      var C = -1;\n      while (res = rtfre.exec(rowtf)) {\n        switch (res[0]) {\n          case \"\\\\cell\":\n            var data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n            if (data[0] == \" \") data = data.slice(1);\n            ++C;\n            if (data.length) {\n              // TODO: value parsing, including codepage adjustments\n              var cell = {\n                v: data,\n                t: \"s\"\n              };\n              if (Array.isArray(ws)) ws[R][C] = cell;else ws[encode_cell({\n                r: R,\n                c: C\n              })] = cell;\n            }\n            break;\n        }\n        last_index = rtfre.lastIndex;\n      }\n      if (C > range.e.c) range.e.c = C;\n    });\n    ws['!ref'] = encode_range(range);\n    return ws;\n  }\n  function rtf_to_workbook(d /*:RawData*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(rtf_to_sheet(d, opts), opts);\n  }\n\n  /* TODO: this is a stub */\n  function sheet_to_rtf(ws /*:Worksheet*/ /*::, opts*/) /*:string*/{\n    var o = [\"{\\\\rtf1\\\\ansi\"];\n    var r = safe_decode_range(ws['!ref']),\n      cell /*:Cell*/;\n    var dense = Array.isArray(ws);\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      o.push(\"\\\\trowd\\\\trautofit1\");\n      for (var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C + 1));\n      o.push(\"\\\\pard\\\\intbl\");\n      for (C = r.s.c; C <= r.e.c; ++C) {\n        var coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null && (!cell.f || cell.F)) continue;\n        o.push(\" \" + (cell.w || (format_cell(cell), cell.w)));\n        o.push(\"\\\\cell\");\n      }\n      o.push(\"\\\\pard\\\\intbl\\\\row\");\n    }\n    return o.join(\"\") + \"}\";\n  }\n  return {\n    to_workbook: rtf_to_workbook,\n    to_sheet: rtf_to_sheet,\n    from_sheet: sheet_to_rtf\n  };\n}();\nfunction hex2RGB(h) {\n  var o = h.slice(h[0] === \"#\" ? 1 : 0).slice(0, 6);\n  return [parseInt(o.slice(0, 2), 16), parseInt(o.slice(2, 4), 16), parseInt(o.slice(4, 6), 16)];\n}\nfunction rgb2Hex(rgb) {\n  for (var i = 0, o = 1; i != 3; ++i) o = o * 256 + (rgb[i] > 255 ? 255 : rgb[i] < 0 ? 0 : rgb[i]);\n  return o.toString(16).toUpperCase().slice(1);\n}\nfunction rgb2HSL(rgb) {\n  var R = rgb[0] / 255,\n    G = rgb[1] / 255,\n    B = rgb[2] / 255;\n  var M = Math.max(R, G, B),\n    m = Math.min(R, G, B),\n    C = M - m;\n  if (C === 0) return [0, 0, R];\n  var H6 = 0,\n    S = 0,\n    L2 = M + m;\n  S = C / (L2 > 1 ? 2 - L2 : L2);\n  switch (M) {\n    case R:\n      H6 = ((G - B) / C + 6) % 6;\n      break;\n    case G:\n      H6 = (B - R) / C + 2;\n      break;\n    case B:\n      H6 = (R - G) / C + 4;\n      break;\n  }\n  return [H6 / 6, S, L2 / 2];\n}\nfunction hsl2RGB(hsl) {\n  var H = hsl[0],\n    S = hsl[1],\n    L = hsl[2];\n  var C = S * 2 * (L < 0.5 ? L : 1 - L),\n    m = L - C / 2;\n  var rgb = [m, m, m],\n    h6 = 6 * H;\n  var X;\n  if (S !== 0) switch (h6 | 0) {\n    case 0:\n    case 6:\n      X = C * h6;\n      rgb[0] += C;\n      rgb[1] += X;\n      break;\n    case 1:\n      X = C * (2 - h6);\n      rgb[0] += X;\n      rgb[1] += C;\n      break;\n    case 2:\n      X = C * (h6 - 2);\n      rgb[1] += C;\n      rgb[2] += X;\n      break;\n    case 3:\n      X = C * (4 - h6);\n      rgb[1] += X;\n      rgb[2] += C;\n      break;\n    case 4:\n      X = C * (h6 - 4);\n      rgb[2] += C;\n      rgb[0] += X;\n      break;\n    case 5:\n      X = C * (6 - h6);\n      rgb[2] += X;\n      rgb[0] += C;\n      break;\n  }\n  for (var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i] * 255);\n  return rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n  if (tint === 0) return hex;\n  var hsl = rgb2HSL(hex2RGB(hex));\n  if (tint < 0) hsl[2] = hsl[2] * (1 + tint);else hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n  return rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6,\n  MAX_MDW = 15,\n  MIN_MDW = 1,\n  MDW = DEF_MDW;\nfunction width2px(width) {\n  return Math.floor((width + Math.round(128 / MDW) / 256) * MDW);\n}\nfunction px2char(px) {\n  return Math.floor((px - 5) / MDW * 100 + 0.5) / 100;\n}\nfunction char2width(chr) {\n  return Math.round((chr * MDW + 5) / MDW * 256) / 256;\n}\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) {\n  return char2width(px2char(width2px(collw)));\n}\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n  var delta = Math.abs(collw - cycle_width(collw)),\n    _MDW = MDW;\n  if (delta > 0.005) for (MDW = MIN_MDW; MDW < MAX_MDW; ++MDW) if (Math.abs(collw - cycle_width(collw)) <= delta) {\n    delta = Math.abs(collw - cycle_width(collw));\n    _MDW = MDW;\n  }\n  MDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll /*:ColInfo*/) {\n  if (coll.width) {\n    coll.wpx = width2px(coll.width);\n    coll.wch = px2char(coll.wpx);\n    coll.MDW = MDW;\n  } else if (coll.wpx) {\n    coll.wch = px2char(coll.wpx);\n    coll.width = char2width(coll.wch);\n    coll.MDW = MDW;\n  } else if (typeof coll.wch == 'number') {\n    coll.width = char2width(coll.wch);\n    coll.wpx = width2px(coll.width);\n    coll.MDW = MDW;\n  }\n  if (coll.customWidth) delete coll.customWidth;\n}\nvar DEF_PPI = 96,\n  PPI = DEF_PPI;\nfunction px2pt(px) {\n  return px * 96 / PPI;\n}\nfunction pt2px(pt) {\n  return pt * PPI / 96;\n}\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n  \"None\": \"none\",\n  \"Solid\": \"solid\",\n  \"Gray50\": \"mediumGray\",\n  \"Gray75\": \"darkGray\",\n  \"Gray25\": \"lightGray\",\n  \"HorzStripe\": \"darkHorizontal\",\n  \"VertStripe\": \"darkVertical\",\n  \"ReverseDiagStripe\": \"darkDown\",\n  \"DiagStripe\": \"darkUp\",\n  \"DiagCross\": \"darkGrid\",\n  \"ThickDiagCross\": \"darkTrellis\",\n  \"ThinHorzStripe\": \"lightHorizontal\",\n  \"ThinVertStripe\": \"lightVertical\",\n  \"ThinReverseDiagStripe\": \"lightDown\",\n  \"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n  styles.Borders = [];\n  var border = {};\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<borders':\n      case '<borders>':\n      case '</borders>':\n        break;\n\n      /* 18.8.4 border CT_Border */\n      case '<border':\n      case '<border>':\n      case '<border/>':\n        border = /*::(*/{} /*:: :any)*/;\n        if (y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n        if (y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n        styles.Borders.push(border);\n        break;\n      case '</border>':\n        break;\n\n      /* note: not in spec, appears to be CT_BorderPr */\n      case '<left/>':\n        break;\n      case '<left':\n      case '<left>':\n        break;\n      case '</left>':\n        break;\n\n      /* note: not in spec, appears to be CT_BorderPr */\n      case '<right/>':\n        break;\n      case '<right':\n      case '<right>':\n        break;\n      case '</right>':\n        break;\n\n      /* 18.8.43 top CT_BorderPr */\n      case '<top/>':\n        break;\n      case '<top':\n      case '<top>':\n        break;\n      case '</top>':\n        break;\n\n      /* 18.8.6 bottom CT_BorderPr */\n      case '<bottom/>':\n        break;\n      case '<bottom':\n      case '<bottom>':\n        break;\n      case '</bottom>':\n        break;\n\n      /* 18.8.13 diagonal CT_BorderPr */\n      case '<diagonal':\n      case '<diagonal>':\n      case '<diagonal/>':\n        break;\n      case '</diagonal>':\n        break;\n\n      /* 18.8.25 horizontal CT_BorderPr */\n      case '<horizontal':\n      case '<horizontal>':\n      case '<horizontal/>':\n        break;\n      case '</horizontal>':\n        break;\n\n      /* 18.8.44 vertical CT_BorderPr */\n      case '<vertical':\n      case '<vertical>':\n      case '<vertical/>':\n        break;\n      case '</vertical>':\n        break;\n\n      /* 18.8.37 start CT_BorderPr */\n      case '<start':\n      case '<start>':\n      case '<start/>':\n        break;\n      case '</start>':\n        break;\n\n      /* 18.8.16 end CT_BorderPr */\n      case '<end':\n      case '<end>':\n      case '<end/>':\n        break;\n      case '</end>':\n        break;\n\n      /* 18.8.? color CT_Color */\n      case '<color':\n      case '<color>':\n        break;\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n        }\n    }\n  });\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n  styles.Fills = [];\n  var fill = {};\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<fills':\n      case '<fills>':\n      case '</fills>':\n        break;\n\n      /* 18.8.20 fill CT_Fill */\n      case '<fill>':\n      case '<fill':\n      case '<fill/>':\n        fill = {};\n        styles.Fills.push(fill);\n        break;\n      case '</fill>':\n        break;\n\n      /* 18.8.24 gradientFill CT_GradientFill */\n      case '<gradientFill>':\n        break;\n      case '<gradientFill':\n      case '</gradientFill>':\n        styles.Fills.push(fill);\n        fill = {};\n        break;\n\n      /* 18.8.32 patternFill CT_PatternFill */\n      case '<patternFill':\n      case '<patternFill>':\n        if (y.patternType) fill.patternType = y.patternType;\n        break;\n      case '<patternFill/>':\n      case '</patternFill>':\n        break;\n\n      /* 18.8.3 bgColor CT_Color */\n      case '<bgColor':\n        if (!fill.bgColor) fill.bgColor = {};\n        if (y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n        if (y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n        if (y.tint) fill.bgColor.tint = parseFloat(y.tint);\n        /* Excel uses ARGB strings */\n        if (y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n        break;\n      case '<bgColor/>':\n      case '</bgColor>':\n        break;\n\n      /* 18.8.19 fgColor CT_Color */\n      case '<fgColor':\n        if (!fill.fgColor) fill.fgColor = {};\n        if (y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n        if (y.tint) fill.fgColor.tint = parseFloat(y.tint);\n        /* Excel uses ARGB strings */\n        if (y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n        break;\n      case '<fgColor/>':\n      case '</fgColor>':\n        break;\n\n      /* 18.8.38 stop CT_GradientStop */\n      case '<stop':\n      case '<stop/>':\n        break;\n      case '</stop>':\n        break;\n\n      /* 18.8.? color CT_Color */\n      case '<color':\n      case '<color/>':\n        break;\n      case '</color>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n        }\n    }\n  });\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n  styles.Fonts = [];\n  var font = {};\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<fonts':\n      case '<fonts>':\n      case '</fonts>':\n        break;\n\n      /* 18.8.22 font CT_Font */\n      case '<font':\n      case '<font>':\n        break;\n      case '</font>':\n      case '<font/>':\n        styles.Fonts.push(font);\n        font = {};\n        break;\n\n      /* 18.8.29 name CT_FontName */\n      case '<name':\n        if (y.val) font.name = utf8read(y.val);\n        break;\n      case '<name/>':\n      case '</name>':\n        break;\n\n      /* 18.8.2  b CT_BooleanProperty */\n      case '<b':\n        font.bold = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<b/>':\n        font.bold = 1;\n        break;\n\n      /* 18.8.26 i CT_BooleanProperty */\n      case '<i':\n        font.italic = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<i/>':\n        font.italic = 1;\n        break;\n\n      /* 18.4.13 u CT_UnderlineProperty */\n      case '<u':\n        switch (y.val) {\n          case \"none\":\n            font.underline = 0x00;\n            break;\n          case \"single\":\n            font.underline = 0x01;\n            break;\n          case \"double\":\n            font.underline = 0x02;\n            break;\n          case \"singleAccounting\":\n            font.underline = 0x21;\n            break;\n          case \"doubleAccounting\":\n            font.underline = 0x22;\n            break;\n        }\n        break;\n      case '<u/>':\n        font.underline = 1;\n        break;\n\n      /* 18.4.10 strike CT_BooleanProperty */\n      case '<strike':\n        font.strike = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<strike/>':\n        font.strike = 1;\n        break;\n\n      /* 18.4.2  outline CT_BooleanProperty */\n      case '<outline':\n        font.outline = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<outline/>':\n        font.outline = 1;\n        break;\n\n      /* 18.8.36 shadow CT_BooleanProperty */\n      case '<shadow':\n        font.shadow = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<shadow/>':\n        font.shadow = 1;\n        break;\n\n      /* 18.8.12 condense CT_BooleanProperty */\n      case '<condense':\n        font.condense = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<condense/>':\n        font.condense = 1;\n        break;\n\n      /* 18.8.17 extend CT_BooleanProperty */\n      case '<extend':\n        font.extend = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<extend/>':\n        font.extend = 1;\n        break;\n\n      /* 18.4.11 sz CT_FontSize */\n      case '<sz':\n        if (y.val) font.sz = +y.val;\n        break;\n      case '<sz/>':\n      case '</sz>':\n        break;\n\n      /* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n      case '<vertAlign':\n        if (y.val) font.vertAlign = y.val;\n        break;\n      case '<vertAlign/>':\n      case '</vertAlign>':\n        break;\n\n      /* 18.8.18 family CT_FontFamily */\n      case '<family':\n        if (y.val) font.family = parseInt(y.val, 10);\n        break;\n      case '<family/>':\n      case '</family>':\n        break;\n\n      /* 18.8.35 scheme CT_FontScheme */\n      case '<scheme':\n        if (y.val) font.scheme = y.val;\n        break;\n      case '<scheme/>':\n      case '</scheme>':\n        break;\n\n      /* 18.4.1 charset CT_IntProperty */\n      case '<charset':\n        if (y.val == '1') break;\n        y.codepage = CS2CP[parseInt(y.val, 10)];\n        break;\n\n      /* 18.?.? color CT_Color */\n      case '<color':\n        if (!font.color) font.color = {};\n        if (y.auto) font.color.auto = parsexmlbool(y.auto);\n        if (y.rgb) font.color.rgb = y.rgb.slice(-6);else if (y.indexed) {\n          font.color.index = parseInt(y.indexed, 10);\n          var icv = XLSIcv[font.color.index];\n          if (font.color.index == 81) icv = XLSIcv[1];\n          if (!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n          font.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n        } else if (y.theme) {\n          font.color.theme = parseInt(y.theme, 10);\n          if (y.tint) font.color.tint = parseFloat(y.tint);\n          if (y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n            font.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n          }\n        }\n        break;\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* note: sometimes mc:AlternateContent appears bare */\n      case '<AlternateContent':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n        }\n    }\n  });\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n  styles.NumberFmt = [];\n  var k /*Array<number>*/ = keys(table_fmt) /*:any*/;\n  for (var i = 0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];\n  var m = t[0].match(tagregex);\n  if (!m) return;\n  for (i = 0; i < m.length; ++i) {\n    var y = parsexmltag(m[i]);\n    switch (strip_ns(y[0])) {\n      case '<numFmts':\n      case '</numFmts>':\n      case '<numFmts/>':\n      case '<numFmts>':\n        break;\n      case '<numFmt':\n        {\n          var f = unescapexml(utf8read(y.formatCode)),\n            j = parseInt(y.numFmtId, 10);\n          styles.NumberFmt[j] = f;\n          if (j > 0) {\n            if (j > 0x188) {\n              for (j = 0x188; j > 0x3c; --j) if (styles.NumberFmt[j] == null) break;\n              styles.NumberFmt[j] = f;\n            }\n            SSF_load(f, j);\n          }\n        }\n        break;\n      case '</numFmt>':\n        break;\n      default:\n        if (opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n    }\n  }\n}\nfunction write_numFmts(NF /*:{[n:number|string]:string}*/ /*::, opts*/) {\n  var o = [\"<numFmts>\"];\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) o[o.length] = writextag('numFmt', null, {\n      numFmtId: i,\n      formatCode: escapexml(NF[i])\n    });\n  });\n  if (o.length === 1) return \"\";\n  o[o.length] = \"</numFmts>\";\n  o[0] = writextag('numFmts', null, {\n    count: o.length - 2\n  }).replace(\"/>\", \">\");\n  return o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [\"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\"];\nvar cellXF_bool = [\"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\"];\nfunction parse_cellXfs(t, styles, opts) {\n  styles.CellXf = [];\n  var xf;\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x),\n      i = 0;\n    switch (strip_ns(y[0])) {\n      case '<cellXfs':\n      case '<cellXfs>':\n      case '<cellXfs/>':\n      case '</cellXfs>':\n        break;\n\n      /* 18.8.45 xf CT_Xf */\n      case '<xf':\n      case '<xf/>':\n        xf = y;\n        delete xf[0];\n        for (i = 0; i < cellXF_uint.length; ++i) if (xf[cellXF_uint[i]]) xf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n        for (i = 0; i < cellXF_bool.length; ++i) if (xf[cellXF_bool[i]]) xf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n        if (styles.NumberFmt && xf.numFmtId > 0x188) {\n          for (i = 0x188; i > 0x3c; --i) if (styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) {\n            xf.numFmtId = i;\n            break;\n          }\n        }\n        styles.CellXf.push(xf);\n        break;\n      case '</xf>':\n        break;\n\n      /* 18.8.1 alignment CT_CellAlignment */\n      case '<alignment':\n      case '<alignment/>':\n        var alignment = {};\n        if (y.vertical) alignment.vertical = y.vertical;\n        if (y.horizontal) alignment.horizontal = y.horizontal;\n        if (y.textRotation != null) alignment.textRotation = y.textRotation;\n        if (y.indent) alignment.indent = y.indent;\n        if (y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n        xf.alignment = alignment;\n        break;\n      case '</alignment>':\n        break;\n\n      /* 18.8.33 protection CT_CellProtection */\n      case '<protection':\n        break;\n      case '</protection>':\n      case '<protection/>':\n        break;\n\n      /* note: sometimes mc:AlternateContent appears bare */\n      case '<AlternateContent':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n        }\n    }\n  });\n}\nfunction write_cellXfs(cellXfs) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  o[o.length] = writextag('cellXfs', null);\n  cellXfs.forEach(function (c) {\n    o[o.length] = writextag('xf', null, c);\n  });\n  o[o.length] = \"</cellXfs>\";\n  if (o.length === 2) return \"\";\n  o[0] = writextag('cellXfs', null, {\n    count: o.length - 2\n  }).replace(\"/>\", \">\");\n  return o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml = /*#__PURE__*/function make_pstyx() {\n  var numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\n  var cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\n  var fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\n  var fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\n  var bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n  return function parse_sty_xml(data, themes, opts) {\n    var styles = {};\n    if (!data) return styles;\n    data = data.replace(/<!--([\\s\\S]*?)-->/mg, \"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm, \"\");\n    /* 18.8.39 styleSheet CT_Stylesheet */\n    var t;\n\n    /* 18.8.31 numFmts CT_NumFmts ? */\n    if (t = data.match(numFmtRegex)) parse_numFmts(t, styles, opts);\n\n    /* 18.8.23 fonts CT_Fonts ? */\n    if (t = data.match(fontsRegex)) parse_fonts(t, styles, themes, opts);\n\n    /* 18.8.21 fills CT_Fills ? */\n    if (t = data.match(fillsRegex)) parse_fills(t, styles, themes, opts);\n\n    /* 18.8.5  borders CT_Borders ? */\n    if (t = data.match(bordersRegex)) parse_borders(t, styles, themes, opts);\n\n    /* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n    /* 18.8.8  cellStyles CT_CellStyles ? */\n\n    /* 18.8.10 cellXfs CT_CellXfs ? */\n    if (t = data.match(cellXfRegex)) parse_cellXfs(t, styles, opts);\n\n    /* 18.8.15 dxfs CT_Dxfs ? */\n    /* 18.8.42 tableStyles CT_TableStyles ? */\n    /* 18.8.11 colors CT_Colors ? */\n    /* 18.2.10 extLst CT_ExtensionList ? */\n\n    return styles;\n  };\n}();\nfunction write_sty_xml(wb /*:Workbook*/, opts) /*:string*/{\n  var o = [XML_HEADER, writextag('styleSheet', null, {\n      'xmlns': XMLNS_main[0],\n      'xmlns:vt': XMLNS.vt\n    })],\n    w;\n  if (wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n  o[o.length] = '<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>';\n  o[o.length] = '<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>';\n  o[o.length] = '<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>';\n  o[o.length] = '<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>';\n  if (w = write_cellXfs(opts.cellXfs)) o[o.length] = w;\n  o[o.length] = '<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>';\n  o[o.length] = '<dxfs count=\"0\"/>';\n  o[o.length] = '<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>';\n  if (o.length > 2) {\n    o[o.length] = '</styleSheet>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length /*:number*/) {\n  var numFmtId = data.read_shift(2);\n  var stFmtCode = parse_XLWideString(data, length - 2);\n  return [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i /*:number*/, f /*:string*/, o) {\n  if (!o) o = new_buf(6 + 4 * f.length);\n  o.write_shift(2, i);\n  write_XLWideString(f, o);\n  var out = o.length > o.l ? o.slice(0, o.l) : o;\n  if (o.l == null) o.l = o.length;\n  return out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length /*:number*/, opts) {\n  var out = {} /*:any*/;\n  out.sz = data.read_shift(2) / 20;\n  var grbit = parse_FontFlags(data, 2, opts);\n  if (grbit.fItalic) out.italic = 1;\n  if (grbit.fCondense) out.condense = 1;\n  if (grbit.fExtend) out.extend = 1;\n  if (grbit.fShadow) out.shadow = 1;\n  if (grbit.fOutline) out.outline = 1;\n  if (grbit.fStrikeout) out.strike = 1;\n  var bls = data.read_shift(2);\n  if (bls === 0x02BC) out.bold = 1;\n  switch (data.read_shift(2)) {\n    /* case 0: out.vertAlign = \"baseline\"; break; */\n    case 1:\n      out.vertAlign = \"superscript\";\n      break;\n    case 2:\n      out.vertAlign = \"subscript\";\n      break;\n  }\n  var underline = data.read_shift(1);\n  if (underline != 0) out.underline = underline;\n  var family = data.read_shift(1);\n  if (family > 0) out.family = family;\n  var bCharSet = data.read_shift(1);\n  if (bCharSet > 0) out.charset = bCharSet;\n  data.l++;\n  out.color = parse_BrtColor(data, 8);\n  switch (data.read_shift(1)) {\n    /* case 0: out.scheme = \"none\": break; */\n    case 1:\n      out.scheme = \"major\";\n      break;\n    case 2:\n      out.scheme = \"minor\";\n      break;\n  }\n  out.name = parse_XLWideString(data, length - 21);\n  return out;\n}\nfunction write_BrtFont(font /*:any*/, o) {\n  if (!o) o = new_buf(25 + 4 * 32);\n  o.write_shift(2, font.sz * 20);\n  write_FontFlags(font, o);\n  o.write_shift(2, font.bold ? 0x02BC : 0x0190);\n  var sss = 0;\n  if (font.vertAlign == \"superscript\") sss = 1;else if (font.vertAlign == \"subscript\") sss = 2;\n  o.write_shift(2, sss);\n  o.write_shift(1, font.underline || 0);\n  o.write_shift(1, font.family || 0);\n  o.write_shift(1, font.charset || 0);\n  o.write_shift(1, 0);\n  write_BrtColor(font.color, o);\n  var scheme = 0;\n  if (font.scheme == \"major\") scheme = 1;\n  if (font.scheme == \"minor\") scheme = 2;\n  o.write_shift(1, scheme);\n  write_XLWideString(font.name, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\"none\", \"solid\", \"mediumGray\", \"darkGray\", \"lightGray\", \"darkHorizontal\", \"darkVertical\", \"darkDown\", \"darkUp\", \"darkGrid\", \"darkTrellis\", \"lightHorizontal\", \"lightVertical\", \"lightDown\", \"lightUp\", \"lightGrid\", \"lightTrellis\", \"gray125\", \"gray0625\"];\nvar rev_XLSBFillPTNames /*:EvertNumType*/;\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n  if (!o) o = new_buf(4 * 3 + 8 * 7 + 16 * 1);\n  if (!rev_XLSBFillPTNames) rev_XLSBFillPTNames = evert(XLSBFillPTNames) /*:any*/;\n  var fls /*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n  if (fls == null) fls = 0x28;\n  o.write_shift(4, fls);\n  var j = 0;\n  if (fls != 0x28) {\n    /* TODO: custom FG Color */\n    write_BrtColor({\n      auto: 1\n    }, o);\n    /* TODO: custom BG Color */\n    write_BrtColor({\n      auto: 1\n    }, o);\n    for (; j < 12; ++j) o.write_shift(4, 0);\n  } else {\n    for (; j < 4; ++j) o.write_shift(4, 0);\n    for (; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n    /* iGradientType */\n    /* xnumDegree */\n    /* xnumFillToLeft */\n    /* xnumFillToRight */\n    /* xnumFillToTop */\n    /* xnumFillToBottom */\n    /* cNumStop */\n    /* xfillGradientStop */\n  }\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length /*:number*/) {\n  var tgt = data.l + length;\n  var ixfeParent = data.read_shift(2);\n  var ifmt = data.read_shift(2);\n  data.l = tgt;\n  return {\n    ixfe: ixfeParent,\n    numFmtId: ifmt\n  };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n  if (!o) o = new_buf(16);\n  o.write_shift(2, ixfeP || 0);\n  o.write_shift(2, data.numFmtId || 0);\n  o.write_shift(2, 0); /* iFont */\n  o.write_shift(2, 0); /* iFill */\n  o.write_shift(2, 0); /* ixBorder */\n  o.write_shift(1, 0); /* trot */\n  o.write_shift(1, 0); /* indent */\n  var flow = 0;\n  o.write_shift(1, flow); /* flags */\n  o.write_shift(1, 0); /* flags */\n  o.write_shift(1, 0); /* xfGrbitAtr */\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n  if (!o) o = new_buf(10);\n  o.write_shift(1, 0); /* dg */\n  o.write_shift(1, 0);\n  o.write_shift(4, 0); /* color */\n  o.write_shift(4, 0); /* color */\n  return o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n  if (!o) o = new_buf(51);\n  o.write_shift(1, 0); /* diagonal */\n  write_Blxf(null, o); /* top */\n  write_Blxf(null, o); /* bottom */\n  write_Blxf(null, o); /* left */\n  write_Blxf(null, o); /* right */\n  write_Blxf(null, o); /* diag */\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n  if (!o) o = new_buf(12 + 4 * 10);\n  o.write_shift(4, style.xfId);\n  o.write_shift(2, 1);\n  o.write_shift(1, +style.builtinId);\n  o.write_shift(1, 0); /* iLevel */\n  write_XLNullableWideString(style.name || \"\", o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n  var o = new_buf(4 + 256 * 2 * 4);\n  o.write_shift(4, cnt);\n  write_XLNullableWideString(defTableStyle, o);\n  write_XLNullableWideString(defPivotStyle, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n  var styles = {};\n  styles.NumberFmt = [] /*:any*/;\n  for (var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];\n  styles.CellXf = [];\n  styles.Fonts = [];\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  recordhopper(data, function hopper_sty(val, R, RT) {\n    switch (RT) {\n      case 0x002C:\n        /* BrtFmt */\n        styles.NumberFmt[val[0]] = val[1];\n        SSF_load(val[1], val[0]);\n        break;\n      case 0x002B:\n        /* BrtFont */\n        styles.Fonts.push(val);\n        if (val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n          val.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n        }\n        break;\n      case 0x0401:\n        /* BrtKnownFonts */break;\n      case 0x002D:\n        /* BrtFill */\n        break;\n      case 0x002E:\n        /* BrtBorder */\n        break;\n      case 0x002F:\n        /* BrtXF */\n        if (state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {\n          styles.CellXf.push(val);\n        }\n        break;\n      case 0x0030: /* BrtStyle */\n      case 0x01FB: /* BrtDXF */\n      case 0x023C: /* BrtMRUColor */\n      case 0x01DB:\n        /* BrtIndexedColor */\n        break;\n      case 0x0493: /* BrtDXF14 */\n      case 0x0836: /* BrtDXF15 */\n      case 0x046A: /* BrtSlicerStyleElement */\n      case 0x0200: /* BrtTableStyleElement */\n      case 0x082F: /* BrtTimelineStyleElement */\n      case 0x0C00:\n        /* BrtUid */\n        break;\n      case 0x0023:\n        /* BrtFRTBegin */\n        pass = true;\n        break;\n      case 0x0024:\n        /* BrtFRTEnd */\n        pass = false;\n        break;\n      case 0x0025:\n        /* BrtACBegin */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* BrtACEnd */\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T > 0) state.push(RT);else if (R.T < 0) state.pop();else if (!pass || opts.WTF && state[state.length - 1] != 0x0025 /* BrtACBegin */) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return styles;\n}\nfunction write_FMTS_bin(ba, NF /*:?SSFTable*/) {\n  if (!NF) return;\n  var cnt = 0;\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) ++cnt;\n  });\n  if (cnt == 0) return;\n  write_record(ba, 0x0267 /* BrtBeginFmts */, write_UInt32LE(cnt));\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) write_record(ba, 0x002C /* BrtFmt */, write_BrtFmt(i, NF[i]));\n  });\n  write_record(ba, 0x0268 /* BrtEndFmts */);\n}\nfunction write_FONTS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  if (cnt == 0) return;\n  write_record(ba, 0x0263 /* BrtBeginFonts */, write_UInt32LE(cnt));\n  write_record(ba, 0x002B /* BrtFont */, write_BrtFont({\n    sz: 12,\n    color: {\n      theme: 1\n    },\n    name: \"Calibri\",\n    family: 2,\n    scheme: \"minor\"\n  }));\n  /* 1*65491BrtFont [ACFONTS] */\n  write_record(ba, 0x0264 /* BrtEndFonts */);\n}\nfunction write_FILLS_bin(ba /*::, data*/) {\n  var cnt = 2;\n  if (cnt == 0) return;\n  write_record(ba, 0x025B /* BrtBeginFills */, write_UInt32LE(cnt));\n  write_record(ba, 0x002D /* BrtFill */, write_BrtFill({\n    patternType: \"none\"\n  }));\n  write_record(ba, 0x002D /* BrtFill */, write_BrtFill({\n    patternType: \"gray125\"\n  }));\n  /* 1*65431BrtFill */\n  write_record(ba, 0x025C /* BrtEndFills */);\n}\nfunction write_BORDERS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  if (cnt == 0) return;\n  write_record(ba, 0x0265 /* BrtBeginBorders */, write_UInt32LE(cnt));\n  write_record(ba, 0x002E /* BrtBorder */, write_BrtBorder({}));\n  /* 1*65430BrtBorder */\n  write_record(ba, 0x0266 /* BrtEndBorders */);\n}\nfunction write_CELLSTYLEXFS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x0272 /* BrtBeginCellStyleXFs */, write_UInt32LE(cnt));\n  write_record(ba, 0x002F /* BrtXF */, write_BrtXF({\n    numFmtId: 0,\n    fontId: 0,\n    fillId: 0,\n    borderId: 0\n  }, 0xFFFF));\n  /* 1*65430(BrtXF *FRT) */\n  write_record(ba, 0x0273 /* BrtEndCellStyleXFs */);\n}\nfunction write_CELLXFS_bin(ba, data) {\n  write_record(ba, 0x0269 /* BrtBeginCellXFs */, write_UInt32LE(data.length));\n  data.forEach(function (c) {\n    write_record(ba, 0x002F /* BrtXF */, write_BrtXF(c, 0));\n  });\n  /* 1*65430(BrtXF *FRT) */\n  write_record(ba, 0x026A /* BrtEndCellXFs */);\n}\nfunction write_STYLES_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x026B /* BrtBeginStyles */, write_UInt32LE(cnt));\n  write_record(ba, 0x0030 /* BrtStyle */, write_BrtStyle({\n    xfId: 0,\n    builtinId: 0,\n    name: \"Normal\"\n  }));\n  /* 1*65430(BrtStyle *FRT) */\n  write_record(ba, 0x026C /* BrtEndStyles */);\n}\nfunction write_DXFS_bin(ba /*::, data*/) {\n  var cnt = 0;\n  write_record(ba, 0x01F9 /* BrtBeginDXFs */, write_UInt32LE(cnt));\n  /* *2147483647(BrtDXF *FRT) */\n  write_record(ba, 0x01FA /* BrtEndDXFs */);\n}\nfunction write_TABLESTYLES_bin(ba /*::, data*/) {\n  var cnt = 0;\n  write_record(ba, 0x01FC /* BrtBeginTableStyles */, write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n  /* *TABLESTYLE */\n  write_record(ba, 0x01FD /* BrtEndTableStyles */);\n}\nfunction write_COLORPALETTE_bin( /*::ba, data*/\n) {\n  return;\n  /* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n  var ba = buf_array();\n  write_record(ba, 0x0116 /* BrtBeginStyleSheet */);\n  write_FMTS_bin(ba, wb.SSF);\n  write_FONTS_bin(ba, wb);\n  write_FILLS_bin(ba, wb);\n  write_BORDERS_bin(ba, wb);\n  write_CELLSTYLEXFS_bin(ba, wb);\n  write_CELLXFS_bin(ba, opts.cellXfs);\n  write_STYLES_bin(ba, wb);\n  write_DXFS_bin(ba, wb);\n  write_TABLESTYLES_bin(ba, wb);\n  write_COLORPALETTE_bin(ba, wb);\n  /* FRTSTYLESHEET*/\n  write_record(ba, 0x0117 /* BrtEndStyleSheet */);\n  return ba.end();\n}\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = ['</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>', '</a:accent1>', '</a:accent2>', '</a:accent3>', '</a:accent4>', '</a:accent5>', '</a:accent6>', '</a:hlink>', '</a:folHlink>'];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n  themes.themeElements.clrScheme = [];\n  var color = {};\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0]) {\n      /* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n      case '<a:clrScheme':\n      case '</a:clrScheme>':\n        break;\n\n      /* 20.1.2.3.32 srgbClr CT_SRgbColor */\n      case '<a:srgbClr':\n        color.rgb = y.val;\n        break;\n\n      /* 20.1.2.3.33 sysClr CT_SystemColor */\n      case '<a:sysClr':\n        color.rgb = y.lastClr;\n        break;\n\n      /* 20.1.4.1.1 accent1 (Accent 1) */\n      /* 20.1.4.1.2 accent2 (Accent 2) */\n      /* 20.1.4.1.3 accent3 (Accent 3) */\n      /* 20.1.4.1.4 accent4 (Accent 4) */\n      /* 20.1.4.1.5 accent5 (Accent 5) */\n      /* 20.1.4.1.6 accent6 (Accent 6) */\n      /* 20.1.4.1.9 dk1 (Dark 1) */\n      /* 20.1.4.1.10 dk2 (Dark 2) */\n      /* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n      /* 20.1.4.1.19 hlink (Hyperlink) */\n      /* 20.1.4.1.22 lt1 (Light 1) */\n      /* 20.1.4.1.23 lt2 (Light 2) */\n      case '<a:dk1>':\n      case '</a:dk1>':\n      case '<a:lt1>':\n      case '</a:lt1>':\n      case '<a:dk2>':\n      case '</a:dk2>':\n      case '<a:lt2>':\n      case '</a:lt2>':\n      case '<a:accent1>':\n      case '</a:accent1>':\n      case '<a:accent2>':\n      case '</a:accent2>':\n      case '<a:accent3>':\n      case '</a:accent3>':\n      case '<a:accent4>':\n      case '</a:accent4>':\n      case '<a:accent5>':\n      case '</a:accent5>':\n      case '<a:accent6>':\n      case '</a:accent6>':\n      case '<a:hlink>':\n      case '</a:hlink>':\n      case '<a:folHlink>':\n      case '</a:folHlink>':\n        if (y[0].charAt(1) === '/') {\n          themes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n          color = {};\n        } else {\n          color.name = y[0].slice(3, y[0].length - 1);\n        }\n        break;\n      default:\n        if (opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n    }\n  });\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme( /*::t, themes, opts*/) {}\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme( /*::t, themes, opts*/) {}\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n  themes.themeElements = {};\n  var t;\n  [/* clrScheme CT_ColorScheme */\n  ['clrScheme', clrsregex, parse_clrScheme], /* fontScheme CT_FontScheme */\n  ['fontScheme', fntsregex, parse_fontScheme], /* fmtScheme CT_StyleMatrix */\n  ['fmtScheme', fmtsregex, parse_fmtScheme]].forEach(function (m) {\n    if (!(t = data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n    m[2](t, themes, opts);\n  });\n}\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data /*:string*/, opts) {\n  /* 20.1.6.9 theme CT_OfficeStyleSheet */\n  if (!data || data.length === 0) data = write_theme();\n  var t;\n  var themes = {};\n\n  /* themeElements CT_BaseStyles */\n  if (!(t = data.match(themeltregex))) throw new Error('themeElements not found in theme');\n  parse_themeElements(t[0], themes, opts);\n  themes.raw = data;\n  return themes;\n}\nfunction write_theme(Themes, opts) /*:string*/{\n  if (opts && opts.themeXLSX) return opts.themeXLSX;\n  if (Themes && typeof Themes.raw == \"string\") return Themes.raw;\n  var o = [XML_HEADER];\n  o[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n  o[o.length] = '<a:themeElements>';\n  o[o.length] = '<a:clrScheme name=\"Office\">';\n  o[o.length] = '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n  o[o.length] = '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n  o[o.length] = '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n  o[o.length] = '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n  o[o.length] = '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n  o[o.length] = '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n  o[o.length] = '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n  o[o.length] = '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n  o[o.length] = '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n  o[o.length] = '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n  o[o.length] = '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n  o[o.length] = '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n  o[o.length] = '</a:clrScheme>';\n  o[o.length] = '<a:fontScheme name=\"Office\">';\n  o[o.length] = '<a:majorFont>';\n  o[o.length] = '<a:latin typeface=\"Cambria\"/>';\n  o[o.length] = '<a:ea typeface=\"\"/>';\n  o[o.length] = '<a:cs typeface=\"\"/>';\n  o[o.length] = '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n  o[o.length] = '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n  o[o.length] = '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n  o[o.length] = '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n  o[o.length] = '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n  o[o.length] = '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n  o[o.length] = '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n  o[o.length] = '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n  o[o.length] = '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n  o[o.length] = '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n  o[o.length] = '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n  o[o.length] = '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n  o[o.length] = '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n  o[o.length] = '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n  o[o.length] = '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n  o[o.length] = '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n  o[o.length] = '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n  o[o.length] = '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n  o[o.length] = '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n  o[o.length] = '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n  o[o.length] = '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n  o[o.length] = '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n  o[o.length] = '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n  o[o.length] = '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n  o[o.length] = '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n  o[o.length] = '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n  o[o.length] = '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n  o[o.length] = '</a:majorFont>';\n  o[o.length] = '<a:minorFont>';\n  o[o.length] = '<a:latin typeface=\"Calibri\"/>';\n  o[o.length] = '<a:ea typeface=\"\"/>';\n  o[o.length] = '<a:cs typeface=\"\"/>';\n  o[o.length] = '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n  o[o.length] = '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n  o[o.length] = '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n  o[o.length] = '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n  o[o.length] = '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n  o[o.length] = '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n  o[o.length] = '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n  o[o.length] = '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n  o[o.length] = '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n  o[o.length] = '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n  o[o.length] = '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n  o[o.length] = '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n  o[o.length] = '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n  o[o.length] = '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n  o[o.length] = '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n  o[o.length] = '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n  o[o.length] = '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n  o[o.length] = '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n  o[o.length] = '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n  o[o.length] = '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n  o[o.length] = '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n  o[o.length] = '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n  o[o.length] = '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n  o[o.length] = '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n  o[o.length] = '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n  o[o.length] = '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n  o[o.length] = '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n  o[o.length] = '</a:minorFont>';\n  o[o.length] = '</a:fontScheme>';\n  o[o.length] = '<a:fmtScheme name=\"Office\">';\n  o[o.length] = '<a:fillStyleLst>';\n  o[o.length] = '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '</a:fillStyleLst>';\n  o[o.length] = '<a:lnStyleLst>';\n  o[o.length] = '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '</a:lnStyleLst>';\n  o[o.length] = '<a:effectStyleLst>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n  o[o.length] = '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '</a:effectStyleLst>';\n  o[o.length] = '<a:bgFillStyleLst>';\n  o[o.length] = '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '</a:bgFillStyleLst>';\n  o[o.length] = '</a:fmtScheme>';\n  o[o.length] = '</a:themeElements>';\n  o[o.length] = '<a:objectDefaults>';\n  o[o.length] = '<a:spDef>';\n  o[o.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n  o[o.length] = '</a:spDef>';\n  o[o.length] = '<a:lnDef>';\n  o[o.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n  o[o.length] = '</a:lnDef>';\n  o[o.length] = '</a:objectDefaults>';\n  o[o.length] = '<a:extraClrSchemeLst/>';\n  o[o.length] = '</a:theme>';\n  return o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n  var end = blob.l + length;\n  var dwThemeVersion = blob.read_shift(4);\n  if (dwThemeVersion === 124226) return;\n  if (!opts.cellStyles) {\n    blob.l = end;\n    return;\n  }\n  var data = blob.slice(blob.l);\n  blob.l = end;\n  var zip;\n  try {\n    zip = zip_read(data, {\n      type: \"array\"\n    });\n  } catch (e) {\n    return;\n  }\n  var themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n  if (!themeXML) return;\n  return parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob /*::, length*/) {\n  return blob.read_shift(4);\n}\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob /*::, length*/) {\n  var o = {};\n  o.xclrType = blob.read_shift(2);\n  o.nTintShade = blob.read_shift(2);\n  switch (o.xclrType) {\n    case 0:\n      blob.l += 4;\n      break;\n    case 1:\n      o.xclrValue = parse_IcvXF(blob, 4);\n      break;\n    case 2:\n      o.xclrValue = parse_LongRGBA(blob, 4);\n      break;\n    case 3:\n      o.xclrValue = parse_ColorTheme(blob, 4);\n      break;\n    case 4:\n      blob.l += 4;\n      break;\n  }\n  blob.l += 8;\n  return o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n  return parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n  return parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob /*::, length*/) /*:Array<any>*/{\n  var extType = blob.read_shift(2);\n  var cb = blob.read_shift(2) - 4;\n  var o = [extType];\n  switch (extType) {\n    case 0x04:\n    case 0x05:\n    case 0x07:\n    case 0x08:\n    case 0x09:\n    case 0x0A:\n    case 0x0B:\n    case 0x0D:\n      o[1] = parse_FullColorExt(blob, cb);\n      break;\n    case 0x06:\n      o[1] = parse_XFExtGradient(blob, cb);\n      break;\n    case 0x0E:\n    case 0x0F:\n      o[1] = blob.read_shift(cb === 1 ? 1 : 2);\n      break;\n    default:\n      throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n  }\n  return o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n  var end = blob.l + length;\n  blob.l += 2;\n  var ixfe = blob.read_shift(2);\n  blob.l += 2;\n  var cexts = blob.read_shift(2);\n  var ext /*:AOA*/ = [];\n  while (cexts-- > 0) ext.push(parse_ExtProp(blob, end - blob.l));\n  return {\n    ixfe: ixfe,\n    ext: ext\n  };\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n  xfext.forEach(function (xfe) {\n    switch (xfe[0]) {\n      /* 2.5.108 extPropData */\n      case 0x04:\n        break;\n      /* foreground color */\n      case 0x05:\n        break;\n      /* background color */\n      case 0x06:\n        break;\n      /* gradient fill */\n      case 0x07:\n        break;\n      /* top cell border color */\n      case 0x08:\n        break;\n      /* bottom cell border color */\n      case 0x09:\n        break;\n      /* left cell border color */\n      case 0x0a:\n        break;\n      /* right cell border color */\n      case 0x0b:\n        break;\n      /* diagonal cell border color */\n      case 0x0d:\n        /* text color */\n        break;\n      case 0x0e:\n        break;\n      /* font scheme */\n      case 0x0f:\n        break;\n      /* indentation level */\n    }\n  });\n}\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data, length - 8)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtMdb(data) {\n  var out = [];\n  var cnt = data.read_shift(4);\n  while (cnt-- > 0) out.push([data.read_shift(4), data.read_shift(4)]);\n  return out;\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtBeginEsmdb(data) {\n  data.l += 4;\n  return data.read_shift(4) != 0;\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = {\n    Types: [],\n    Cell: [],\n    Value: []\n  };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  var metatype = 2;\n  recordhopper(data, function (val, R, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({\n          name: val.name\n        });\n        break;\n      case 51:\n        val.forEach(function (r) {\n          if (metatype == 1) out.Cell.push({\n            type: out.Types[r[0] - 1].name,\n            index: r[1]\n          });else if (metatype == 0) out.Value.push({\n            type: out.Types[r[0] - 1].name,\n            index: r[1]\n          });\n        });\n        break;\n      case 337:\n        metatype = val ? 1 : 0;\n        break;\n      case 338:\n        metatype = 2;\n        break;\n      case 35:\n        state.push(RT);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T) {} else if (!pass || opts.WTF && state[state.length - 1] != 35) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, 332);\n  write_record(ba, 334, write_UInt32LE(1));\n  write_record(ba, 335, write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, 336);\n  write_record(ba, 339, write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, 52);\n  write_record(ba, 35, write_UInt32LE(514));\n  write_record(ba, 4096, write_UInt32LE(0));\n  write_record(ba, 4097, writeuint16(1));\n  write_record(ba, 36);\n  write_record(ba, 53);\n  write_record(ba, 340);\n  write_record(ba, 337, write_BrtBeginEsmdb(1, true));\n  write_record(ba, 51, write_BrtMdb([[1, 0]]));\n  write_record(ba, 338);\n  write_record(ba, 333);\n  return ba.end();\n}\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = {\n    Types: [],\n    Cell: [],\n    Value: []\n  };\n  if (!data) return out;\n  var pass = false;\n  var metatype = 2;\n  var lastmeta;\n  data.replace(tagregex, function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({\n          name: y.name\n        });\n        break;\n      case \"</metadataType>\":\n        break;\n      case \"<futureMetadata\":\n        for (var j = 0; j < out.Types.length; ++j) if (out.Types[j].name == y.name) lastmeta = out.Types[j];\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        if (metatype == 1) out.Cell.push({\n          type: out.Types[y.t - 1].name,\n          index: +y.v\n        });else if (metatype == 0) out.Value.push({\n          type: out.Types[y.t - 1].name,\n          index: +y.v\n        });\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n        metatype = 1;\n        break;\n      case \"</cellMetadata>\":\n        metatype = 2;\n        break;\n      case \"<valueMetadata\":\n        metatype = 0;\n        break;\n      case \"</valueMetadata>\":\n        metatype = 2;\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      case \"<rvb\":\n        if (!lastmeta) break;\n        if (!lastmeta.offsets) lastmeta.offsets = [];\n        lastmeta.offsets.push(+y.i);\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data /*::, name, opts*/) /*:Array<any>*/{\n  var d = [];\n  if (!data) return d;\n  var i = 1;\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0]) {\n      case '<?xml':\n        break;\n      /* 18.6.2  calcChain CT_CalcChain 1 */\n      case '<calcChain':\n      case '<calcChain>':\n      case '</calcChain>':\n        break;\n      /* 18.6.1  c CT_CalcCell 1 */\n      case '<c':\n        delete y[0];\n        if (y.i) i = y.i;else y.i = i;\n        d.push(y);\n        break;\n    }\n  });\n  return d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n  var out = {};\n  out.i = data.read_shift(4);\n  var cell = {};\n  cell.r = data.read_shift(4);\n  cell.c = data.read_shift(4);\n  out.r = encode_cell(cell);\n  var flags = data.read_shift(1);\n  if (flags & 0x2) out.l = '1';\n  if (flags & 0x8) out.a = '1';\n  return out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n  var out = [];\n  var pass = false;\n  recordhopper(data, function hopper_cc(val, R, RT) {\n    switch (RT) {\n      case 0x003F:\n        /* 'BrtCalcChainItem$' */\n        out.push(val);\n        break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml( /*::data, rel, name:string, _opts*/\n) {\n  //var opts = _opts || {};\n  //if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name /*:string*/, _opts) {\n  if (!data) return data;\n  var opts = _opts || {};\n  var pass = false,\n    end = false;\n  recordhopper(data, function xlink_parse(val, R, RT) {\n    if (end) return;\n    switch (RT) {\n      case 0x0167: /* 'BrtSupTabs' */\n      case 0x016B: /* 'BrtExternTableStart' */\n      case 0x016C: /* 'BrtExternTableEnd' */\n      case 0x016E: /* 'BrtExternRowHdr' */\n      case 0x016F: /* 'BrtExternCellBlank' */\n      case 0x0170: /* 'BrtExternCellReal' */\n      case 0x0171: /* 'BrtExternCellBool' */\n      case 0x0172: /* 'BrtExternCellError' */\n      case 0x0173: /* 'BrtExternCellString' */\n      case 0x01D8: /* 'BrtExternValueMeta' */\n      case 0x0241: /* 'BrtSupNameStart' */\n      case 0x0242: /* 'BrtSupNameValueStart' */\n      case 0x0243: /* 'BrtSupNameValueEnd' */\n      case 0x0244: /* 'BrtSupNameNum' */\n      case 0x0245: /* 'BrtSupNameErr' */\n      case 0x0246: /* 'BrtSupNameSt' */\n      case 0x0247: /* 'BrtSupNameNil' */\n      case 0x0248: /* 'BrtSupNameBool' */\n      case 0x0249: /* 'BrtSupNameFmla' */\n      case 0x024A: /* 'BrtSupNameBits' */\n      case 0x024B:\n        /* 'BrtSupNameEnd' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels /*:any*/) {\n  if (!data) return \"??\";\n  /*\n    Chartsheet Drawing:\n     - 20.5.2.35 wsDr CT_Drawing\n      - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n       - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n        - 20.1.2.2.16 graphic CT_GraphicalObject\n         - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n           - chart reference\n     the actual type is based on the URI of the graphicData\n  \tTODO: handle embedded charts and other types of graphics\n  */\n  var id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/) || [\"\", \"\"])[1];\n  return rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nvar _shapeid = 1024;\nfunction write_comments_vml(rId /*:number*/, comments) {\n  var csize = [21600, 21600];\n  /* L.5.2.1.2 Path Attribute */\n  var bbox = [\"m0,0l0\", csize[1], csize[0], csize[1], csize[0], \"0xe\"].join(\",\");\n  var o = [writextag(\"xml\", null, {\n    'xmlns:v': XLMLNS.v,\n    'xmlns:o': XLMLNS.o,\n    'xmlns:x': XLMLNS.x,\n    'xmlns:mv': XLMLNS.mv\n  }).replace(/\\/>/, \">\"), writextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {\n    'v:ext': \"edit\",\n    'data': rId\n  }), {\n    'v:ext': \"edit\"\n  }), writextag(\"v:shapetype\", [writextag(\"v:stroke\", null, {\n    joinstyle: \"miter\"\n  }), writextag(\"v:path\", null, {\n    gradientshapeok: \"t\",\n    'o:connecttype': \"rect\"\n  })].join(\"\"), {\n    id: \"_x0000_t202\",\n    'o:spt': 202,\n    coordsize: csize.join(\",\"),\n    path: bbox\n  })];\n  while (_shapeid < rId * 1000) _shapeid += 1000;\n  comments.forEach(function (x) {\n    var c = decode_cell(x[0]);\n    var fillopts = /*::(*/{\n      'color2': \"#BEFF82\",\n      'type': \"gradient\"\n    } /*:: :any)*/;\n    if (fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n    var fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {\n      type: \"gradientUnscaled\",\n      'v:ext': \"view\"\n    }) : null;\n    var fillxml = writextag('v:fill', fillparm, fillopts);\n    var shadata = {\n      on: \"t\",\n      'obscured': \"t\"\n    } /*:any*/;\n    ++_shapeid;\n    o = o.concat(['<v:shape' + wxt_helper({\n      id: '_x0000_s' + _shapeid,\n      type: \"#_x0000_t202\",\n      style: \"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\"),\n      fillcolor: \"#ECFAD4\",\n      strokecolor: \"#edeaa1\"\n    }) + '>', fillxml, writextag(\"v:shadow\", null, shadata), writextag(\"v:path\", null, {\n      'o:connecttype': \"none\"\n    }), '<v:textbox><div style=\"text-align:left\"></div></v:textbox>', '<x:ClientData ObjectType=\"Note\">', '<x:MoveWithCells/>', '<x:SizeWithCells/>', /* Part 4 19.4.2.3 Anchor (Anchor) */\n    writetag('x:Anchor', [c.c + 1, 0, c.r + 1, 0, c.c + 3, 20, c.r + 5, 20].join(\",\")), writetag('x:AutoFill', \"False\"), writetag('x:Row', String(c.r)), writetag('x:Column', String(c.c)), x[1].hidden ? '' : '<x:Visible/>', '</x:ClientData>', '</v:shape>']);\n  });\n  o.push('</xml>');\n  return o.join(\"\");\n}\nfunction sheet_insert_comments(sheet, comments /*:Array<RawComment>*/, threaded /*:boolean*/, people /*:?Array<any>*/) {\n  var dense = Array.isArray(sheet);\n  var cell /*:Cell*/;\n  comments.forEach(function (comment) {\n    var r = decode_cell(comment.ref);\n    if (dense) {\n      if (!sheet[r.r]) sheet[r.r] = [];\n      cell = sheet[r.r][r.c];\n    } else cell = sheet[comment.ref];\n    if (!cell) {\n      cell = {\n        t: \"z\"\n      } /*:any*/;\n      if (dense) sheet[r.r][r.c] = cell;else sheet[comment.ref] = cell;\n      var range = safe_decode_range(sheet[\"!ref\"] || \"BDWGO1000001:A1\");\n      if (range.s.r > r.r) range.s.r = r.r;\n      if (range.e.r < r.r) range.e.r = r.r;\n      if (range.s.c > r.c) range.s.c = r.c;\n      if (range.e.c < r.c) range.e.c = r.c;\n      var encoded = encode_range(range);\n      if (encoded !== sheet[\"!ref\"]) sheet[\"!ref\"] = encoded;\n    }\n    if (!cell.c) cell.c = [];\n    var o /*:Comment*/ = {\n      a: comment.author,\n      t: comment.t,\n      r: comment.r,\n      T: threaded\n    };\n    if (comment.h) o.h = comment.h;\n\n    /* threaded comments always override */\n    for (var i = cell.c.length - 1; i >= 0; --i) {\n      if (!threaded && cell.c[i].T) return;\n      if (threaded && !cell.c[i].T) cell.c.splice(i, 1);\n    }\n    if (threaded && people) for (i = 0; i < people.length; ++i) {\n      if (o.a == people[i].id) {\n        o.a = people[i].name || o.a;\n        break;\n      }\n    }\n    cell.c.push(o);\n  });\n}\n\n/* 18.7 Comments */\nfunction parse_comments_xml(data /*:string*/, opts) /*:Array<RawComment>*/{\n  /* 18.7.6 CT_Comments */\n  if (data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n  var authors /*:Array<string>*/ = [];\n  var commentList /*:Array<RawComment>*/ = [];\n  var authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n  if (authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function (x) {\n    if (x === \"\" || x.trim() === \"\") return;\n    var a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n    if (a) authors.push(a[1]);\n  });\n  var cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n  if (cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function (x) {\n    if (x === \"\" || x.trim() === \"\") return;\n    var cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n    if (!cm) return;\n    var y = parsexmltag(cm[0]);\n    var comment /*:RawComment*/ = {\n      author: y.authorId && authors[y.authorId] || \"sheetjsghost\",\n      ref: y.ref,\n      guid: y.guid\n    } /*:any*/;\n    var cell = decode_cell(y.ref);\n    if (opts.sheetRows && opts.sheetRows <= cell.r) return;\n    var textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n    var rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {\n      r: \"\",\n      t: \"\",\n      h: \"\"\n    };\n    comment.r = rt.r;\n    if (rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n    comment.t = (rt.t || \"\").replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    if (opts.cellHTML) comment.h = rt.h;\n    commentList.push(comment);\n  });\n  return commentList;\n}\nfunction write_comments_xml(data /*::, opts*/) {\n  var o = [XML_HEADER, writextag('comments', null, {\n    'xmlns': XMLNS_main[0]\n  })];\n  var iauthor /*:Array<string>*/ = [];\n  o.push(\"<authors>\");\n  data.forEach(function (x) {\n    x[1].forEach(function (w) {\n      var a = escapexml(w.a);\n      if (iauthor.indexOf(a) == -1) {\n        iauthor.push(a);\n        o.push(\"<author>\" + a + \"</author>\");\n      }\n      if (w.T && w.ID && iauthor.indexOf(\"tc=\" + w.ID) == -1) {\n        iauthor.push(\"tc=\" + w.ID);\n        o.push(\"<author>\" + \"tc=\" + w.ID + \"</author>\");\n      }\n    });\n  });\n  if (iauthor.length == 0) {\n    iauthor.push(\"SheetJ5\");\n    o.push(\"<author>SheetJ5</author>\");\n  }\n  o.push(\"</authors>\");\n  o.push(\"<commentList>\");\n  data.forEach(function (d) {\n    /* 18.7.3 CT_Comment */\n    var lastauthor = 0,\n      ts = [];\n    if (d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);else d[1].forEach(function (c) {\n      if (c.a) lastauthor = iauthor.indexOf(escapexml(c.a));\n      ts.push(c.t || \"\");\n    });\n    o.push('<comment ref=\"' + d[0] + '\" authorId=\"' + lastauthor + '\"><text>');\n    if (ts.length <= 1) o.push(writetag(\"t\", escapexml(ts[0] || \"\")));else {\n      /* based on Threaded Comments -> Comments projection */\n      var t = \"Comment:\\n    \" + ts[0] + \"\\n\";\n      for (var i = 1; i < ts.length; ++i) t += \"Reply:\\n    \" + ts[i] + \"\\n\";\n      o.push(writetag(\"t\", escapexml(t)));\n    }\n    o.push('</text></comment>');\n  });\n  o.push(\"</commentList>\");\n  if (o.length > 2) {\n    o[o.length] = '</comments>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.17 */\nfunction parse_tcmnt_xml(data /*:string*/, opts) /*:Array<RawComment>*/{\n  var out = [];\n  var pass = false,\n    comment = {},\n    tidx = 0;\n  data.replace(tagregex, function xml_tcmnt(x, idx) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 2.6.207 ThreadedComments CT_ThreadedComments */\n      case '<ThreadedComments':\n        break;\n      case '</ThreadedComments>':\n        break;\n\n      /* 2.6.205 threadedComment CT_ThreadedComment */\n      case '<threadedComment':\n        comment = {\n          author: y.personId,\n          guid: y.id,\n          ref: y.ref,\n          T: 1\n        };\n        break;\n      case '</threadedComment>':\n        if (comment.t != null) out.push(comment);\n        break;\n      case '<text>':\n      case '<text':\n        tidx = idx + x.length;\n        break;\n      case '</text>':\n        comment.t = data.slice(tidx, idx).replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n        break;\n\n      /* 2.6.206 mentions CT_ThreadedCommentMentions TODO */\n      case '<mentions':\n      case '<mentions>':\n        pass = true;\n        break;\n      case '</mentions>':\n        pass = false;\n        break;\n\n      /* 2.6.202 mention CT_Mention TODO */\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_tcmnt_xml(comments, people, opts) {\n  var o = [XML_HEADER, writextag('ThreadedComments', null, {\n    'xmlns': XMLNS.TCMNT\n  }).replace(/[\\/]>/, \">\")];\n  comments.forEach(function (carr) {\n    var rootid = \"\";\n    (carr[1] || []).forEach(function (c, idx) {\n      if (!c.T) {\n        delete c.ID;\n        return;\n      }\n      if (c.a && people.indexOf(c.a) == -1) people.push(c.a);\n      var tcopts = {\n        ref: carr[0],\n        id: \"{54EE7951-7262-4200-6969-\" + (\"000000000000\" + opts.tcid++).slice(-12) + \"}\"\n      };\n      if (idx == 0) rootid = tcopts.id;else tcopts.parentId = rootid;\n      c.ID = tcopts.id;\n      if (c.a) tcopts.personId = \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + people.indexOf(c.a)).slice(-12) + \"}\";\n      o.push(writextag('threadedComment', writetag('text', c.t || \"\"), tcopts));\n    });\n  });\n  o.push('</ThreadedComments>');\n  return o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.18 */\nfunction parse_people_xml(data /*:string*/, opts) {\n  var out = [];\n  var pass = false;\n  data.replace(tagregex, function xml_tcmnt(x) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 2.4.85 personList CT_PersonList */\n      case '<personList':\n        break;\n      case '</personList>':\n        break;\n\n      /* 2.6.203 person CT_Person TODO: providers */\n      case '<person':\n        out.push({\n          name: y.displayname,\n          id: y.id\n        });\n        break;\n      case '</person>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_people_xml(people /*, opts*/) {\n  var o = [XML_HEADER, writextag('personList', null, {\n    'xmlns': XMLNS.TCMNT,\n    'xmlns:x': XMLNS_main[0]\n  }).replace(/[\\/]>/, \">\")];\n  people.forEach(function (person, idx) {\n    o.push(writextag('person', null, {\n      displayName: person,\n      id: \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + idx).slice(-12) + \"}\",\n      userId: person,\n      providerId: \"None\"\n    }));\n  });\n  o.push(\"</personList>\");\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n  var out = {};\n  out.iauthor = data.read_shift(4);\n  var rfx = parse_UncheckedRfX(data, 16);\n  out.rfx = rfx.s;\n  out.ref = encode_cell(rfx.s);\n  data.l += 16; /*var guid = parse_GUID(data); */\n  return out;\n}\nfunction write_BrtBeginComment(data, o) {\n  if (o == null) o = new_buf(36);\n  o.write_shift(4, data[1].iauthor);\n  write_UncheckedRfX(data[0] /*:any*/, o);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) {\n  return write_XLWideString(data.slice(0, 54));\n}\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts) /*:Array<RawComment>*/{\n  var out /*:Array<RawComment>*/ = [];\n  var authors /*:Array<string>*/ = [];\n  var c = {};\n  var pass = false;\n  recordhopper(data, function hopper_cmnt(val, R, RT) {\n    switch (RT) {\n      case 0x0278:\n        /* 'BrtCommentAuthor' */\n        authors.push(val);\n        break;\n      case 0x027B:\n        /* 'BrtBeginComment' */\n        c = val;\n        break;\n      case 0x027D:\n        /* 'BrtCommentText' */\n        c.t = val.t;\n        c.h = val.h;\n        c.r = val.r;\n        break;\n      case 0x027C:\n        /* 'BrtEndComment' */\n        c.author = authors[c.iauthor];\n        delete c /*:any*/.iauthor;\n        if (opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n        if (!c.t) c.t = \"\";\n        delete c.rfx;\n        out.push(c);\n        break;\n      case 0x0C00:\n        /* 'BrtUid' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */break;\n      case 0x0026:\n        /* 'BrtACEnd' */break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_comments_bin(data /*::, opts*/) {\n  var ba = buf_array();\n  var iauthor /*:Array<string>*/ = [];\n  write_record(ba, 0x0274 /* BrtBeginComments */);\n  write_record(ba, 0x0276 /* BrtBeginCommentAuthors */);\n  data.forEach(function (comment) {\n    comment[1].forEach(function (c) {\n      if (iauthor.indexOf(c.a) > -1) return;\n      iauthor.push(c.a.slice(0, 54));\n      write_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(c.a));\n    });\n  });\n  write_record(ba, 0x0277 /* BrtEndCommentAuthors */);\n  write_record(ba, 0x0279 /* BrtBeginCommentList */);\n  data.forEach(function (comment) {\n    comment[1].forEach(function (c) {\n      c.iauthor = iauthor.indexOf(c.a);\n      var range = {\n        s: decode_cell(comment[0]),\n        e: decode_cell(comment[0])\n      };\n      write_record(ba, 0x027B /* BrtBeginComment */, write_BrtBeginComment([range, c]));\n      if (c.t && c.t.length > 0) write_record(ba, 0x027D /* BrtCommentText */, write_BrtCommentText(c));\n      write_record(ba, 0x027C /* BrtEndComment */);\n      delete c.iauthor;\n    });\n  });\n  write_record(ba, 0x027A /* BrtEndCommentList */);\n  write_record(ba, 0x0275 /* BrtEndComments */);\n  return ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({\n    root: \"R\"\n  });\n  cfb.FullPaths.forEach(function (p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/)) return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function (p, i) {\n    if (i == 0) return;\n    var newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\") CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'dialog'\n  };\n}\nfunction parse_ds_xml( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'dialog'\n  };\n}\nfunction parse_ms_bin( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'macro'\n  };\n}\nfunction parse_ms_xml( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'macro'\n  };\n}\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = /*#__PURE__*/function () {\n  var rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n  var rcbase /*:Cell*/ = {\n    r: 0,\n    c: 0\n  } /*:any*/;\n  function rcfunc($$, $1, $2, $3) {\n    var cRel = false,\n      rRel = false;\n    if ($2.length == 0) rRel = true;else if ($2.charAt(0) == \"[\") {\n      rRel = true;\n      $2 = $2.slice(1, -1);\n    }\n    if ($3.length == 0) cRel = true;else if ($3.charAt(0) == \"[\") {\n      cRel = true;\n      $3 = $3.slice(1, -1);\n    }\n    var R = $2.length > 0 ? parseInt($2, 10) | 0 : 0,\n      C = $3.length > 0 ? parseInt($3, 10) | 0 : 0;\n    if (cRel) C += rcbase.c;else --C;\n    if (rRel) R += rcbase.r;else --R;\n    return $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n  }\n  return function rc_to_a1(fstr /*:string*/, base /*:Cell*/) /*:string*/{\n    rcbase = base;\n    return fstr.replace(rcregex, rcfunc);\n  };\n}();\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\nvar a1_to_rc = /*#__PURE__*/function () {\n  return function a1_to_rc(fstr /*:string*/, base /*:CellAddress*/) {\n    return fstr.replace(crefregex, function ($0, $1, $2, $3, $4, $5) {\n      var c = decode_col($3) - ($2 ? 0 : base.c);\n      var r = decode_row($5) - ($4 ? 0 : base.r);\n      var R = r == 0 ? \"\" : !$4 ? \"[\" + r + \"]\" : r + 1;\n      var C = c == 0 ? \"\" : !$2 ? \"[\" + c + \"]\" : c + 1;\n      return $1 + \"R\" + R + \"C\" + C;\n    });\n  };\n}();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f /*:string*/, delta /*:Cell*/) /*:string*/{\n  return f.replace(crefregex, function ($0, $1, $2, $3, $4, $5) {\n    return $1 + ($2 == \"$\" ? $2 + $3 : encode_col(decode_col($3) + delta.c)) + ($4 == \"$\" ? $4 + $5 : encode_row(decode_row($5) + delta.r));\n  });\n}\nfunction shift_formula_xlsx(f /*:string*/, range /*:string*/, cell /*:string*/) /*:string*/{\n  var r = decode_range(range),\n    s = r.s,\n    c = decode_cell(cell);\n  var delta = {\n    r: c.r - s.r,\n    c: c.c - s.c\n  };\n  return shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f /*:string*/) /*:boolean*/{\n  if (f.length == 1) return false;\n  return true;\n}\nfunction _xlfn(f /*:string*/) /*:string*/{\n  return f.replace(/_xlfn\\./g, \"\");\n}\nfunction parseread1(blob) {\n  blob.l += 1;\n  return;\n}\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n  var c = blob.read_shift(length == 1 ? 1 : 2);\n  return [c & 0x3FFF, c >> 14 & 1, c >> 15 & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n  var w = 2;\n  if (opts) {\n    if (opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);else if (opts.biff == 12) w = 4;\n  }\n  var r = blob.read_shift(w),\n    R = blob.read_shift(w);\n  var c = parse_ColRelU(blob, 2);\n  var C = parse_ColRelU(blob, 2);\n  return {\n    s: {\n      r: r,\n      c: c[0],\n      cRel: c[1],\n      rRel: c[2]\n    },\n    e: {\n      r: R,\n      c: C[0],\n      cRel: C[1],\n      rRel: C[2]\n    }\n  };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob /*::, length, opts*/) {\n  var r = parse_ColRelU(blob, 2),\n    R = parse_ColRelU(blob, 2);\n  var c = blob.read_shift(1);\n  var C = blob.read_shift(1);\n  return {\n    s: {\n      r: r[0],\n      c: c,\n      cRel: r[1],\n      rRel: r[2]\n    },\n    e: {\n      r: R[0],\n      c: C,\n      cRel: R[1],\n      rRel: R[2]\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n  if (opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n  var r = blob.read_shift(opts.biff == 12 ? 4 : 2),\n    R = blob.read_shift(opts.biff == 12 ? 4 : 2);\n  var c = parse_ColRelU(blob, 2);\n  var C = parse_ColRelU(blob, 2);\n  return {\n    s: {\n      r: r,\n      c: c[0],\n      cRel: c[1],\n      rRel: c[2]\n    },\n    e: {\n      r: R,\n      c: C[0],\n      cRel: C[1],\n      rRel: C[2]\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n  if (opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n  var r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n  var c = parse_ColRelU(blob, 2);\n  return {\n    r: r,\n    c: c[0],\n    cRel: c[1],\n    rRel: c[2]\n  };\n}\nfunction parse_RgceLoc_BIFF2(blob /*::, length, opts*/) {\n  var r = parse_ColRelU(blob, 2);\n  var c = blob.read_shift(1);\n  return {\n    r: r[0],\n    c: c,\n    cRel: r[1],\n    rRel: r[2]\n  };\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob /*::, length, opts*/) {\n  var r = blob.read_shift(2);\n  var c = blob.read_shift(2);\n  return {\n    r: r,\n    c: c & 0xFF,\n    fQuoted: !!(c & 0x4000),\n    cRel: c >> 15,\n    rRel: c >> 15\n  };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n  var biff = opts && opts.biff ? opts.biff : 8;\n  if (biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n  var r = blob.read_shift(biff >= 12 ? 4 : 2);\n  var cl = blob.read_shift(2);\n  var cRel = (cl & 0x4000) >> 14,\n    rRel = (cl & 0x8000) >> 15;\n  cl &= 0x3FFF;\n  if (rRel == 1) while (r > 0x7FFFF) r -= 0x100000;\n  if (cRel == 1) while (cl > 0x1FFF) cl = cl - 0x4000;\n  return {\n    r: r,\n    c: cl,\n    cRel: cRel,\n    rRel: rRel\n  };\n}\nfunction parse_RgceLocRel_BIFF2(blob /*::, length:number, opts*/) {\n  var rl = blob.read_shift(2);\n  var c = blob.read_shift(1);\n  var rRel = (rl & 0x8000) >> 15,\n    cRel = (rl & 0x4000) >> 14;\n  rl &= 0x3FFF;\n  if (rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n  if (cRel == 1 && c >= 0x80) c = c - 0x100;\n  return {\n    r: rl,\n    c: c,\n    cRel: cRel,\n    rRel: rRel\n  };\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n  return [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2, 'i');\n  var w = 8;\n  if (opts) switch (opts.biff) {\n    case 5:\n      blob.l += 12;\n      w = 6;\n      break;\n    case 12:\n      w = 12;\n      break;\n  }\n  var area = parse_RgceArea(blob, w, opts);\n  return [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  blob.l += opts && opts.biff > 8 ? 12 : opts.biff < 8 ? 6 : 8;\n  return [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2);\n  var w = 8;\n  if (opts) switch (opts.biff) {\n    case 5:\n      blob.l += 12;\n      w = 6;\n      break;\n    case 12:\n      w = 12;\n      break;\n  }\n  blob.l += w;\n  return [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var area = parse_RgceAreaRel(blob, length - 1, opts);\n  return [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  blob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n  return [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n  var bitSemi = blob[blob.l + 1] & 0x01; /* 1 = volatile */\n  var bitBaxcel = 1;\n  blob.l += 4;\n  return [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts) /*:Array<number>*/{\n  blob.l += 2;\n  var offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  var o /*:Array<number>*/ = [];\n  /* offset is 1 less than the number of elements */\n  for (var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n  var bitGoto = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n  var bitIf = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n  var bitIf = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n  var bitSemi = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  return [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob /*::, length*/) {\n  var type = blob.read_shift(1),\n    cch = blob.read_shift(1);\n  return [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n  blob.read_shift(2);\n  return parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n  blob.read_shift(2);\n  return parse_PtgAttrSpaceType(blob, 2);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n  //var ptg = blob[blob.l] & 0x1F;\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var loc = parse_RgceLoc(blob, 0, opts);\n  return [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var loc = parse_RgceLocRel(blob, 0, opts);\n  return [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var ixti = blob.read_shift(2); // XtiIndex\n  if (opts && opts.biff == 5) blob.l += 12;\n  var loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n  return [type, ixti, loc];\n}\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n  //var ptg = blob[blob.l] & 0x1F;\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n  return [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n  var type = blob[blob.l++];\n  var cparams = blob.read_shift(1),\n    tab = opts && opts.biff <= 3 ? [type == 0x58 ? -1 : 0, blob.read_shift(1)] : parsetab(blob);\n  return [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\nfunction parsetab(blob) {\n  return [blob[blob.l + 1] >> 7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n  blob.l++;\n  if (opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n  var row = blob.read_shift(2);\n  var col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) {\n  blob.l++;\n  return BErr[blob.read_shift(1)];\n}\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) {\n  blob.l++;\n  return blob.read_shift(2);\n}\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) {\n  blob.l++;\n  return blob.read_shift(1) !== 0;\n}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) {\n  blob.l++;\n  return parse_Xnum(blob, 8);\n}\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) {\n  blob.l++;\n  return parse_ShortXLUnicodeString(blob, length - 1, opts);\n}\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff /*:number*/) {\n  var val = [blob.read_shift(1)];\n  if (biff == 12) switch (val[0]) {\n    case 0x02:\n      val[0] = 0x04;\n      break;\n    /* SerBool */\n    case 0x04:\n      val[0] = 0x10;\n      break;\n    /* SerErr */\n    case 0x00:\n      val[0] = 0x01;\n      break;\n    /* SerNum */\n    case 0x01:\n      val[0] = 0x02;\n      break;\n    /* SerStr */\n  }\n  switch (val[0]) {\n    case 0x04:\n      /* SerBool -- boolean */\n      val[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n      if (biff != 12) blob.l += 7;\n      break;\n    case 0x25: /* appears to be an alias */\n    case 0x10:\n      /* SerErr -- error */\n      val[1] = BErr[blob[blob.l]];\n      blob.l += biff == 12 ? 4 : 8;\n      break;\n    case 0x00:\n      /* SerNil -- honestly, I'm not sure how to reproduce this */\n      blob.l += 8;\n      break;\n    case 0x01:\n      /* SerNum -- Xnum */\n      val[1] = parse_Xnum(blob, 8);\n      break;\n    case 0x02:\n      /* SerStr -- XLUnicodeString (<256 chars) */\n      val[1] = parse_XLUnicodeString2(blob, 0, {\n        biff: biff > 0 && biff < 8 ? 2 : biff\n      });\n      break;\n    default:\n      throw new Error(\"Bad SerAr: \" + val[0]);\n    /* Unreachable */\n  }\n  return val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n  var count = blob.read_shift(opts.biff == 12 ? 4 : 2);\n  var out /*:Array<Range>*/ = [];\n  for (var i = 0; i != count; ++i) out.push((opts.biff == 12 ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n  return out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n  var rows = 0,\n    cols = 0;\n  if (opts.biff == 12) {\n    rows = blob.read_shift(4); // DRw\n    cols = blob.read_shift(4); // DCol\n  } else {\n    cols = 1 + blob.read_shift(1); //DColByteU\n    rows = 1 + blob.read_shift(2); //DRw\n  }\n  if (opts.biff >= 2 && opts.biff < 8) {\n    --rows;\n    if (--cols == 0) cols = 0x100;\n  }\n  // $FlowIgnore\n  for (var i = 0, o /*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i) for (var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var w = !opts || opts.biff >= 8 ? 4 : 2;\n  var nameindex = blob.read_shift(w);\n  switch (opts.biff) {\n    case 2:\n      blob.l += 5;\n      break;\n    case 3:\n    case 4:\n      blob.l += 8;\n      break;\n    case 5:\n      blob.l += 12;\n      break;\n  }\n  return [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n  if (opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var ixti = blob.read_shift(2); // XtiIndex\n  var nameindex = blob.read_shift(4);\n  return [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var ixti = blob.read_shift(2, 'i'); // XtiIndex\n  blob.l += 8;\n  var nameindex = blob.read_shift(2);\n  blob.l += 12;\n  return [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  blob.l += 4;\n  if (opts.biff < 8) blob.l--;\n  if (opts.biff == 12) blob.l += 2;\n  return [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2);\n  var w = 4;\n  if (opts) switch (opts.biff) {\n    case 5:\n      w = 15;\n      break;\n    case 12:\n      w = 6;\n      break;\n  }\n  blob.l += w;\n  return [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\nfunction parse_PtgElfLoc(blob, length, opts) {\n  blob.l += 2;\n  return [parse_RgceElfLoc(blob, 4, opts)];\n}\nfunction parse_PtgElfNoop(blob /*::, length, opts*/) {\n  blob.l += 6;\n  return [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob /*::, length, opts*/) {\n  blob.l += 2;\n  return [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\"Data\", \"All\", \"Headers\", \"??\", \"?Data2\", \"??\", \"?DataHeaders\", \"??\", \"Totals\", \"??\", \"??\", \"??\", \"?DataTotals\", \"??\", \"??\", \"??\", \"?Current\"];\nfunction parse_PtgList(blob /*::, length, opts*/) {\n  blob.l += 2;\n  var ixti = blob.read_shift(2);\n  var flags = blob.read_shift(2);\n  var idx = blob.read_shift(4);\n  var c = blob.read_shift(2);\n  var C = blob.read_shift(2);\n  var rt = PtgListRT[flags >> 2 & 0x1F];\n  return {\n    ixti: ixti,\n    coltype: flags & 0x3,\n    rt: rt,\n    idx: idx,\n    c: c,\n    C: C\n  };\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob /*::, length, opts*/) {\n  blob.l += 2;\n  return [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n  blob.l += 5;\n  blob.l += 2;\n  blob.l += opts.biff == 2 ? 1 : 4;\n  return [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n  blob.l += opts.biff == 2 ? 4 : 5;\n  return [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(2);\n  return [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(2);\n  return [type, cce];\n}\nfunction parse_PtgAttrNoop(blob /*::, length, opts*/) {\n  blob.l += 4;\n  return [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'PtgExp',\n    f: parse_PtgExp\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'PtgTbl',\n    f: parse_PtgTbl\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'PtgAdd',\n    f: parseread1\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'PtgSub',\n    f: parseread1\n  },\n  /*::[*/0x05 /*::]*/: {\n    n: 'PtgMul',\n    f: parseread1\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'PtgDiv',\n    f: parseread1\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'PtgPower',\n    f: parseread1\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'PtgConcat',\n    f: parseread1\n  },\n  /*::[*/0x09 /*::]*/: {\n    n: 'PtgLt',\n    f: parseread1\n  },\n  /*::[*/0x0A /*::]*/: {\n    n: 'PtgLe',\n    f: parseread1\n  },\n  /*::[*/0x0B /*::]*/: {\n    n: 'PtgEq',\n    f: parseread1\n  },\n  /*::[*/0x0C /*::]*/: {\n    n: 'PtgGe',\n    f: parseread1\n  },\n  /*::[*/0x0D /*::]*/: {\n    n: 'PtgGt',\n    f: parseread1\n  },\n  /*::[*/0x0E /*::]*/: {\n    n: 'PtgNe',\n    f: parseread1\n  },\n  /*::[*/0x0F /*::]*/: {\n    n: 'PtgIsect',\n    f: parseread1\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'PtgUnion',\n    f: parseread1\n  },\n  /*::[*/0x11 /*::]*/: {\n    n: 'PtgRange',\n    f: parseread1\n  },\n  /*::[*/0x12 /*::]*/: {\n    n: 'PtgUplus',\n    f: parseread1\n  },\n  /*::[*/0x13 /*::]*/: {\n    n: 'PtgUminus',\n    f: parseread1\n  },\n  /*::[*/0x14 /*::]*/: {\n    n: 'PtgPercent',\n    f: parseread1\n  },\n  /*::[*/0x15 /*::]*/: {\n    n: 'PtgParen',\n    f: parseread1\n  },\n  /*::[*/0x16 /*::]*/: {\n    n: 'PtgMissArg',\n    f: parseread1\n  },\n  /*::[*/0x17 /*::]*/: {\n    n: 'PtgStr',\n    f: parse_PtgStr\n  },\n  /*::[*/0x1A /*::]*/: {\n    n: 'PtgSheet',\n    f: parse_PtgSheet\n  },\n  /*::[*/0x1B /*::]*/: {\n    n: 'PtgEndSheet',\n    f: parse_PtgEndSheet\n  },\n  /*::[*/0x1C /*::]*/: {\n    n: 'PtgErr',\n    f: parse_PtgErr\n  },\n  /*::[*/0x1D /*::]*/: {\n    n: 'PtgBool',\n    f: parse_PtgBool\n  },\n  /*::[*/0x1E /*::]*/: {\n    n: 'PtgInt',\n    f: parse_PtgInt\n  },\n  /*::[*/0x1F /*::]*/: {\n    n: 'PtgNum',\n    f: parse_PtgNum\n  },\n  /*::[*/0x20 /*::]*/: {\n    n: 'PtgArray',\n    f: parse_PtgArray\n  },\n  /*::[*/0x21 /*::]*/: {\n    n: 'PtgFunc',\n    f: parse_PtgFunc\n  },\n  /*::[*/0x22 /*::]*/: {\n    n: 'PtgFuncVar',\n    f: parse_PtgFuncVar\n  },\n  /*::[*/0x23 /*::]*/: {\n    n: 'PtgName',\n    f: parse_PtgName\n  },\n  /*::[*/0x24 /*::]*/: {\n    n: 'PtgRef',\n    f: parse_PtgRef\n  },\n  /*::[*/0x25 /*::]*/: {\n    n: 'PtgArea',\n    f: parse_PtgArea\n  },\n  /*::[*/0x26 /*::]*/: {\n    n: 'PtgMemArea',\n    f: parse_PtgMemArea\n  },\n  /*::[*/0x27 /*::]*/: {\n    n: 'PtgMemErr',\n    f: parse_PtgMemErr\n  },\n  /*::[*/0x28 /*::]*/: {\n    n: 'PtgMemNoMem',\n    f: parse_PtgMemNoMem\n  },\n  /*::[*/0x29 /*::]*/: {\n    n: 'PtgMemFunc',\n    f: parse_PtgMemFunc\n  },\n  /*::[*/0x2A /*::]*/: {\n    n: 'PtgRefErr',\n    f: parse_PtgRefErr\n  },\n  /*::[*/0x2B /*::]*/: {\n    n: 'PtgAreaErr',\n    f: parse_PtgAreaErr\n  },\n  /*::[*/0x2C /*::]*/: {\n    n: 'PtgRefN',\n    f: parse_PtgRefN\n  },\n  /*::[*/0x2D /*::]*/: {\n    n: 'PtgAreaN',\n    f: parse_PtgAreaN\n  },\n  /*::[*/0x2E /*::]*/: {\n    n: 'PtgMemAreaN',\n    f: parse_PtgMemAreaN\n  },\n  /*::[*/0x2F /*::]*/: {\n    n: 'PtgMemNoMemN',\n    f: parse_PtgMemNoMemN\n  },\n  /*::[*/0x39 /*::]*/: {\n    n: 'PtgNameX',\n    f: parse_PtgNameX\n  },\n  /*::[*/0x3A /*::]*/: {\n    n: 'PtgRef3d',\n    f: parse_PtgRef3d\n  },\n  /*::[*/0x3B /*::]*/: {\n    n: 'PtgArea3d',\n    f: parse_PtgArea3d\n  },\n  /*::[*/0x3C /*::]*/: {\n    n: 'PtgRefErr3d',\n    f: parse_PtgRefErr3d\n  },\n  /*::[*/0x3D /*::]*/: {\n    n: 'PtgAreaErr3d',\n    f: parse_PtgAreaErr3d\n  },\n  /*::[*/0xFF /*::]*/: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n  /*::[*/0x40 /*::]*/: 0x20,\n  /*::[*/0x60 /*::]*/: 0x20,\n  /*::[*/0x41 /*::]*/: 0x21,\n  /*::[*/0x61 /*::]*/: 0x21,\n  /*::[*/0x42 /*::]*/: 0x22,\n  /*::[*/0x62 /*::]*/: 0x22,\n  /*::[*/0x43 /*::]*/: 0x23,\n  /*::[*/0x63 /*::]*/: 0x23,\n  /*::[*/0x44 /*::]*/: 0x24,\n  /*::[*/0x64 /*::]*/: 0x24,\n  /*::[*/0x45 /*::]*/: 0x25,\n  /*::[*/0x65 /*::]*/: 0x25,\n  /*::[*/0x46 /*::]*/: 0x26,\n  /*::[*/0x66 /*::]*/: 0x26,\n  /*::[*/0x47 /*::]*/: 0x27,\n  /*::[*/0x67 /*::]*/: 0x27,\n  /*::[*/0x48 /*::]*/: 0x28,\n  /*::[*/0x68 /*::]*/: 0x28,\n  /*::[*/0x49 /*::]*/: 0x29,\n  /*::[*/0x69 /*::]*/: 0x29,\n  /*::[*/0x4A /*::]*/: 0x2A,\n  /*::[*/0x6A /*::]*/: 0x2A,\n  /*::[*/0x4B /*::]*/: 0x2B,\n  /*::[*/0x6B /*::]*/: 0x2B,\n  /*::[*/0x4C /*::]*/: 0x2C,\n  /*::[*/0x6C /*::]*/: 0x2C,\n  /*::[*/0x4D /*::]*/: 0x2D,\n  /*::[*/0x6D /*::]*/: 0x2D,\n  /*::[*/0x4E /*::]*/: 0x2E,\n  /*::[*/0x6E /*::]*/: 0x2E,\n  /*::[*/0x4F /*::]*/: 0x2F,\n  /*::[*/0x6F /*::]*/: 0x2F,\n  /*::[*/0x58 /*::]*/: 0x22,\n  /*::[*/0x78 /*::]*/: 0x22,\n  /*::[*/0x59 /*::]*/: 0x39,\n  /*::[*/0x79 /*::]*/: 0x39,\n  /*::[*/0x5A /*::]*/: 0x3A,\n  /*::[*/0x7A /*::]*/: 0x3A,\n  /*::[*/0x5B /*::]*/: 0x3B,\n  /*::[*/0x7B /*::]*/: 0x3B,\n  /*::[*/0x5C /*::]*/: 0x3C,\n  /*::[*/0x7C /*::]*/: 0x3C,\n  /*::[*/0x5D /*::]*/: 0x3D,\n  /*::[*/0x7D /*::]*/: 0x3D\n};\nvar Ptg18 = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'PtgElfLel',\n    f: parse_PtgElfLel\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'PtgElfRw',\n    f: parse_PtgElfRw\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'PtgElfCol',\n    f: parse_PtgElfCol\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'PtgElfRwV',\n    f: parse_PtgElfRwV\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'PtgElfColV',\n    f: parse_PtgElfColV\n  },\n  /*::[*/0x0A /*::]*/: {\n    n: 'PtgElfRadical',\n    f: parse_PtgElfRadical\n  },\n  /*::[*/0x0B /*::]*/: {\n    n: 'PtgElfRadicalS',\n    f: parse_PtgElfRadicalS\n  },\n  /*::[*/0x0D /*::]*/: {\n    n: 'PtgElfColS',\n    f: parse_PtgElfColS\n  },\n  /*::[*/0x0F /*::]*/: {\n    n: 'PtgElfColSV',\n    f: parse_PtgElfColSV\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'PtgElfRadicalLel',\n    f: parse_PtgElfRadicalLel\n  },\n  /*::[*/0x19 /*::]*/: {\n    n: 'PtgList',\n    f: parse_PtgList\n  },\n  /*::[*/0x1D /*::]*/: {\n    n: 'PtgSxName',\n    f: parse_PtgSxName\n  },\n  /*::[*/0xFF /*::]*/: {}\n};\nvar Ptg19 = {\n  /*::[*/0x00 /*::]*/: {\n    n: 'PtgAttrNoop',\n    f: parse_PtgAttrNoop\n  },\n  /*::[*/0x01 /*::]*/: {\n    n: 'PtgAttrSemi',\n    f: parse_PtgAttrSemi\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'PtgAttrIf',\n    f: parse_PtgAttrIf\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'PtgAttrChoose',\n    f: parse_PtgAttrChoose\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'PtgAttrGoto',\n    f: parse_PtgAttrGoto\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'PtgAttrSum',\n    f: parse_PtgAttrSum\n  },\n  /*::[*/0x20 /*::]*/: {\n    n: 'PtgAttrBaxcel',\n    f: parse_PtgAttrBaxcel\n  },\n  /*::[*/0x21 /*::]*/: {\n    n: 'PtgAttrBaxcel',\n    f: parse_PtgAttrBaxcel\n  },\n  /*::[*/0x40 /*::]*/: {\n    n: 'PtgAttrSpace',\n    f: parse_PtgAttrSpace\n  },\n  /*::[*/0x41 /*::]*/: {\n    n: 'PtgAttrSpaceSemi',\n    f: parse_PtgAttrSpaceSemi\n  },\n  /*::[*/0x80 /*::]*/: {\n    n: 'PtgAttrIfError',\n    f: parse_PtgAttrIfError\n  },\n  /*::[*/0xFF /*::]*/: {}\n};\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n  if (opts.biff < 8) return parsenoop(blob, length);\n  var target = blob.l + length;\n  var o = [];\n  for (var i = 0; i !== rgce.length; ++i) {\n    switch (rgce[i][0]) {\n      case 'PtgArray':\n        /* PtgArray -> PtgExtraArray */\n        rgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n        o.push(rgce[i][1]);\n        break;\n      case 'PtgMemArea':\n        /* PtgMemArea -> PtgExtraMem */\n        rgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n        o.push(rgce[i][2]);\n        break;\n      case 'PtgExp':\n        /* PtgExp -> PtgExtraCol */\n        if (opts && opts.biff == 12) {\n          rgce[i][1][1] = blob.read_shift(4);\n          o.push(rgce[i][1]);\n        }\n        break;\n      case 'PtgList': /* TODO: PtgList -> PtgExtraList */\n      case 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n      case 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n      case 'PtgElfColSV':\n        /* TODO: PtgElfColSV -> PtgExtraElf */\n        throw \"Unsupported \" + rgce[i][0];\n      default:\n        break;\n    }\n  }\n  length = target - blob.l;\n  /* note: this is technically an error but Excel disregards */\n  //if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n  if (length !== 0) o.push(parsenoop(blob, length));\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n  var target = blob.l + length;\n  var R,\n    id,\n    ptgs = [];\n  while (target != blob.l) {\n    length = target - blob.l;\n    id = blob[blob.l];\n    R = PtgTypes[id] || PtgTypes[PtgDupes[id]];\n    if (id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n    if (!R || !R.f) {\n      /*ptgs.push*/parsenoop(blob, length);\n    } else {\n      ptgs.push([R.n, R.f(blob, length, opts)]);\n    }\n  }\n  return ptgs;\n}\nfunction stringify_array(f /*:Array<Array<string>>*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < f.length; ++i) {\n    var x = f[i],\n      r /*:Array<string>*/ = [];\n    for (var j = 0; j < x.length; ++j) {\n      var y = x[j];\n      if (y) switch (y[0]) {\n        // TODO: handle embedded quotes\n        case 0x02:\n          /*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n          r.push('\"' + y[1].replace(/\"/g, '\"\"') + '\"');\n          break;\n        default:\n          r.push(y[1]);\n      } else r.push(\"\");\n    }\n    o.push(r.join(\",\"));\n  }\n  return o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n  PtgAdd: \"+\",\n  PtgConcat: \"&\",\n  PtgDiv: \"/\",\n  PtgEq: \"=\",\n  PtgGe: \">=\",\n  PtgGt: \">\",\n  PtgLe: \"<=\",\n  PtgLt: \"<\",\n  PtgMul: \"*\",\n  PtgNe: \"<>\",\n  PtgPower: \"^\",\n  PtgSub: \"-\"\n};\n\n// List of invalid characters needs to be tested further\nfunction formula_quote_sheet_name(sname /*:string*/, opts) /*:string*/{\n  if (!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n  if (/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/.test(sname)) return \"'\" + sname + \"'\";\n  return sname;\n}\nfunction get_ixti_raw(supbooks, ixti /*:number*/, opts) /*:string*/{\n  if (!supbooks) return \"SH33TJSERR0\";\n  if (opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n  if (!supbooks.XTI) return \"SH33TJSERR6\";\n  var XTI = supbooks.XTI[ixti];\n  if (opts.biff < 8) {\n    if (ixti > 10000) ixti -= 65536;\n    if (ixti < 0) ixti = -ixti;\n    return ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n  }\n  if (!XTI) return \"SH33TJSERR1\";\n  var o = \"\";\n  if (opts.biff > 8) switch (supbooks[XTI[0]][0]) {\n    case 0x0165:\n      /* 'BrtSupSelf' */\n      o = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n    case 0x0166:\n      /* 'BrtSupSame' */\n      if (opts.SID != null) return supbooks.SheetNames[opts.SID];\n      return \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n    case 0x0163: /* 'BrtSupBookSrc' */\n    /* falls through */\n    default:\n      return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n  }\n  switch (supbooks[XTI[0]][0][0]) {\n    case 0x0401:\n      o = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\";\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n    case 0x3A01:\n      return supbooks[XTI[0]].slice(1).map(function (name) {\n        return name.Name;\n      }).join(\";;\");\n    //return \"SH33TJSERR8\";\n    default:\n      if (!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n      o = XTI[1] == -1 ? \"#REF\" : supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\";\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n  }\n}\nfunction get_ixti(supbooks, ixti /*:number*/, opts) /*:string*/{\n  var ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n  return ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula /*Array<any>*/, range, cell /*:any*/, supbooks, opts) /*:string*/{\n  var biff = opts && opts.biff || 8;\n  var _range = /*range != null ? range :*/{\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  var stack /*:Array<string>*/ = [],\n    e1,\n    e2,\n    /*::type,*/c /*:CellAddress*/,\n    ixti = 0,\n    nameidx = 0,\n    r,\n    sname = \"\";\n  if (!formula[0] || !formula[0][0]) return \"\";\n  var last_sp = -1,\n    sp = \"\";\n  for (var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n    var f = formula[0][ff];\n    switch (f[0]) {\n      case 'PtgUminus':\n        /* [MS-XLS] 2.5.198.93 */\n        stack.push(\"-\" + stack.pop());\n        break;\n      case 'PtgUplus':\n        /* [MS-XLS] 2.5.198.95 */\n        stack.push(\"+\" + stack.pop());\n        break;\n      case 'PtgPercent':\n        /* [MS-XLS] 2.5.198.81 */\n        stack.push(stack.pop() + \"%\");\n        break;\n      case 'PtgAdd': /* [MS-XLS] 2.5.198.26 */\n      case 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n      case 'PtgDiv': /* [MS-XLS] 2.5.198.45 */\n      case 'PtgEq': /* [MS-XLS] 2.5.198.56 */\n      case 'PtgGe': /* [MS-XLS] 2.5.198.64 */\n      case 'PtgGt': /* [MS-XLS] 2.5.198.65 */\n      case 'PtgLe': /* [MS-XLS] 2.5.198.68 */\n      case 'PtgLt': /* [MS-XLS] 2.5.198.69 */\n      case 'PtgMul': /* [MS-XLS] 2.5.198.75 */\n      case 'PtgNe': /* [MS-XLS] 2.5.198.78 */\n      case 'PtgPower': /* [MS-XLS] 2.5.198.82 */\n      case 'PtgSub':\n        /* [MS-XLS] 2.5.198.90 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        if (last_sp >= 0) {\n          switch (formula[0][last_sp][1][0]) {\n            case 0:\n              // $FlowIgnore\n              sp = fill(\" \", formula[0][last_sp][1][1]);\n              break;\n            case 1:\n              // $FlowIgnore\n              sp = fill(\"\\r\", formula[0][last_sp][1][1]);\n              break;\n            default:\n              sp = \"\";\n              // $FlowIgnore\n              if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n          }\n          e2 = e2 + sp;\n          last_sp = -1;\n        }\n        stack.push(e2 + PtgBinOp[f[0]] + e1);\n        break;\n      case 'PtgIsect':\n        /* [MS-XLS] 2.5.198.67 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(e2 + \" \" + e1);\n        break;\n      case 'PtgUnion':\n        /* [MS-XLS] 2.5.198.94 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(e2 + \",\" + e1);\n        break;\n      case 'PtgRange':\n        /* [MS-XLS] 2.5.198.83 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(e2 + \":\" + e1);\n        break;\n      case 'PtgAttrChoose':\n        /* [MS-XLS] 2.5.198.34 */\n        break;\n      case 'PtgAttrGoto':\n        /* [MS-XLS] 2.5.198.35 */\n        break;\n      case 'PtgAttrIf':\n        /* [MS-XLS] 2.5.198.36 */\n        break;\n      case 'PtgAttrIfError':\n        /* [MS-XLSB] 2.5.97.28 */\n        break;\n      case 'PtgRef':\n        /* [MS-XLS] 2.5.198.84 */\n        /*::type = f[1][0]; */c = shift_cell_xls(f[1][1] /*:any*/, _range, opts);\n        stack.push(encode_cell_xls(c, biff));\n        break;\n      case 'PtgRefN':\n        /* [MS-XLS] 2.5.198.88 */\n        /*::type = f[1][0]; */c = cell ? shift_cell_xls(f[1][1] /*:any*/, cell, opts) : f[1][1] /*:any*/;\n        stack.push(encode_cell_xls(c, biff));\n        break;\n      case 'PtgRef3d':\n        /* [MS-XLS] 2.5.198.85 */\n        /*::type = f[1][0]; */ixti = /*::Number(*/f[1][1] /*::)*/;\n        c = shift_cell_xls(f[1][2] /*:any*/, _range, opts);\n        sname = get_ixti(supbooks, ixti, opts);\n        var w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n        stack.push(sname + \"!\" + encode_cell_xls(c, biff));\n        break;\n      case 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n      case 'PtgFuncVar':\n        /* [MS-XLS] 2.5.198.63 */\n        /* f[1] = [argc, func, type] */\n        var argc /*:number*/ = f[1][0] /*:any*/,\n          func /*:string*/ = f[1][1] /*:any*/;\n        if (!argc) argc = 0;\n        argc &= 0x7F;\n        var args = argc == 0 ? [] : stack.slice(-argc);\n        stack.length -= argc;\n        if (func === 'User') func = args.shift();\n        stack.push(func + \"(\" + args.join(\",\") + \")\");\n        break;\n      case 'PtgBool':\n        /* [MS-XLS] 2.5.198.42 */\n        stack.push(f[1] ? \"TRUE\" : \"FALSE\");\n        break;\n      case 'PtgInt':\n        /* [MS-XLS] 2.5.198.66 */\n        stack.push( /*::String(*/f[1] /*::)*/);\n        break;\n      case 'PtgNum':\n        /* [MS-XLS] 2.5.198.79 TODO: precision? */\n        stack.push(String(f[1]));\n        break;\n      case 'PtgStr':\n        /* [MS-XLS] 2.5.198.89 */\n        // $FlowIgnore\n        stack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"');\n        break;\n      case 'PtgErr':\n        /* [MS-XLS] 2.5.198.57 */\n        stack.push( /*::String(*/f[1] /*::)*/);\n        break;\n      case 'PtgAreaN':\n        /* [MS-XLS] 2.5.198.31 TODO */\n        /*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {\n          s: cell\n        } : _range, opts);\n        stack.push(encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgArea':\n        /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n        /*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n        stack.push(encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgArea3d':\n        /* [MS-XLS] 2.5.198.28 TODO */\n        /*::type = f[1][0]; */ixti = /*::Number(*/f[1][1] /*::)*/;\n        r = f[1][2];\n        sname = get_ixti(supbooks, ixti, opts);\n        stack.push(sname + \"!\" + encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgAttrSum':\n        /* [MS-XLS] 2.5.198.41 */\n        stack.push(\"SUM(\" + stack.pop() + \")\");\n        break;\n      case 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n      case 'PtgAttrSemi':\n        /* [MS-XLS] 2.5.198.37 */\n        break;\n      case 'PtgName':\n        /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n        /* f[1] = type, 0, nameindex */\n        nameidx = f[1][2] /*:any*/;\n        var lbl = (supbooks.names || [])[nameidx - 1] || (supbooks[0] || [])[nameidx];\n        var name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n        /* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n        if (name && name.slice(0, 6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n        stack.push(name);\n        break;\n      case 'PtgNameX':\n        /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n        /* f[1] = type, ixti, nameindex */\n        var bookidx /*:number*/ = f[1][1] /*:any*/;\n        nameidx = f[1][2] /*:any*/;\n        var externbook;\n        /* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n        if (opts.biff <= 5) {\n          if (bookidx < 0) bookidx = -bookidx;\n          if (supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n        } else {\n          var o = \"\";\n          if (((supbooks[bookidx] || [])[0] || [])[0] == 0x3A01) {/* empty */} else if (((supbooks[bookidx] || [])[0] || [])[0] == 0x0401) {\n            if (supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n              o = supbooks.SheetNames[supbooks[bookidx][nameidx].itab - 1] + \"!\";\n            }\n          } else o = supbooks.SheetNames[nameidx - 1] + \"!\";\n          if (supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;else if (supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;else {\n            var ixtidata = (get_ixti_raw(supbooks, bookidx, opts) || \"\").split(\";;\");\n            if (ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n            else o += \"SH33TJSERRX\";\n          }\n          stack.push(o);\n          break;\n        }\n        if (!externbook) externbook = {\n          Name: \"SH33TJSERRY\"\n        };\n        stack.push(externbook.Name);\n        break;\n      case 'PtgParen':\n        /* [MS-XLS] 2.5.198.80 */\n        var lp = '(',\n          rp = ')';\n        if (last_sp >= 0) {\n          sp = \"\";\n          switch (formula[0][last_sp][1][0]) {\n            // $FlowIgnore\n            case 2:\n              lp = fill(\" \", formula[0][last_sp][1][1]) + lp;\n              break;\n            // $FlowIgnore\n            case 3:\n              lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp;\n              break;\n            // $FlowIgnore\n            case 4:\n              rp = fill(\" \", formula[0][last_sp][1][1]) + rp;\n              break;\n            // $FlowIgnore\n            case 5:\n              rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp;\n              break;\n            default:\n              // $FlowIgnore\n              if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n          }\n          last_sp = -1;\n        }\n        stack.push(lp + stack.pop() + rp);\n        break;\n      case 'PtgRefErr':\n        /* [MS-XLS] 2.5.198.86 */\n        stack.push('#REF!');\n        break;\n      case 'PtgRefErr3d':\n        /* [MS-XLS] 2.5.198.87 */\n        stack.push('#REF!');\n        break;\n      case 'PtgExp':\n        /* [MS-XLS] 2.5.198.58 TODO */\n        c = {\n          c: f[1][1] /*:any*/,\n          r: f[1][0] /*:any*/\n        };\n        var q = {\n          c: cell.c,\n          r: cell.r\n        } /*:any*/;\n        if (supbooks.sharedf[encode_cell(c)]) {\n          var parsedf = supbooks.sharedf[encode_cell(c)];\n          stack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n        } else {\n          var fnd = false;\n          for (e1 = 0; e1 != supbooks.arrayf.length; ++e1) {\n            /* TODO: should be something like range_has */\n            e2 = supbooks.arrayf[e1];\n            if (c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n            if (c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n            stack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n            fnd = true;\n            break;\n          }\n          if (!fnd) stack.push( /*::String(*/f[1] /*::)*/);\n        }\n        break;\n      case 'PtgArray':\n        /* [MS-XLS] 2.5.198.32 TODO */\n        stack.push(\"{\" + stringify_array( /*::(*/f[1] /*:: :any)*/) + \"}\");\n        break;\n      case 'PtgMemArea':\n        /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n        //stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n        break;\n      case 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n      case 'PtgAttrSpaceSemi':\n        /* [MS-XLS] 2.5.198.39 */\n        last_sp = ff;\n        break;\n      case 'PtgTbl':\n        /* [MS-XLS] 2.5.198.92 TODO */\n        break;\n      case 'PtgMemErr':\n        /* [MS-XLS] 2.5.198.71 */\n        break;\n      case 'PtgMissArg':\n        /* [MS-XLS] 2.5.198.74 */\n        stack.push(\"\");\n        break;\n      case 'PtgAreaErr':\n        /* [MS-XLS] 2.5.198.29 */\n        stack.push(\"#REF!\");\n        break;\n      case 'PtgAreaErr3d':\n        /* [MS-XLS] 2.5.198.30 */\n        stack.push(\"#REF!\");\n        break;\n      case 'PtgList':\n        /* [MS-XLSB] 2.5.97.52 */\n        // $FlowIgnore\n        stack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n        break;\n      case 'PtgMemAreaN':\n      case 'PtgMemNoMemN':\n      case 'PtgAttrNoop':\n      case 'PtgSheet':\n      case 'PtgEndSheet':\n        break;\n      case 'PtgMemFunc':\n        /* [MS-XLS] 2.5.198.72 TODO */\n        break;\n      case 'PtgMemNoMem':\n        /* [MS-XLS] 2.5.198.73 TODO */\n        break;\n      case 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n      case 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n      case 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n      case 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n      case 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n      case 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n      case 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n      case 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n      case 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n      case 'PtgElfRwV':\n        /* [MS-XLS] 2.5.198.55 */\n        throw new Error(\"Unsupported ELFs\");\n      case 'PtgSxName':\n        /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n        throw new Error('Unrecognized Formula Token: ' + String(f));\n      default:\n        throw new Error('Unrecognized Formula Token: ' + String(f));\n    }\n    var PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n    if (opts.biff != 3) if (last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n      f = formula[0][last_sp];\n      var _left = true;\n      switch (f[1][0]) {\n        /* note: some bad XLSB files omit the PtgParen */\n        case 4:\n          _left = false;\n        /* falls through */\n        case 0:\n          // $FlowIgnore\n          sp = fill(\" \", f[1][1]);\n          break;\n        case 5:\n          _left = false;\n        /* falls through */\n        case 1:\n          // $FlowIgnore\n          sp = fill(\"\\r\", f[1][1]);\n          break;\n        default:\n          sp = \"\";\n          // $FlowIgnore\n          if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n      }\n      stack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n      last_sp = -1;\n    }\n  }\n  if (stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n  return stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts /*::, ref*/) {\n  var target = blob.l + length,\n    len = opts.biff == 2 ? 1 : 2;\n  var rgcb,\n    cce = blob.read_shift(len); // length of rgce\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n  blob.l = target;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n  var target = blob.l + length,\n    len = opts.biff == 2 ? 1 : 2;\n  var rgcb,\n    cce = blob.read_shift(len); // length of rgce\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n  blob.l = target;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n  var target = blob.l + length;\n  var rgce = parse_Rgce(blob, cce, opts);\n  var rgcb;\n  if (target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n  var target = blob.l + length;\n  var rgcb,\n    cce = blob.read_shift(2); // length of rgce\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  if (length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob /*::, length*/) {\n  var b;\n  if (__readUInt16LE(blob, blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob), 'n'];\n  switch (blob[blob.l]) {\n    case 0x00:\n      blob.l += 8;\n      return [\"String\", 's'];\n    case 0x01:\n      b = blob[blob.l + 2] === 0x1;\n      blob.l += 8;\n      return [b, 'b'];\n    case 0x02:\n      b = blob[blob.l + 2];\n      blob.l += 8;\n      return [b, 'e'];\n    case 0x03:\n      blob.l += 8;\n      return [\"\", 's'];\n  }\n  return [];\n}\nfunction write_FormulaValue(value) {\n  if (value == null) {\n    // Blank String Value\n    var o = new_buf(8);\n    o.write_shift(1, 0x03);\n    o.write_shift(1, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0xFFFF);\n    return o;\n  } else if (typeof value == \"number\") return write_Xnum(value);\n  return write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n  var end = blob.l + length;\n  var cell = parse_XLSCell(blob, 6);\n  if (opts.biff == 2) ++blob.l;\n  var val = parse_FormulaValue(blob, 8);\n  var flags = blob.read_shift(1);\n  if (opts.biff != 2) {\n    blob.read_shift(1);\n    if (opts.biff >= 5) {\n      /*var chn = */blob.read_shift(4);\n    }\n  }\n  var cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n  return {\n    cell: cell,\n    val: val[0],\n    formula: cbf,\n    shared: flags >> 3 & 1,\n    tt: val[1]\n  };\n}\nfunction write_Formula(cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, os /*:number*/) {\n  // Cell\n  var o1 = write_XLSCell(R, C, os);\n\n  // FormulaValue\n  var o2 = write_FormulaValue(cell.v);\n\n  // flags + cache\n  var o3 = new_buf(6);\n  var flags = 0x01 | 0x20;\n  o3.write_shift(2, flags);\n  o3.write_shift(4, 0);\n\n  // CellParsedFormula\n  var bf = new_buf(cell.bf.length);\n  for (var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n  var out = bconcat([o1, o2, o3, bf]);\n  return out;\n}\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n  var cce = data.read_shift(4);\n  var rgce = parse_Rgce(data, cce, opts);\n  var cb = data.read_shift(4);\n  var rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f /*:string*/) /*:string*/{\n  if (f.slice(0, 3) == \"of:\") f = f.slice(3);\n  /* 5.2 Basic Expressions */\n  if (f.charCodeAt(0) == 61) {\n    f = f.slice(1);\n    if (f.charCodeAt(0) == 61) f = f.slice(1);\n  }\n  f = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n  /* Part 3 Section 5.8 References */\n  f = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function ($$, $1) {\n    return $1.replace(/\\./g, \"\");\n  });\n  /* TODO: something other than this */\n  f = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n  return f.replace(/[;~]/g, \",\").replace(/\\|/g, \";\");\n}\nfunction csf_to_ods_formula(f /*:string*/) /*:string*/{\n  var o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g, \":\");\n  /* TODO: something other than this */\n  return o.replace(/;/g, \"|\").replace(/,/g, \";\");\n}\nfunction ods_to_csf_3D(r /*:string*/) /*:[string, string]*/{\n  var a = r.split(\":\");\n  var s = a[0].split(\".\")[0];\n  return [s, a[0].split(\".\")[1] + (a.length > 1 ? \":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0]) : \"\")];\n}\nfunction csf_to_ods_3D(r /*:string*/) /*:string*/{\n  return r.replace(/\\./, \"!\");\n}\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\nfunction get_sst_id(sst /*:SST*/, str /*:string*/, rev) /*:number*/{\n  var i = 0,\n    len = sst.length;\n  if (rev) {\n    if (browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n      var revarr = browser_has_Map ? rev.get(str) : rev[str];\n      for (; i < revarr.length; ++i) {\n        if (sst[revarr[i]].t === str) {\n          sst.Count++;\n          return revarr[i];\n        }\n      }\n    }\n  } else for (; i < len; ++i) {\n    if (sst[i].t === str) {\n      sst.Count++;\n      return i;\n    }\n  }\n  sst[len] = {\n    t: str\n  } /*:any*/;\n  sst.Count++;\n  sst.Unique++;\n  if (rev) {\n    if (browser_has_Map) {\n      if (!rev.has(str)) rev.set(str, []);\n      rev.get(str).push(len);\n    } else {\n      if (!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n      rev[str].push(len);\n    }\n  }\n  return len;\n}\nfunction col_obj_w(C /*:number*/, col) {\n  var p = {\n    min: C + 1,\n    max: C + 1\n  } /*:any*/;\n  /* wch (chars), wpx (pixels) */\n  var wch = -1;\n  if (col.MDW) MDW = col.MDW;\n  if (col.width != null) p.customWidth = 1;else if (col.wpx != null) wch = px2char(col.wpx);else if (col.wch != null) wch = col.wch;\n  if (wch > -1) {\n    p.width = char2width(wch);\n    p.customWidth = 1;\n  } else if (col.width != null) p.width = col.width;\n  if (col.hidden) p.hidden = true;\n  if (col.level != null) {\n    p.outlineLevel = p.level = col.level;\n  }\n  return p;\n}\nfunction default_margins(margins /*:Margins*/, mode /*:?string*/) {\n  if (!margins) return;\n  var defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n  if (mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n  if (margins.left == null) margins.left = defs[0];\n  if (margins.right == null) margins.right = defs[1];\n  if (margins.top == null) margins.top = defs[2];\n  if (margins.bottom == null) margins.bottom = defs[3];\n  if (margins.header == null) margins.header = defs[4];\n  if (margins.footer == null) margins.footer = defs[5];\n}\nfunction get_cell_style(styles /*:Array<any>*/, cell /*:Cell*/, opts) {\n  var z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n  var i = 0x3c,\n    len = styles.length;\n  if (z == null && opts.ssf) {\n    for (; i < 0x188; ++i) if (opts.ssf[i] == null) {\n      SSF_load(cell.z, i);\n      // $FlowIgnore\n      opts.ssf[i] = cell.z;\n      opts.revssf[cell.z] = z = i;\n      break;\n    }\n  }\n  for (i = 0; i != len; ++i) if (styles[i].numFmtId === z) return i;\n  styles[len] = {\n    numFmtId: z,\n    fontId: 0,\n    fillId: 0,\n    borderId: 0,\n    xfId: 0,\n    applyNumberFormat: 1\n  };\n  return len;\n}\nfunction safe_format(p /*:Cell*/, fmtid /*:number*/, fillid /*:?number*/, opts, themes, styles) {\n  try {\n    if (opts.cellNF) p.z = table_fmt[fmtid];\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (p.t === 'z' && !opts.cellStyles) return;\n  if (p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n  if ((!opts || opts.cellText !== false) && p.t !== 'z') try {\n    if (table_fmt[fmtid] == null) SSF_load(SSFImplicit[fmtid] || \"General\", fmtid);\n    if (p.t === 'e') p.w = p.w || BErr[p.v];else if (fmtid === 0) {\n      if (p.t === 'n') {\n        if ((p.v | 0) === p.v) p.w = p.v.toString(10);else p.w = SSF_general_num(p.v);\n      } else if (p.t === 'd') {\n        var dd = datenum(p.v);\n        if ((dd | 0) === dd) p.w = dd.toString(10);else p.w = SSF_general_num(dd);\n      } else if (p.v === undefined) return \"\";else p.w = SSF_general(p.v, _ssfopts);\n    } else if (p.t === 'd') p.w = SSF_format(fmtid, datenum(p.v), _ssfopts);else p.w = SSF_format(fmtid, p.v, _ssfopts);\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (!opts.cellStyles) return;\n  if (fillid != null) try {\n    p.s = styles.Fills[fillid];\n    if (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n      p.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n      if (opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n    }\n    if (p.s.bgColor && p.s.bgColor.theme) {\n      p.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n      if (opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n    }\n  } catch (e) {\n    if (opts.WTF && styles.Fills) throw e;\n  }\n}\nfunction check_ws(ws /*:Worksheet*/, sname /*:string*/, i /*:number*/) {\n  if (ws && ws['!ref']) {\n    var range = safe_decode_range(ws['!ref']);\n    if (range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n  }\n}\nfunction parse_ws_xml_dim(ws /*:Worksheet*/, s /*:string*/) {\n  var d = safe_decode_range(s);\n  if (d.s.r <= d.e.r && d.s.c <= d.e.c && d.s.r >= 0 && d.s.c >= 0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\nvar sheetdataregex = /<(?:\\w+:)?sheetData[^>]*>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\nvar marginregex = /<(?:\\w:)?pageMargins[^>]*\\/>/g;\nvar sheetprregex = /<(?:\\w:)?sheetPr\\b(?:[^>a-z][^>]*)?\\/>/;\nvar sheetprregex2 = /<(?:\\w:)?sheetPr[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetPr)>/;\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data /*:?string*/, opts, idx /*:number*/, rels, wb /*:WBWBProps*/, themes, styles) /*:Worksheet*/{\n  if (!data) return data;\n  if (!rels) rels = {\n    '!id': {}\n  };\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n  /* 18.3.1.99 worksheet CT_Worksheet */\n  var s = opts.dense ? [] /*:any*/ : {} /*:any*/;\n  var refguess /*:Range*/ = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  } /*:any*/;\n  var data1 = \"\",\n    data2 = \"\";\n  var mtch /*:?any*/ = data.match(sheetdataregex);\n  if (mtch) {\n    data1 = data.slice(0, mtch.index);\n    data2 = data.slice(mtch.index + mtch[0].length);\n  } else data1 = data2 = data;\n\n  /* 18.3.1.82 sheetPr CT_SheetPr */\n  var sheetPr = data1.match(sheetprregex);\n  if (sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);else if (sheetPr = data1.match(sheetprregex2)) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1] || \"\", s, wb, idx, styles, themes);\n\n  /* 18.3.1.35 dimension CT_SheetDimension */\n  var ridx = (data1.match(/<(?:\\w*:)?dimension/) || {\n    index: -1\n  }).index;\n  if (ridx > 0) {\n    var ref = data1.slice(ridx, ridx + 50).match(dimregex);\n    if (ref) parse_ws_xml_dim(s, ref[1]);\n  }\n\n  /* 18.3.1.88 sheetViews CT_SheetViews */\n  var svs = data1.match(svsregex);\n  if (svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n  /* 18.3.1.17 cols CT_Cols */\n  var columns /*:Array<ColInfo>*/ = [];\n  if (opts.cellStyles) {\n    /* 18.3.1.13 col CT_Col */\n    var cols = data1.match(colregex);\n    if (cols) parse_ws_xml_cols(columns, cols);\n  }\n\n  /* 18.3.1.80 sheetData CT_SheetData ? */\n  if (mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\n\n  /* 18.3.1.2  autoFilter CT_AutoFilter */\n  var afilter = data2.match(afregex);\n  if (afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n  /* 18.3.1.55 mergeCells CT_MergeCells */\n  var merges /*:Array<Range>*/ = [];\n  var _merge = data2.match(mergecregex);\n  if (_merge) for (ridx = 0; ridx != _merge.length; ++ridx) merges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\") + 1));\n\n  /* 18.3.1.48 hyperlinks CT_Hyperlinks */\n  var hlink = data2.match(hlinkregex);\n  if (hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n  /* 18.3.1.62 pageMargins CT_PageMargins */\n  var margins = data2.match(marginregex);\n  if (margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n  if (!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n  if (opts.sheetRows > 0 && s[\"!ref\"]) {\n    var tmpref = safe_decode_range(s[\"!ref\"]);\n    if (opts.sheetRows <= +tmpref.e.r) {\n      tmpref.e.r = opts.sheetRows - 1;\n      if (tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n      if (tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n      if (tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n      if (tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n      s[\"!fullref\"] = s[\"!ref\"];\n      s[\"!ref\"] = encode_range(tmpref);\n    }\n  }\n  if (columns.length > 0) s[\"!cols\"] = columns;\n  if (merges.length > 0) s[\"!merges\"] = merges;\n  return s;\n}\nfunction write_ws_xml_merges(merges /*:Array<Range>*/) /*:string*/{\n  if (merges.length === 0) return \"\";\n  var o = '<mergeCells count=\"' + merges.length + '\">';\n  for (var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n  return o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr /*:string*/, s, wb /*:WBWBProps*/, idx /*:number*/) {\n  var data = parsexmltag(sheetPr);\n  if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n  if (data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr /*:string*/, body /*:string*/, s, wb /*:WBWBProps*/, idx /*:number*/) {\n  parse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n  var needed = false;\n  var props = {},\n    payload = null;\n  if (opts.bookType !== 'xlsx' && wb.vbaraw) {\n    var cname = wb.SheetNames[idx];\n    try {\n      if (wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname;\n    } catch (e) {}\n    needed = true;\n    props.codeName = utf8write(escapexml(cname));\n  }\n  if (ws && ws[\"!outline\"]) {\n    var outlineprops = {\n      summaryBelow: 1,\n      summaryRight: 1\n    };\n    if (ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n    if (ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n    payload = (payload || \"\") + writextag('outlinePr', null, outlineprops);\n  }\n  if (!needed && !payload) return;\n  o[o.length] = writextag('sheetPr', payload, props);\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\"formatColumns\", \"formatRows\", \"formatCells\", \"insertColumns\", \"insertRows\", \"insertHyperlinks\", \"deleteColumns\", \"deleteRows\", \"sort\", \"autoFilter\", \"pivotTables\"];\nfunction write_ws_xml_protection(sp) /*:string*/{\n  // algorithmName, hashValue, saltValue, spinCount\n  var o = {\n    sheet: 1\n  } /*:any*/;\n  sheetprot_deffalse.forEach(function (n) {\n    if (sp[n] != null && sp[n]) o[n] = \"1\";\n  });\n  sheetprot_deftrue.forEach(function (n) {\n    if (sp[n] != null && !sp[n]) o[n] = \"0\";\n  });\n  /* TODO: algorithm */\n  if (sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n  return writextag('sheetProtection', null, o);\n}\nfunction parse_ws_xml_hlinks(s, data /*:Array<string>*/, rels) {\n  var dense = Array.isArray(s);\n  for (var i = 0; i != data.length; ++i) {\n    var val = parsexmltag(utf8read(data[i]), true);\n    if (!val.ref) return;\n    var rel = ((rels || {})['!id'] || [])[val.id];\n    if (rel) {\n      val.Target = rel.Target;\n      if (val.location) val.Target += \"#\" + unescapexml(val.location);\n    } else {\n      val.Target = \"#\" + unescapexml(val.location);\n      rel = {\n        Target: val.Target,\n        TargetMode: 'Internal'\n      };\n    }\n    val.Rel = rel;\n    if (val.tooltip) {\n      val.Tooltip = val.tooltip;\n      delete val.tooltip;\n    }\n    var rng = safe_decode_range(val.ref);\n    for (var R = rng.s.r; R <= rng.e.r; ++R) for (var C = rng.s.c; C <= rng.e.c; ++C) {\n      var addr = encode_cell({\n        c: C,\n        r: R\n      });\n      if (dense) {\n        if (!s[R]) s[R] = [];\n        if (!s[R][C]) s[R][C] = {\n          t: \"z\",\n          v: undefined\n        };\n        s[R][C].l = val;\n      } else {\n        if (!s[addr]) s[addr] = {\n          t: \"z\",\n          v: undefined\n        };\n        s[addr].l = val;\n      }\n    }\n  }\n}\nfunction parse_ws_xml_margins(margin) {\n  var o = {};\n  [\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function (k) {\n    if (margin[k]) o[k] = parseFloat(margin[k]);\n  });\n  return o;\n}\nfunction write_ws_xml_margins(margin) /*:string*/{\n  default_margins(margin);\n  return writextag('pageMargins', null, margin);\n}\nfunction parse_ws_xml_cols(columns, cols) {\n  var seencol = false;\n  for (var coli = 0; coli != cols.length; ++coli) {\n    var coll = parsexmltag(cols[coli], true);\n    if (coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n    var colm = parseInt(coll.min, 10) - 1,\n      colM = parseInt(coll.max, 10) - 1;\n    if (coll.outlineLevel) coll.level = +coll.outlineLevel || 0;\n    delete coll.min;\n    delete coll.max;\n    coll.width = +coll.width;\n    if (!seencol && coll.width) {\n      seencol = true;\n      find_mdw_colw(coll.width);\n    }\n    process_col(coll);\n    while (colm <= colM) columns[colm++] = dup(coll);\n  }\n}\nfunction write_ws_xml_cols(ws, cols) /*:string*/{\n  var o = [\"<cols>\"],\n    col;\n  for (var i = 0; i != cols.length; ++i) {\n    if (!(col = cols[i])) continue;\n    o[o.length] = writextag('col', null, col_obj_w(i, col));\n  }\n  o[o.length] = \"</cols>\";\n  return o.join(\"\");\n}\nfunction parse_ws_xml_autofilter(data /*:string*/) {\n  var o = {\n    ref: (data.match(/ref=\"([^\"]*)\"/) || [])[1]\n  };\n  return o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx) /*:string*/{\n  var ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n  if (!wb.Workbook) wb.Workbook = {\n    Sheets: []\n  } /*:any*/;\n  if (!wb.Workbook.Names) wb.Workbook.Names = [];\n  var names /*: Array<any> */ = wb.Workbook.Names;\n  var range = decode_range(ref);\n  if (range.s.r == range.e.r) {\n    range.e.r = decode_range(ws[\"!ref\"]).e.r;\n    ref = encode_range(range);\n  }\n  for (var i = 0; i < names.length; ++i) {\n    var name = names[i];\n    if (name.Name != '_xlnm._FilterDatabase') continue;\n    if (name.Sheet != idx) continue;\n    name.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref;\n    break;\n  }\n  if (i == names.length) names.push({\n    Name: '_xlnm._FilterDatabase',\n    Sheet: idx,\n    Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref\n  });\n  return writextag(\"autoFilter\", null, {\n    ref: ref\n  });\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/?>/;\nfunction parse_ws_xml_sheetviews(data, wb /*:WBWBProps*/) {\n  if (!wb.Views) wb.Views = [{}];\n  (data.match(sviewregex) || []).forEach(function (r /*:string*/, i /*:number*/) {\n    var tag = parsexmltag(r);\n    // $FlowIgnore\n    if (!wb.Views[i]) wb.Views[i] = {};\n    // $FlowIgnore\n    if (+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n    // $FlowIgnore\n    if (parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n  });\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb) /*:string*/{\n  var sview = {\n    workbookViewId: \"0\"\n  } /*:any*/;\n  // $FlowIgnore\n  if ((((wb || {}).Workbook || {}).Views || [])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n  return writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\nfunction write_ws_xml_cell(cell /*:Cell*/, ref, ws, opts /*::, idx, wb*/) /*:string*/{\n  if (cell.c) ws['!comments'].push([ref, cell.c]);\n  if (cell.v === undefined && typeof cell.f !== \"string\" || cell.t === 'z' && !cell.f) return \"\";\n  var vv = \"\";\n  var oldt = cell.t,\n    oldv = cell.v;\n  if (cell.t !== \"z\") switch (cell.t) {\n    case 'b':\n      vv = cell.v ? \"1\" : \"0\";\n      break;\n    case 'n':\n      vv = '' + cell.v;\n      break;\n    case 'e':\n      vv = BErr[cell.v];\n      break;\n    case 'd':\n      if (opts && opts.cellDates) vv = parseDate(cell.v, -1).toISOString();else {\n        cell = dup(cell);\n        cell.t = 'n';\n        vv = '' + (cell.v = datenum(parseDate(cell.v)));\n      }\n      if (typeof cell.z === 'undefined') cell.z = table_fmt[14];\n      break;\n    default:\n      vv = cell.v;\n      break;\n  }\n  var v = writetag('v', escapexml(vv)),\n    o = {\n      r: ref\n    } /*:any*/;\n  /* TODO: cell style */\n  var os = get_cell_style(opts.cellXfs, cell, opts);\n  if (os !== 0) o.s = os;\n  switch (cell.t) {\n    case 'n':\n      break;\n    case 'd':\n      o.t = \"d\";\n      break;\n    case 'b':\n      o.t = \"b\";\n      break;\n    case 'e':\n      o.t = \"e\";\n      break;\n    case 'z':\n      break;\n    default:\n      if (cell.v == null) {\n        delete cell.t;\n        break;\n      }\n      if (cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n      if (opts && opts.bookSST) {\n        v = writetag('v', '' + get_sst_id(opts.Strings, cell.v, opts.revStrings));\n        o.t = \"s\";\n        break;\n      }\n      o.t = \"str\";\n      break;\n  }\n  if (cell.t != oldt) {\n    cell.t = oldt;\n    cell.v = oldv;\n  }\n  if (typeof cell.f == \"string\" && cell.f) {\n    var ff = cell.F && cell.F.slice(0, ref.length) == ref ? {\n      t: \"array\",\n      ref: cell.F\n    } : null;\n    v = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n  }\n  if (cell.l) ws['!links'].push([ref, cell.l]);\n  if (cell.D) o.cm = 1;\n  return writextag('c', v, o);\n}\nvar parse_ws_xml_data = /*#__PURE__*/function () {\n  var cellregex = /<(?:\\w+:)?c[ \\/>]/,\n    rowregex = /<\\/(?:\\w+:)?row>/;\n  var rregex = /r=[\"']([^\"']*)[\"']/,\n    isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n  var refregex = /ref=[\"']([^\"']*)[\"']/;\n  var match_v = matchtag(\"v\"),\n    match_f = matchtag(\"f\");\n  return function parse_ws_xml_data(sdata /*:string*/, s, opts, guess /*:Range*/, themes, styles) {\n    var ri = 0,\n      x = \"\",\n      cells /*:Array<string>*/ = [],\n      cref /*:?Array<string>*/ = [],\n      idx = 0,\n      i = 0,\n      cc = 0,\n      d = \"\",\n      p /*:any*/;\n    var tag,\n      tagr = 0,\n      tagc = 0;\n    var sstr, ftag;\n    var fmtid = 0,\n      fillid = 0;\n    var do_format = Array.isArray(styles.CellXf),\n      cf;\n    var arrayf /*:Array<[Range, string]>*/ = [];\n    var sharedf = [];\n    var dense = Array.isArray(s);\n    var rows /*:Array<RowInfo>*/ = [],\n      rowobj = {},\n      rowrite = false;\n    var sheetStubs = !!opts.sheetStubs;\n    for (var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n      x = marr[mt].trim();\n      var xlen = x.length;\n      if (xlen === 0) continue;\n\n      /* 18.3.1.73 row CT_Row */\n      var rstarti = 0;\n      outa: for (ri = 0; ri < xlen; ++ri) switch ( /*x.charCodeAt(ri)*/x[ri]) {\n        case \">\" /*62*/:\n          if ( /*x.charCodeAt(ri-1) != 47*/x[ri - 1] != \"/\") {\n            ++ri;\n            break outa;\n          }\n          if (opts && opts.cellStyles) {\n            // TODO: avoid duplication\n            tag = parsexmltag(x.slice(rstarti, ri), true);\n            tagr = tag.r != null ? parseInt(tag.r, 10) : tagr + 1;\n            tagc = -1;\n            if (opts.sheetRows && opts.sheetRows < tagr) continue;\n            rowobj = {};\n            rowrite = false;\n            if (tag.ht) {\n              rowrite = true;\n              rowobj.hpt = parseFloat(tag.ht);\n              rowobj.hpx = pt2px(rowobj.hpt);\n            }\n            if (tag.hidden == \"1\") {\n              rowrite = true;\n              rowobj.hidden = true;\n            }\n            if (tag.outlineLevel != null) {\n              rowrite = true;\n              rowobj.level = +tag.outlineLevel;\n            }\n            if (rowrite) rows[tagr - 1] = rowobj;\n          }\n          break;\n        case \"<\" /*60*/:\n          rstarti = ri;\n          break;\n      }\n      if (rstarti >= ri) break;\n      tag = parsexmltag(x.slice(rstarti, ri), true);\n      tagr = tag.r != null ? parseInt(tag.r, 10) : tagr + 1;\n      tagc = -1;\n      if (opts.sheetRows && opts.sheetRows < tagr) continue;\n      if (guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n      if (guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n      if (opts && opts.cellStyles) {\n        rowobj = {};\n        rowrite = false;\n        if (tag.ht) {\n          rowrite = true;\n          rowobj.hpt = parseFloat(tag.ht);\n          rowobj.hpx = pt2px(rowobj.hpt);\n        }\n        if (tag.hidden == \"1\") {\n          rowrite = true;\n          rowobj.hidden = true;\n        }\n        if (tag.outlineLevel != null) {\n          rowrite = true;\n          rowobj.level = +tag.outlineLevel;\n        }\n        if (rowrite) rows[tagr - 1] = rowobj;\n      }\n\n      /* 18.3.1.4 c CT_Cell */\n      cells = x.slice(ri).split(cellregex);\n      for (var rslice = 0; rslice != cells.length; ++rslice) if (cells[rslice].trim().charAt(0) != \"<\") break;\n      cells = cells.slice(rslice);\n      for (ri = 0; ri != cells.length; ++ri) {\n        x = cells[ri].trim();\n        if (x.length === 0) continue;\n        cref = x.match(rregex);\n        idx = ri;\n        i = 0;\n        cc = 0;\n        x = \"<c \" + (x.slice(0, 1) == \"<\" ? \">\" : \"\") + x;\n        if (cref != null && cref.length === 2) {\n          idx = 0;\n          d = cref[1];\n          for (i = 0; i != d.length; ++i) {\n            if ((cc = d.charCodeAt(i) - 64) < 1 || cc > 26) break;\n            idx = 26 * idx + cc;\n          }\n          --idx;\n          tagc = idx;\n        } else ++tagc;\n        for (i = 0; i != x.length; ++i) if (x.charCodeAt(i) === 62) break;\n        ++i;\n        tag = parsexmltag(x.slice(0, i), true);\n        if (!tag.r) tag.r = encode_cell({\n          r: tagr - 1,\n          c: tagc\n        });\n        d = x.slice(i);\n        p = {\n          t: \"\"\n        } /*:any*/;\n        if ((cref = d.match(match_v)) != null && /*::cref != null && */cref[1] !== '') p.v = unescapexml(cref[1]);\n        if (opts.cellFormula) {\n          if ((cref = d.match(match_f)) != null && /*::cref != null && */cref[1] !== '') {\n            /* TODO: match against XLSXFutureFunctions */\n            p.f = unescapexml(utf8read(cref[1])).replace(/\\r\\n/g, \"\\n\");\n            if (!opts.xlfn) p.f = _xlfn(p.f);\n            if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n              p.F = (d.match(refregex) || [])[1];\n              if (p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n            } else if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n              // TODO: parse formula\n              ftag = parsexmltag(cref[0]);\n              var ___f = unescapexml(utf8read(cref[1]));\n              if (!opts.xlfn) ___f = _xlfn(___f);\n              sharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n            }\n          } else if (cref = d.match(/<f[^>]*\\/>/)) {\n            ftag = parsexmltag(cref[0]);\n            if (sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2] /*[0].ref*/, tag.r);\n          }\n          /* TODO: factor out contains logic */\n          var _tag = decode_cell(tag.r);\n          for (i = 0; i < arrayf.length; ++i) if (_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r) if (_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c) p.F = arrayf[i][1];\n        }\n        if (tag.t == null && p.v === undefined) {\n          if (p.f || p.F) {\n            p.v = 0;\n            p.t = \"n\";\n          } else if (!sheetStubs) continue;else p.t = \"z\";\n        } else p.t = tag.t || \"n\";\n        if (guess.s.c > tagc) guess.s.c = tagc;\n        if (guess.e.c < tagc) guess.e.c = tagc;\n        /* 18.18.11 t ST_CellType */\n        switch (p.t) {\n          case 'n':\n            if (p.v == \"\" || p.v == null) {\n              if (!sheetStubs) continue;\n              p.t = 'z';\n            } else p.v = parseFloat(p.v);\n            break;\n          case 's':\n            if (typeof p.v == 'undefined') {\n              if (!sheetStubs) continue;\n              p.t = 'z';\n            } else {\n              sstr = strs[parseInt(p.v, 10)];\n              p.v = sstr.t;\n              p.r = sstr.r;\n              if (opts.cellHTML) p.h = sstr.h;\n            }\n            break;\n          case 'str':\n            p.t = \"s\";\n            p.v = p.v != null ? utf8read(p.v) : '';\n            if (opts.cellHTML) p.h = escapehtml(p.v);\n            break;\n          case 'inlineStr':\n            cref = d.match(isregex);\n            p.t = 's';\n            if (cref != null && (sstr = parse_si(cref[1]))) {\n              p.v = sstr.t;\n              if (opts.cellHTML) p.h = sstr.h;\n            } else p.v = \"\";\n            break;\n          case 'b':\n            p.v = parsexmlbool(p.v);\n            break;\n          case 'd':\n            if (opts.cellDates) p.v = parseDate(p.v, 1);else {\n              p.v = datenum(parseDate(p.v, 1));\n              p.t = 'n';\n            }\n            break;\n          /* error string in .w, number in .v */\n          case 'e':\n            if (!opts || opts.cellText !== false) p.w = p.v;\n            p.v = RBErr[p.v];\n            break;\n        }\n        /* formatting */\n        fmtid = fillid = 0;\n        cf = null;\n        if (do_format && tag.s !== undefined) {\n          cf = styles.CellXf[tag.s];\n          if (cf != null) {\n            if (cf.numFmtId != null) fmtid = cf.numFmtId;\n            if (opts.cellStyles) {\n              if (cf.fillId != null) fillid = cf.fillId;\n            }\n          }\n        }\n        safe_format(p, fmtid, fillid, opts, themes, styles);\n        if (opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) {\n          p.t = 'd';\n          p.v = numdate(p.v);\n        }\n        if (tag.cm && opts.xlmeta) {\n          var cm = (opts.xlmeta.Cell || [])[+tag.cm - 1];\n          if (cm && cm.type == 'XLDAPR') p.D = true;\n        }\n        if (dense) {\n          var _r = decode_cell(tag.r);\n          if (!s[_r.r]) s[_r.r] = [];\n          s[_r.r][_r.c] = p;\n        } else s[tag.r] = p;\n      }\n    }\n    if (rows.length > 0) s['!rows'] = rows;\n  };\n}();\nfunction write_ws_xml_data(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/ /*::, rels*/) /*:string*/{\n  var o /*:Array<string>*/ = [],\n    r /*:Array<string>*/ = [],\n    range = safe_decode_range(ws['!ref']),\n    cell = \"\",\n    ref,\n    rr = \"\",\n    cols /*:Array<string>*/ = [],\n    R = 0,\n    C = 0,\n    rows = ws['!rows'];\n  var dense = Array.isArray(ws);\n  var params = {\n      r: rr\n    } /*:any*/,\n    row /*:RowInfo*/,\n    height = -1;\n  for (C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n  for (R = range.s.r; R <= range.e.r; ++R) {\n    r = [];\n    rr = encode_row(R);\n    for (C = range.s.c; C <= range.e.c; ++C) {\n      ref = cols[C] + rr;\n      var _cell = dense ? (ws[R] || [])[C] : ws[ref];\n      if (_cell === undefined) continue;\n      if ((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\n    }\n    if (r.length > 0 || rows && rows[R]) {\n      params = {\n        r: rr\n      } /*:any*/;\n      if (rows && rows[R]) {\n        row = rows[R];\n        if (row.hidden) params.hidden = 1;\n        height = -1;\n        if (row.hpx) height = px2pt(row.hpx);else if (row.hpt) height = row.hpt;\n        if (height > -1) {\n          params.ht = height;\n          params.customHeight = 1;\n        }\n        if (row.level) {\n          params.outlineLevel = row.level;\n        }\n      }\n      o[o.length] = writextag('row', r.join(\"\"), params);\n    }\n  }\n  if (rows) for (; R < rows.length; ++R) {\n    if (rows && rows[R]) {\n      params = {\n        r: R + 1\n      } /*:any*/;\n      row = rows[R];\n      if (row.hidden) params.hidden = 1;\n      height = -1;\n      if (row.hpx) height = px2pt(row.hpx);else if (row.hpt) height = row.hpt;\n      if (height > -1) {\n        params.ht = height;\n        params.customHeight = 1;\n      }\n      if (row.level) {\n        params.outlineLevel = row.level;\n      }\n      o[o.length] = writextag('row', \"\", params);\n    }\n  }\n  return o.join(\"\");\n}\nfunction write_ws_xml(idx /*:number*/, opts, wb /*:Workbook*/, rels) /*:string*/{\n  var o = [XML_HEADER, writextag('worksheet', null, {\n    'xmlns': XMLNS_main[0],\n    'xmlns:r': XMLNS.r\n  })];\n  var s = wb.SheetNames[idx],\n    sidx = 0,\n    rdata = \"\";\n  var ws = wb.Sheets[s];\n  if (ws == null) ws = {};\n  var ref = ws['!ref'] || 'A1';\n  var range = safe_decode_range(ref);\n  if (range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n    if (opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n    range.e.c = Math.min(range.e.c, 0x3FFF);\n    range.e.r = Math.min(range.e.c, 0xFFFFF);\n    ref = encode_range(range);\n  }\n  if (!rels) rels = {};\n  ws['!comments'] = [];\n  var _drawing = [];\n  write_ws_xml_sheetpr(ws, wb, idx, opts, o);\n  o[o.length] = writextag('dimension', null, {\n    'ref': ref\n  });\n  o[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n  /* TODO: store in WB, process styles */\n  if (opts.sheetFormat) o[o.length] = writextag('sheetFormatPr', null, {\n    defaultRowHeight: opts.sheetFormat.defaultRowHeight || '16',\n    baseColWidth: opts.sheetFormat.baseColWidth || '10',\n    outlineLevelRow: opts.sheetFormat.outlineLevelRow || '7'\n  });\n  if (ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = write_ws_xml_cols(ws, ws['!cols']);\n  o[sidx = o.length] = '<sheetData/>';\n  ws['!links'] = [];\n  if (ws['!ref'] != null) {\n    rdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n    if (rdata.length > 0) o[o.length] = rdata;\n  }\n  if (o.length > sidx + 1) {\n    o[o.length] = '</sheetData>';\n    o[sidx] = o[sidx].replace(\"/>\", \">\");\n  }\n\n  /* sheetCalcPr */\n\n  if (ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n  /* protectedRanges */\n  /* scenarios */\n\n  if (ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n  /* sortState */\n  /* dataConsolidate */\n  /* customSheetViews */\n\n  if (ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = write_ws_xml_merges(ws['!merges']);\n\n  /* phoneticPr */\n  /* conditionalFormatting */\n  /* dataValidations */\n\n  var relc = -1,\n    rel,\n    rId = -1;\n  if ( /*::(*/ws['!links'] /*::||[])*/.length > 0) {\n    o[o.length] = \"<hyperlinks>\";\n    /*::(*/\n    ws['!links'] /*::||[])*/.forEach(function (l) {\n      if (!l[1].Target) return;\n      rel = {\n        \"ref\": l[0]\n      } /*:any*/;\n      if (l[1].Target.charAt(0) != \"#\") {\n        rId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n        rel[\"r:id\"] = \"rId\" + rId;\n      }\n      if ((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc + 1));\n      if (l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n      o[o.length] = writextag(\"hyperlink\", null, rel);\n    });\n    o[o.length] = \"</hyperlinks>\";\n  }\n  delete ws['!links'];\n\n  /* printOptions */\n\n  if (ws['!margins'] != null) o[o.length] = write_ws_xml_margins(ws['!margins']);\n\n  /* pageSetup */\n  /* headerFooter */\n  /* rowBreaks */\n  /* colBreaks */\n  /* customProperties */\n  /* cellWatches */\n\n  if (!opts || opts.ignoreEC || opts.ignoreEC == void 0) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {\n    numberStoredAsText: 1,\n    sqref: ref\n  }));\n\n  /* smartTags */\n\n  if (_drawing.length > 0) {\n    rId = add_rels(rels, -1, \"../drawings/drawing\" + (idx + 1) + \".xml\", RELS.DRAW);\n    o[o.length] = writextag(\"drawing\", null, {\n      \"r:id\": \"rId\" + rId\n    });\n    ws['!drawing'] = _drawing;\n  }\n  if (ws['!comments'].length > 0) {\n    rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx + 1) + \".vml\", RELS.VML);\n    o[o.length] = writextag(\"legacyDrawing\", null, {\n      \"r:id\": \"rId\" + rId\n    });\n    ws['!legacy'] = rId;\n  }\n\n  /* legacyDrawingHF */\n  /* picture */\n  /* oleObjects */\n  /* controls */\n  /* webPublishItems */\n  /* tableParts */\n  /* extLst */\n\n  if (o.length > 1) {\n    o[o.length] = '</worksheet>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n  var z = {} /*:any*/;\n  var tgt = data.l + length;\n  z.r = data.read_shift(4);\n  data.l += 4; // TODO: ixfe\n  var miyRw = data.read_shift(2);\n  data.l += 1; // TODO: top/bot padding\n  var flags = data.read_shift(1);\n  data.l = tgt;\n  if (flags & 0x07) z.level = flags & 0x07;\n  if (flags & 0x10) z.hidden = true;\n  if (flags & 0x20) z.hpt = miyRw / 20;\n  return z;\n}\nfunction write_BrtRowHdr(R /*:number*/, range, ws) {\n  var o = new_buf(17 + 8 * 16);\n  var row = (ws['!rows'] || [])[R] || {};\n  o.write_shift(4, R);\n  o.write_shift(4, 0); /* TODO: ixfe */\n\n  var miyRw = 0x0140;\n  if (row.hpx) miyRw = px2pt(row.hpx) * 20;else if (row.hpt) miyRw = row.hpt * 20;\n  o.write_shift(2, miyRw);\n  o.write_shift(1, 0); /* top/bot padding */\n\n  var flags = 0x0;\n  if (row.level) flags |= row.level;\n  if (row.hidden) flags |= 0x10;\n  if (row.hpx || row.hpt) flags |= 0x20;\n  o.write_shift(1, flags);\n  o.write_shift(1, 0); /* phonetic guide */\n\n  /* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n  var ncolspan = 0,\n    lcs = o.l;\n  o.l += 4;\n  var caddr = {\n    r: R,\n    c: 0\n  };\n  for (var i = 0; i < 16; ++i) {\n    if (range.s.c > i + 1 << 10 || range.e.c < i << 10) continue;\n    var first = -1,\n      last = -1;\n    for (var j = i << 10; j < i + 1 << 10; ++j) {\n      caddr.c = j;\n      var cell = Array.isArray(ws) ? (ws[caddr.r] || [])[caddr.c] : ws[encode_cell(caddr)];\n      if (cell) {\n        if (first < 0) first = j;\n        last = j;\n      }\n    }\n    if (first < 0) continue;\n    ++ncolspan;\n    o.write_shift(4, first);\n    o.write_shift(4, last);\n  }\n  var l = o.l;\n  o.l = lcs;\n  o.write_shift(4, ncolspan);\n  o.l = l;\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n  var o = write_BrtRowHdr(R, range, ws);\n  if (o.length > 17 || (ws['!rows'] || [])[R]) write_record(ba, 0x0000 /* BrtRowHdr */, o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo( /*::data, length*/\n) {}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n  var z = {};\n  var f = data[data.l];\n  ++data.l;\n  z.above = !(f & 0x40);\n  z.left = !(f & 0x80);\n  /* TODO: pull flags */\n  data.l += 18;\n  z.name = parse_XLSBCodeName(data, length - 19);\n  return z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n  if (o == null) o = new_buf(84 + 4 * str.length);\n  var f = 0xC0;\n  if (outl) {\n    if (outl.above) f &= ~0x40;\n    if (outl.left) f &= ~0x80;\n  }\n  o.write_shift(1, f);\n  for (var i = 1; i < 3; ++i) o.write_shift(1, 0);\n  write_BrtColor({\n    auto: 1\n  }, o);\n  o.write_shift(-4, -1);\n  o.write_shift(-4, -1);\n  write_XLSBCodeName(str, o);\n  return o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n  var cell = parse_XLSBCell(data);\n  return [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  return write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n  var cell = parse_XLSBShortCell(data);\n  return [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n  if (o == null) o = new_buf(4);\n  return write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n  var cell = parse_XLSBCell(data);\n  var fBool = data.read_shift(1);\n  return [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n  if (o == null) o = new_buf(9);\n  write_XLSBCell(ncell, o);\n  o.write_shift(1, cell.v ? 1 : 0);\n  return o;\n}\nfunction parse_BrtShortBool(data) {\n  var cell = parse_XLSBShortCell(data);\n  var fBool = data.read_shift(1);\n  return [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n  if (o == null) o = new_buf(5);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(1, cell.v ? 1 : 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n  var cell = parse_XLSBCell(data);\n  var bError = data.read_shift(1);\n  return [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n  if (o == null) o = new_buf(9);\n  write_XLSBCell(ncell, o);\n  o.write_shift(1, cell.v);\n  return o;\n}\nfunction parse_BrtShortError(data) {\n  var cell = parse_XLSBShortCell(data);\n  var bError = data.read_shift(1);\n  return [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(1, cell.v);\n  o.write_shift(2, 0);\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n  var cell = parse_XLSBCell(data);\n  var isst = data.read_shift(4);\n  return [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBCell(ncell, o);\n  o.write_shift(4, ncell.v);\n  return o;\n}\nfunction parse_BrtShortIsst(data) {\n  var cell = parse_XLSBShortCell(data);\n  var isst = data.read_shift(4);\n  return [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(4, ncell.v);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_Xnum(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n  if (o == null) o = new_buf(16);\n  write_XLSBCell(ncell, o);\n  write_Xnum(cell.v, o);\n  return o;\n}\nfunction parse_BrtShortReal(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_Xnum(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBShortCell(ncell, o);\n  write_Xnum(cell.v, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_RkNumber(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBCell(ncell, o);\n  write_RkNumber(cell.v, o);\n  return o;\n}\nfunction parse_BrtShortRk(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_RkNumber(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  write_RkNumber(cell.v, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_RichStr(data);\n  return [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_XLWideString(data);\n  return [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n  if (o == null) o = new_buf(12 + 4 * cell.v.length);\n  write_XLSBCell(ncell, o);\n  write_XLWideString(cell.v, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_XLWideString(data);\n  return [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n  if (o == null) o = new_buf(8 + 4 * cell.v.length);\n  write_XLSBShortCell(ncell, o);\n  write_XLWideString(cell.v, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = data.read_shift(1);\n  var o = [cell, value, 'b'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = data.read_shift(1);\n  var o = [cell, value, 'e'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = parse_Xnum(data);\n  var o = [cell, value, 'n'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = parse_XLWideString(data);\n  var o = [cell, value, 'str'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n  if (o == null) o = new_buf(4);\n  o.write_shift(4, cnt);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length /*::, opts*/) {\n  var end = data.l + length;\n  var rfx = parse_UncheckedRfX(data, 16);\n  var relId = parse_XLNullableWideString(data);\n  var loc = parse_XLWideString(data);\n  var tooltip = parse_XLWideString(data);\n  var display = parse_XLWideString(data);\n  data.l = end;\n  var o = {\n    rfx: rfx,\n    relId: relId,\n    loc: loc,\n    display: display\n  } /*:any*/;\n  if (tooltip) o.Tooltip = tooltip;\n  return o;\n}\nfunction write_BrtHLink(l, rId) {\n  var o = new_buf(50 + 4 * (l[1].Target.length + (l[1].Tooltip || \"\").length));\n  write_UncheckedRfX({\n    s: decode_cell(l[0]),\n    e: decode_cell(l[0])\n  }, o);\n  write_RelID(\"rId\" + rId, o);\n  var locidx = l[1].Target.indexOf(\"#\");\n  var loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx + 1);\n  write_XLWideString(loc || \"\", o);\n  write_XLWideString(l[1].Tooltip || \"\", o);\n  write_XLWideString(\"\", o);\n  return o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane( /*data, length, opts*/\n) {}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n  var end = data.l + length;\n  var rfx = parse_RfX(data, 16);\n  var fAlwaysCalc = data.read_shift(1);\n  var o = [rfx];\n  o[2] = fAlwaysCalc;\n  if (opts.cellFormula) {\n    var formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n    o[1] = formula;\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n  var end = data.l + length;\n  var rfx = parse_UncheckedRfX(data, 16);\n  var o = [rfx];\n  if (opts.cellFormula) {\n    var formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n    o[1] = formula;\n    data.l = end;\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C /*:number*/, col, o) {\n  if (o == null) o = new_buf(18);\n  var p = col_obj_w(C, col);\n  o.write_shift(-4, C);\n  o.write_shift(-4, C);\n  o.write_shift(4, (p.width || 10) * 256);\n  o.write_shift(4, 0 /*ixfe*/); // style\n  var flags = 0;\n  if (col.hidden) flags |= 0x01;\n  if (typeof p.width == 'number') flags |= 0x02;\n  if (col.level) flags |= col.level << 8;\n  o.write_shift(2, flags); // bit flag\n  return o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"];\nfunction parse_BrtMargins(data /*::, length, opts*/) /*:Margins*/{\n  var margins = {} /*:any*/;\n  BrtMarginKeys.forEach(function (k) {\n    margins[k] = parse_Xnum(data, 8);\n  });\n  return margins;\n}\nfunction write_BrtMargins(margins /*:Margins*/, o) {\n  if (o == null) o = new_buf(6 * 8);\n  default_margins(margins);\n  BrtMarginKeys.forEach(function (k) {\n    write_Xnum(margins /*:any*/[k], o);\n  });\n  return o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data /*::, length, opts*/) {\n  var f = data.read_shift(2);\n  data.l += 28;\n  return {\n    RTL: f & 0x20\n  };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n  if (o == null) o = new_buf(30);\n  var f = 0x39c;\n  if ((((Workbook || {}).Views || [])[0] || {}).RTL) f |= 0x20;\n  o.write_shift(2, f); // bit flag\n  o.write_shift(4, 0);\n  o.write_shift(4, 0); // view first row\n  o.write_shift(4, 0); // view first col\n  o.write_shift(1, 0); // gridline color ICV\n  o.write_shift(1, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 100); // zoom scale\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(4, 0); // workbook view id\n  return o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n  var o = new_buf(24);\n  o.write_shift(4, 4);\n  o.write_shift(4, 1);\n  write_UncheckedRfX(ref, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n  if (o == null) o = new_buf(16 * 4 + 2);\n  o.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n  o.write_shift(4, 1); // this record should not be written if no protection\n  [[\"objects\", false],\n  // fObjects\n  [\"scenarios\", false],\n  // fScenarios\n  [\"formatCells\", true],\n  // fFormatCells\n  [\"formatColumns\", true],\n  // fFormatColumns\n  [\"formatRows\", true],\n  // fFormatRows\n  [\"insertColumns\", true],\n  // fInsertColumns\n  [\"insertRows\", true],\n  // fInsertRows\n  [\"insertHyperlinks\", true],\n  // fInsertHyperlinks\n  [\"deleteColumns\", true],\n  // fDeleteColumns\n  [\"deleteRows\", true],\n  // fDeleteRows\n  [\"selectLockedCells\", false],\n  // fSelLockedCells\n  [\"sort\", true],\n  // fSort\n  [\"autoFilter\", true],\n  // fAutoFilter\n  [\"pivotTables\", true],\n  // fPivotTables\n  [\"selectUnlockedCells\", false] // fSelUnlockedCells\n  ].forEach(function (n) {\n    /*:: if(o == null) throw \"unreachable\"; */\n    if (n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);else o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n  });\n  return o;\n}\nfunction parse_BrtDVal( /*data, length, opts*/\n) {}\nfunction parse_BrtDVal14( /*data, length, opts*/\n) {}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb /*:WBWBProps*/, themes, styles) /*:Worksheet*/{\n  if (!data) return data;\n  var opts = _opts || {};\n  if (!rels) rels = {\n    '!id': {}\n  };\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n  var s /*:Worksheet*/ = opts.dense ? [] : {};\n  var ref;\n  var refguess = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var state /*:Array<string>*/ = [];\n  var pass = false,\n    end = false;\n  var row, p, cf, R, C, addr, sstr, rr, cell /*:Cell*/;\n  var merges /*:Array<Range>*/ = [];\n  opts.biff = 12;\n  opts['!row'] = 0;\n  var ai = 0,\n    af = false;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var sharedf = {};\n  var supbooks = opts.supbooks || /*::(*/wb /*:: :any)*/.supbooks || [[]] /*:any*/;\n  supbooks.sharedf = sharedf;\n  supbooks.arrayf = arrayf;\n  supbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function (x) {\n    return x.name;\n  });\n  if (!opts.supbooks) {\n    opts.supbooks = supbooks;\n    if (wb.Names) for (var i = 0; i < wb.Names.length; ++i) supbooks[0][i + 1] = wb.Names[i];\n  }\n  var colinfo /*:Array<ColInfo>*/ = [],\n    rowinfo /*:Array<RowInfo>*/ = [];\n  var seencol = false;\n  XLSBRecordEnum[0x0010] = {\n    n: \"BrtShortReal\",\n    f: parse_BrtShortReal\n  };\n  var cm, vm;\n  recordhopper(data, function ws_parse(val, RR, RT) {\n    if (end) return;\n    switch (RT) {\n      case 0x0094:\n        /* 'BrtWsDim' */\n        ref = val;\n        break;\n      case 0x0000:\n        /* 'BrtRowHdr' */\n        row = val;\n        if (opts.sheetRows && opts.sheetRows <= row.r) end = true;\n        rr = encode_row(R = row.r);\n        opts['!row'] = row.r;\n        if (val.hidden || val.hpt || val.level != null) {\n          if (val.hpt) val.hpx = pt2px(val.hpt);\n          rowinfo[val.r] = val;\n        }\n        break;\n      case 0x0002: /* 'BrtCellRk' */\n      case 0x0003: /* 'BrtCellError' */\n      case 0x0004: /* 'BrtCellBool' */\n      case 0x0005: /* 'BrtCellReal' */\n      case 0x0006: /* 'BrtCellSt' */\n      case 0x0007: /* 'BrtCellIsst' */\n      case 0x0008: /* 'BrtFmlaString' */\n      case 0x0009: /* 'BrtFmlaNum' */\n      case 0x000A: /* 'BrtFmlaBool' */\n      case 0x000B: /* 'BrtFmlaError' */\n      case 0x000D: /* 'BrtShortRk' */\n      case 0x000E: /* 'BrtShortError' */\n      case 0x000F: /* 'BrtShortBool' */\n      case 0x0010: /* 'BrtShortReal' */\n      case 0x0011: /* 'BrtShortSt' */\n      case 0x0012: /* 'BrtShortIsst' */\n      case 0x003E:\n        /* 'BrtCellRString' */\n        p = {\n          t: val[2]\n        } /*:any*/;\n        switch (val[2]) {\n          case 'n':\n            p.v = val[1];\n            break;\n          case 's':\n            sstr = strs[val[1]];\n            p.v = sstr.t;\n            p.r = sstr.r;\n            break;\n          case 'b':\n            p.v = val[1] ? true : false;\n            break;\n          case 'e':\n            p.v = val[1];\n            if (opts.cellText !== false) p.w = BErr[p.v];\n            break;\n          case 'str':\n            p.t = 's';\n            p.v = val[1];\n            break;\n          case 'is':\n            p.t = 's';\n            p.v = val[1].t;\n            break;\n        }\n        if (cf = styles.CellXf[val[0].iStyleRef]) safe_format(p, cf.numFmtId, null, opts, themes, styles);\n        C = val[0].c == -1 ? C + 1 : val[0].c;\n        if (opts.dense) {\n          if (!s[R]) s[R] = [];\n          s[R][C] = p;\n        } else s[encode_col(C) + rr] = p;\n        if (opts.cellFormula) {\n          af = false;\n          for (ai = 0; ai < arrayf.length; ++ai) {\n            var aii = arrayf[ai];\n            if (row.r >= aii[0].s.r && row.r <= aii[0].e.r) if (C >= aii[0].s.c && C <= aii[0].e.c) {\n              p.F = encode_range(aii[0]);\n              af = true;\n            }\n          }\n          if (!af && val.length > 3) p.f = val[3];\n        }\n        if (refguess.s.r > row.r) refguess.s.r = row.r;\n        if (refguess.s.c > C) refguess.s.c = C;\n        if (refguess.e.r < row.r) refguess.e.r = row.r;\n        if (refguess.e.c < C) refguess.e.c = C;\n        if (opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {\n          var _d = SSF_parse_date_code(p.v);\n          if (_d) {\n            p.t = 'd';\n            p.v = new Date(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u);\n          }\n        }\n        if (cm) {\n          if (cm.type == 'XLDAPR') p.D = true;\n          cm = void 0;\n        }\n        if (vm) vm = void 0;\n        break;\n      case 0x0001: /* 'BrtCellBlank' */\n      case 0x000C:\n        /* 'BrtShortBlank' */\n        if (!opts.sheetStubs || pass) break;\n        p = {\n          t: 'z',\n          v: void 0\n        } /*:any*/;\n        C = val[0].c == -1 ? C + 1 : val[0].c;\n        if (opts.dense) {\n          if (!s[R]) s[R] = [];\n          s[R][C] = p;\n        } else s[encode_col(C) + rr] = p;\n        if (refguess.s.r > row.r) refguess.s.r = row.r;\n        if (refguess.s.c > C) refguess.s.c = C;\n        if (refguess.e.r < row.r) refguess.e.r = row.r;\n        if (refguess.e.c < C) refguess.e.c = C;\n        if (cm) {\n          if (cm.type == 'XLDAPR') p.D = true;\n          cm = void 0;\n        }\n        if (vm) vm = void 0;\n        break;\n      case 0x00B0:\n        /* 'BrtMergeCell' */\n        merges.push(val);\n        break;\n      case 0x0031:\n        {\n          /* 'BrtCellMeta' */\n          cm = ((opts.xlmeta || {}).Cell || [])[val - 1];\n        }\n        break;\n      case 0x01EE:\n        /* 'BrtHLink' */\n        var rel = rels['!id'][val.relId];\n        if (rel) {\n          val.Target = rel.Target;\n          if (val.loc) val.Target += \"#\" + val.loc;\n          val.Rel = rel;\n        } else if (val.relId == '') {\n          val.Target = \"#\" + val.loc;\n        }\n        for (R = val.rfx.s.r; R <= val.rfx.e.r; ++R) for (C = val.rfx.s.c; C <= val.rfx.e.c; ++C) {\n          if (opts.dense) {\n            if (!s[R]) s[R] = [];\n            if (!s[R][C]) s[R][C] = {\n              t: 'z',\n              v: undefined\n            };\n            s[R][C].l = val;\n          } else {\n            addr = encode_cell({\n              c: C,\n              r: R\n            });\n            if (!s[addr]) s[addr] = {\n              t: 'z',\n              v: undefined\n            };\n            s[addr].l = val;\n          }\n        }\n        break;\n      case 0x01AA:\n        /* 'BrtArrFmla' */\n        if (!opts.cellFormula) break;\n        arrayf.push(val);\n        cell = opts.dense ? s[R][C] : s[encode_col(C) + rr] /*:any*/;\n        cell.f = stringify_formula(val[1], refguess, {\n          r: row.r,\n          c: C\n        }, supbooks, opts);\n        cell.F = encode_range(val[0]);\n        break;\n      case 0x01AB:\n        /* 'BrtShrFmla' */\n        if (!opts.cellFormula) break;\n        sharedf[encode_cell(val[0].s)] = val[1];\n        cell = opts.dense ? s[R][C] : s[encode_col(C) + rr];\n        cell.f = stringify_formula(val[1], refguess, {\n          r: row.r,\n          c: C\n        }, supbooks, opts);\n        break;\n\n      /* identical to 'ColInfo' in XLS */\n      case 0x003C:\n        /* 'BrtColInfo' */\n        if (!opts.cellStyles) break;\n        while (val.e >= val.s) {\n          colinfo[val.e--] = {\n            width: val.w / 256,\n            hidden: !!(val.flags & 0x01),\n            level: val.level\n          };\n          if (!seencol) {\n            seencol = true;\n            find_mdw_colw(val.w / 256);\n          }\n          process_col(colinfo[val.e + 1]);\n        }\n        break;\n      case 0x00A1:\n        /* 'BrtBeginAFilter' */\n        s['!autofilter'] = {\n          ref: encode_range(val)\n        };\n        break;\n      case 0x01DC:\n        /* 'BrtMargins' */\n        s['!margins'] = val;\n        break;\n      case 0x0093:\n        /* 'BrtWsProp' */\n        if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n        if (val.name) wb.Sheets[idx].CodeName = val.name;\n        if (val.above || val.left) s['!outline'] = {\n          above: val.above,\n          left: val.left\n        };\n        break;\n      case 0x0089:\n        /* 'BrtBeginWsView' */\n        if (!wb.Views) wb.Views = [{}];\n        if (!wb.Views[0]) wb.Views[0] = {};\n        if (val.RTL) wb.Views[0].RTL = true;\n        break;\n      case 0x01E5:\n        /* 'BrtWsFmtInfo' */\n        break;\n      case 0x0040: /* 'BrtDVal' */\n      case 0x041D:\n        /* 'BrtDVal14' */\n        break;\n      case 0x0097:\n        /* 'BrtPane' */\n        break;\n      case 0x0098: /* 'BrtSel' */\n      case 0x00AF: /* 'BrtAFilterDateGroupItem' */\n      case 0x0284: /* 'BrtActiveX' */\n      case 0x0271: /* 'BrtBigName' */\n      case 0x0232: /* 'BrtBkHim' */\n      case 0x018C: /* 'BrtBrk' */\n      case 0x0458: /* 'BrtCFIcon' */\n      case 0x047A: /* 'BrtCFRuleExt' */\n      case 0x01D7: /* 'BrtCFVO' */\n      case 0x041A: /* 'BrtCFVO14' */\n      case 0x0289: /* 'BrtCellIgnoreEC' */\n      case 0x0451: /* 'BrtCellIgnoreEC14' */\n      case 0x024D: /* 'BrtCellSmartTagProperty' */\n      case 0x025F: /* 'BrtCellWatch' */\n      case 0x0234: /* 'BrtColor' */\n      case 0x041F: /* 'BrtColor14' */\n      case 0x00A8: /* 'BrtColorFilter' */\n      case 0x00AE: /* 'BrtCustomFilter' */\n      case 0x049C: /* 'BrtCustomFilter14' */\n      case 0x01F3: /* 'BrtDRef' */\n      case 0x01FB: /* 'BrtDXF' */\n      case 0x0226: /* 'BrtDrawing' */\n      case 0x00AB: /* 'BrtDynamicFilter' */\n      case 0x00A7: /* 'BrtFilter' */\n      case 0x0499: /* 'BrtFilter14' */\n      case 0x00A9: /* 'BrtIconFilter' */\n      case 0x049D: /* 'BrtIconFilter14' */\n      case 0x0227: /* 'BrtLegacyDrawing' */\n      case 0x0228: /* 'BrtLegacyDrawingHF' */\n      case 0x0295: /* 'BrtListPart' */\n      case 0x027F: /* 'BrtOleObject' */\n      case 0x01DE: /* 'BrtPageSetup' */\n      case 0x0219: /* 'BrtPhoneticInfo' */\n      case 0x01DD: /* 'BrtPrintOptions' */\n      case 0x0218: /* 'BrtRangeProtection' */\n      case 0x044F: /* 'BrtRangeProtection14' */\n      case 0x02A8: /* 'BrtRangeProtectionIso' */\n      case 0x0450: /* 'BrtRangeProtectionIso14' */\n      case 0x0400: /* 'BrtRwDescent' */\n      case 0x0297: /* 'BrtSheetCalcProp' */\n      case 0x0217: /* 'BrtSheetProtection' */\n      case 0x02A6: /* 'BrtSheetProtectionIso' */\n      case 0x01F8: /* 'BrtSlc' */\n      case 0x0413: /* 'BrtSparkline' */\n      case 0x01AC: /* 'BrtTable' */\n      case 0x00AA: /* 'BrtTop10Filter' */\n      case 0x0C00: /* 'BrtUid' */\n      case 0x0032: /* 'BrtValueMeta' */\n      case 0x0816: /* 'BrtWebExtension' */\n      case 0x0415:\n        /* 'BrtWsFmtInfoEx14' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (RR.T) {/* empty */} else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  delete opts.supbooks;\n  delete opts['!row'];\n  if (!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n  if (opts.sheetRows && s[\"!ref\"]) {\n    var tmpref = safe_decode_range(s[\"!ref\"]);\n    if (opts.sheetRows <= +tmpref.e.r) {\n      tmpref.e.r = opts.sheetRows - 1;\n      if (tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n      if (tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n      if (tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n      if (tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n      s[\"!fullref\"] = s[\"!ref\"];\n      s[\"!ref\"] = encode_range(tmpref);\n    }\n  }\n  if (merges.length > 0) s[\"!merges\"] = merges;\n  if (colinfo.length > 0) s[\"!cols\"] = colinfo;\n  if (rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n  return s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, ws /*:Worksheet*/, last_seen /*:boolean*/) /*:boolean*/{\n  if (cell.v === undefined) return false;\n  var vv = \"\";\n  switch (cell.t) {\n    case 'b':\n      vv = cell.v ? \"1\" : \"0\";\n      break;\n    case 'd':\n      // no BrtCellDate :(\n      cell = dup(cell);\n      cell.z = cell.z || table_fmt[14];\n      cell.v = datenum(parseDate(cell.v));\n      cell.t = 'n';\n      break;\n    /* falls through */\n    case 'n':\n    case 'e':\n      vv = '' + cell.v;\n      break;\n    default:\n      vv = cell.v;\n      break;\n  }\n  var o /*:any*/ = {\n    r: R,\n    c: C\n  } /*:any*/;\n  /* TODO: cell style */\n  o.s = get_cell_style(opts.cellXfs, cell, opts);\n  if (cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n  if (cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n  switch (cell.t) {\n    case 's':\n    case 'str':\n      if (opts.bookSST) {\n        vv = get_sst_id(opts.Strings, cell.v /*:any*/, opts.revStrings);\n        o.t = \"s\";\n        o.v = vv;\n        if (last_seen) write_record(ba, 0x0012 /* BrtShortIsst */, write_BrtShortIsst(cell, o));else write_record(ba, 0x0007 /* BrtCellIsst */, write_BrtCellIsst(cell, o));\n      } else {\n        o.t = \"str\";\n        if (last_seen) write_record(ba, 0x0011 /* BrtShortSt */, write_BrtShortSt(cell, o));else write_record(ba, 0x0006 /* BrtCellSt */, write_BrtCellSt(cell, o));\n      }\n      return true;\n    case 'n':\n      /* TODO: determine threshold for Real vs RK */\n      if (cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n        if (last_seen) write_record(ba, 0x000D /* BrtShortRk */, write_BrtShortRk(cell, o));else write_record(ba, 0x0002 /* BrtCellRk */, write_BrtCellRk(cell, o));\n      } else {\n        if (last_seen) write_record(ba, 0x0010 /* BrtShortReal */, write_BrtShortReal(cell, o));else write_record(ba, 0x0005 /* BrtCellReal */, write_BrtCellReal(cell, o));\n      }\n      return true;\n    case 'b':\n      o.t = \"b\";\n      if (last_seen) write_record(ba, 0x000F /* BrtShortBool */, write_BrtShortBool(cell, o));else write_record(ba, 0x0004 /* BrtCellBool */, write_BrtCellBool(cell, o));\n      return true;\n    case 'e':\n      o.t = \"e\";\n      if (last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError(cell, o));else write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError(cell, o));\n      return true;\n  }\n  if (last_seen) write_record(ba, 0x000C /* BrtShortBlank */, write_BrtShortBlank(cell, o));else write_record(ba, 0x0001 /* BrtCellBlank */, write_BrtCellBlank(cell, o));\n  return true;\n}\nfunction write_CELLTABLE(ba, ws /*:Worksheet*/, idx /*:number*/, opts /*::, wb:Workbook*/) {\n  var range = safe_decode_range(ws['!ref'] || \"A1\"),\n    ref,\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  write_record(ba, 0x0091 /* BrtBeginSheetData */);\n  var dense = Array.isArray(ws);\n  var cap = range.e.r;\n  if (ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n  for (var R = range.s.r; R <= cap; ++R) {\n    rr = encode_row(R);\n    /* [ACCELLTABLE] */\n    /* BrtRowHdr */\n    write_row_header(ba, ws, range, R);\n    var last_seen = false;\n    if (R <= range.e.r) for (var C = range.s.c; C <= range.e.c; ++C) {\n      /* *16384CELL */\n      if (R === range.s.r) cols[C] = encode_col(C);\n      ref = cols[C] + rr;\n      var cell = dense ? (ws[R] || [])[C] : ws[ref];\n      if (!cell) {\n        last_seen = false;\n        continue;\n      }\n      /* write cell */\n      last_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen);\n    }\n  }\n  write_record(ba, 0x0092 /* BrtEndSheetData */);\n}\nfunction write_MERGECELLS(ba, ws /*:Worksheet*/) {\n  if (!ws || !ws['!merges']) return;\n  write_record(ba, 0x00B1 /* BrtBeginMergeCells */, write_BrtBeginMergeCells(ws['!merges'].length));\n  ws['!merges'].forEach(function (m) {\n    write_record(ba, 0x00B0 /* BrtMergeCell */, write_BrtMergeCell(m));\n  });\n  write_record(ba, 0x00B2 /* BrtEndMergeCells */);\n}\nfunction write_COLINFOS(ba, ws /*:Worksheet*/ /*::, idx:number, opts, wb:Workbook*/) {\n  if (!ws || !ws['!cols']) return;\n  write_record(ba, 0x0186 /* BrtBeginColInfos */);\n  ws['!cols'].forEach(function (m, i) {\n    if (m) write_record(ba, 0x003C /* 'BrtColInfo' */, write_BrtColInfo(i, m));\n  });\n  write_record(ba, 0x0187 /* BrtEndColInfos */);\n}\nfunction write_IGNOREECS(ba, ws /*:Worksheet*/) {\n  if (!ws || !ws['!ref']) return;\n  write_record(ba, 0x0288 /* BrtBeginCellIgnoreECs */);\n  write_record(ba, 0x0289 /* BrtCellIgnoreEC */, write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n  write_record(ba, 0x028A /* BrtEndCellIgnoreECs */);\n}\nfunction write_HLINKS(ba, ws /*:Worksheet*/, rels) {\n  /* *BrtHLink */\n  ws['!links'].forEach(function (l) {\n    if (!l[1].Target) return;\n    var rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n    write_record(ba, 0x01EE /* BrtHLink */, write_BrtHLink(l, rId));\n  });\n  delete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws /*:Worksheet*/, idx /*:number*/, rels) {\n  /* [BrtLegacyDrawing] */\n  if (ws['!comments'].length > 0) {\n    var rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx + 1) + \".vml\", RELS.VML);\n    write_record(ba, 0x0227 /* BrtLegacyDrawing */, write_RelID(\"rId\" + rId));\n    ws['!legacy'] = rId;\n  }\n}\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n  if (!ws['!autofilter']) return;\n  var data = ws['!autofilter'];\n  var ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n  /* Update FilterDatabase defined name for the worksheet */\n  if (!wb.Workbook) wb.Workbook = {\n    Sheets: []\n  } /*:any*/;\n  if (!wb.Workbook.Names) wb.Workbook.Names = [];\n  var names /*: Array<any> */ = wb.Workbook.Names;\n  var range = decode_range(ref);\n  if (range.s.r == range.e.r) {\n    range.e.r = decode_range(ws[\"!ref\"]).e.r;\n    ref = encode_range(range);\n  }\n  for (var i = 0; i < names.length; ++i) {\n    var name = names[i];\n    if (name.Name != '_xlnm._FilterDatabase') continue;\n    if (name.Sheet != idx) continue;\n    name.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref;\n    break;\n  }\n  if (i == names.length) names.push({\n    Name: '_xlnm._FilterDatabase',\n    Sheet: idx,\n    Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref\n  });\n  write_record(ba, 0x00A1 /* BrtBeginAFilter */, write_UncheckedRfX(safe_decode_range(ref)));\n  /* *FILTERCOLUMN */\n  /* [SORTSTATE] */\n  /* BrtEndAFilter */\n  write_record(ba, 0x00A2 /* BrtEndAFilter */);\n}\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n  write_record(ba, 0x0085 /* BrtBeginWsViews */);\n  {\n    /* 1*WSVIEW2 */\n    /* [ACUID] */\n    write_record(ba, 0x0089 /* BrtBeginWsView */, write_BrtBeginWsView(ws, Workbook));\n    /* [BrtPane] */\n    /* *4BrtSel */\n    /* *4SXSELECT */\n    /* *FRT */\n    write_record(ba, 0x008A /* BrtEndWsView */);\n  }\n  /* *FRT */\n  write_record(ba, 0x0086 /* BrtEndWsViews */);\n}\nfunction write_WSFMTINFO( /*::ba, ws*/\n) {\n  /* [ACWSFMTINFO] */\n  // write_record(ba, 0x01E5 /* BrtWsFmtInfo */, write_BrtWsFmtInfo(ws));\n}\nfunction write_SHEETPROTECT(ba, ws) {\n  if (!ws['!protect']) return;\n  /* [BrtSheetProtectionIso] */\n  write_record(ba, 0x0217 /* BrtSheetProtection */, write_BrtSheetProtection(ws['!protect']));\n}\nfunction write_ws_bin(idx /*:number*/, opts, wb /*:Workbook*/, rels) {\n  var ba = buf_array();\n  var s = wb.SheetNames[idx],\n    ws = wb.Sheets[s] || {};\n  var c /*:string*/ = s;\n  try {\n    if (wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c;\n  } catch (e) {}\n  var r = safe_decode_range(ws['!ref'] || \"A1\");\n  if (r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n    r.e.c = Math.min(r.e.c, 0x3FFF);\n    r.e.r = Math.min(r.e.c, 0xFFFFF);\n  }\n  ws['!links'] = [];\n  /* passed back to write_zip and removed there */\n  ws['!comments'] = [];\n  write_record(ba, 0x0081 /* BrtBeginSheet */);\n  if (wb.vbaraw || ws['!outline']) write_record(ba, 0x0093 /* BrtWsProp */, write_BrtWsProp(c, ws['!outline']));\n  write_record(ba, 0x0094 /* BrtWsDim */, write_BrtWsDim(r));\n  write_WSVIEWS2(ba, ws, wb.Workbook);\n  write_WSFMTINFO(ba, ws);\n  write_COLINFOS(ba, ws, idx, opts, wb);\n  write_CELLTABLE(ba, ws, idx, opts, wb);\n  /* [BrtSheetCalcProp] */\n  write_SHEETPROTECT(ba, ws);\n  /* *([BrtRangeProtectionIso] BrtRangeProtection) */\n  /* [SCENMAN] */\n  write_AUTOFILTER(ba, ws, wb, idx);\n  /* [SORTSTATE] */\n  /* [DCON] */\n  /* [USERSHVIEWS] */\n  write_MERGECELLS(ba, ws);\n  /* [BrtPhoneticInfo] */\n  /* *CONDITIONALFORMATTING */\n  /* [DVALS] */\n  write_HLINKS(ba, ws, rels);\n  /* [BrtPrintOptions] */\n  if (ws['!margins']) write_record(ba, 0x01DC /* BrtMargins */, write_BrtMargins(ws['!margins']));\n  /* [BrtPageSetup] */\n  /* [HEADERFOOTER] */\n  /* [RWBRK] */\n  /* [COLBRK] */\n  /* *BrtBigName */\n  /* [CELLWATCHES] */\n  if (!opts || opts.ignoreEC || opts.ignoreEC == void 0) write_IGNOREECS(ba, ws);\n  /* [SMARTTAGS] */\n  /* [BrtDrawing] */\n  write_LEGACYDRAWING(ba, ws, idx, rels);\n  /* [BrtLegacyDrawingHF] */\n  /* [BrtBkHim] */\n  /* [OLEOBJECTS] */\n  /* [ACTIVEXCONTROLS] */\n  /* [WEBPUBITEMS] */\n  /* [LISTPARTS] */\n  /* FRTWORKSHEET */\n  write_record(ba, 0x0082 /* BrtEndSheet */);\n  return ba.end();\n}\nfunction parse_Cache(data /*:string*/) /*:[Array<number|string>, string, ?string]*/{\n  var col /*:Array<number|string>*/ = [];\n  var num = data.match(/^<c:numCache>/);\n  var f;\n\n  /* 21.2.2.150 pt CT_NumVal */\n  (data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg) || []).forEach(function (pt) {\n    var q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n    if (!q) return;\n    col[+q[1]] = num ? +q[2] : q[2];\n  });\n\n  /* 21.2.2.71 formatCode CT_Xstring */\n  var nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\", \"General\"])[1]);\n  (data.match(/<c:f>(.*?)<\\/c:f>/mg) || []).forEach(function (F) {\n    f = F.replace(/<.*?>/g, \"\");\n  });\n  return [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data /*:?string*/, name /*:string*/, opts, rels, wb, csheet) {\n  var cs /*:Worksheet*/ = csheet || {\n    \"!type\": \"chart\"\n  } /*:any*/;\n  if (!data) return csheet;\n  /* 21.2.2.27 chart CT_Chart */\n\n  var C = 0,\n    R = 0,\n    col = \"A\";\n  var refguess = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n\n  /* 21.2.2.120 numCache CT_NumData */\n  (data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm) || []).forEach(function (nc) {\n    var cache = parse_Cache(nc);\n    refguess.s.r = refguess.s.c = 0;\n    refguess.e.c = C;\n    col = encode_col(C);\n    cache[0].forEach(function (n, i) {\n      cs[col + encode_row(i)] = {\n        t: 'n',\n        v: n,\n        z: cache[1]\n      };\n      R = i;\n    });\n    if (refguess.e.r < R) refguess.e.r = R;\n    ++C;\n  });\n  if (C > 0) cs[\"!ref\"] = encode_range(refguess);\n  return cs;\n}\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data /*:?string*/, opts, idx /*:number*/, rels, wb /*::, themes, styles*/) /*:Worksheet*/{\n  if (!data) return data;\n  /* 18.3.1.12 chartsheet CT_ChartSheet */\n  if (!rels) rels = {\n    '!id': {}\n  };\n  var s = {\n    '!type': \"chart\",\n    '!drawel': null,\n    '!rel': \"\"\n  } /*:any*/;\n  var m;\n\n  /* 18.3.1.83 sheetPr CT_ChartsheetPr */\n  var sheetPr = data.match(sheetprregex);\n  if (sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n  /* 18.3.1.36 drawing CT_Drawing */\n  if (m = data.match(/drawing r:id=\"(.*?)\"/)) s['!rel'] = m[1];\n  if (rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n  return s;\n}\nfunction write_cs_xml(idx /*:number*/, opts, wb /*:Workbook*/, rels) /*:string*/{\n  var o = [XML_HEADER, writextag('chartsheet', null, {\n    'xmlns': XMLNS_main[0],\n    'xmlns:r': XMLNS.r\n  })];\n  o[o.length] = writextag(\"drawing\", null, {\n    \"r:id\": \"rId1\"\n  });\n  add_rels(rels, -1, \"../drawings/drawing\" + (idx + 1) + \".xml\", RELS.DRAW);\n  if (o.length > 2) {\n    o[o.length] = '</chartsheet>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length /*:number*/) {\n  data.l += 10;\n  var name = parse_XLWideString(data, length - 10);\n  return {\n    name: name\n  };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx /*:number*/, rels, wb /*::, themes, styles*/) /*:Worksheet*/{\n  if (!data) return data;\n  if (!rels) rels = {\n    '!id': {}\n  };\n  var s = {\n    '!type': \"chart\",\n    '!drawel': null,\n    '!rel': \"\"\n  };\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  recordhopper(data, function cs_parse(val, R, RT) {\n    switch (RT) {\n      case 0x0226:\n        /* 'BrtDrawing' */\n        s['!rel'] = val;\n        break;\n      case 0x028B:\n        /* 'BrtCsProp' */\n        if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n        if (val.name) wb.Sheets[idx].CodeName = val.name;\n        break;\n      case 0x0232: /* 'BrtBkHim' */\n      case 0x028C: /* 'BrtCsPageSetup' */\n      case 0x029D: /* 'BrtCsProtection' */\n      case 0x02A7: /* 'BrtCsProtectionIso' */\n      case 0x0227: /* 'BrtLegacyDrawing' */\n      case 0x0228: /* 'BrtLegacyDrawingHF' */\n      case 0x01DC: /* 'BrtMargins' */\n      case 0x0C00:\n        /* 'BrtUid' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        state.push(RT);\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        state.pop();\n        break;\n      default:\n        if (R.T > 0) state.push(RT);else if (R.T < 0) state.pop();else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  if (rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n  return s;\n}\nfunction write_cs_bin( /*::idx:number, opts, wb:Workbook, rels*/\n) {\n  var ba = buf_array();\n  write_record(ba, 0x0081 /* BrtBeginSheet */);\n  /* [BrtCsProp] */\n  /* CSVIEWS */\n  /* [[BrtCsProtectionIso] BrtCsProtection] */\n  /* [USERCSVIEWS] */\n  /* [BrtMargins] */\n  /* [BrtCsPageSetup] */\n  /* [HEADERFOOTER] */\n  /* BrtDrawing */\n  /* [BrtLegacyDrawing] */\n  /* [BrtLegacyDrawingHF] */\n  /* [BrtBkHim] */\n  /* [WEBPUBITEMS] */\n  /* FRTCHARTSHEET */\n  write_record(ba, 0x0082 /* BrtEndSheet */);\n  return ba.end();\n}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [['allowRefreshQuery', false, \"bool\"], ['autoCompressPictures', true, \"bool\"], ['backupFile', false, \"bool\"], ['checkCompatibility', false, \"bool\"], ['CodeName', ''], ['date1904', false, \"bool\"], ['defaultThemeVersion', 0, \"int\"], ['filterPrivacy', false, \"bool\"], ['hidePivotFieldList', false, \"bool\"], ['promptedSolutions', false, \"bool\"], ['publishItems', false, \"bool\"], ['refreshAllConnections', false, \"bool\"], ['saveExternalLinkValues', true, \"bool\"], ['showBorderUnselectedTables', true, \"bool\"], ['showInkAnnotation', true, \"bool\"], ['showObjects', 'all'], ['showPivotChartFilter', false, \"bool\"], ['updateLinks', 'userSet']];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [['activeTab', 0, \"int\"], ['autoFilterDateGrouping', true, \"bool\"], ['firstSheet', 0, \"int\"], ['minimized', false, \"bool\"], ['showHorizontalScroll', true, \"bool\"], ['showSheetTabs', true, \"bool\"], ['showVerticalScroll', true, \"bool\"], ['tabRatio', 600, \"int\"], ['visibility', 'visible']\n//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n  //['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [['calcCompleted', 'true'], ['calcMode', 'auto'], ['calcOnSave', 'true'], ['concurrentCalc', 'true'], ['fullCalcOnLoad', 'false'], ['fullPrecision', 'true'], ['iterate', 'false'], ['iterateCount', '100'], ['iterateDelta', '0.001'], ['refMode', 'A1']];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n  for (var j = 0; j != target.length; ++j) {\n    var w = target[j];\n    for (var i = 0; i != defaults.length; ++i) {\n      var z = defaults[i];\n      if (w[z[0]] == null) w[z[0]] = z[1];else switch (z[2]) {\n        case \"bool\":\n          if (typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]);\n          break;\n        case \"int\":\n          if (typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10);\n          break;\n      }\n    }\n  }\n}\nfunction push_defaults(target, defaults) {\n  for (var i = 0; i != defaults.length; ++i) {\n    var z = defaults[i];\n    if (target[z[0]] == null) target[z[0]] = z[1];else switch (z[2]) {\n      case \"bool\":\n        if (typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]);\n        break;\n      case \"int\":\n        if (typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10);\n        break;\n    }\n  }\n}\nfunction parse_wb_defaults(wb) {\n  push_defaults(wb.WBProps, WBPropsDef);\n  push_defaults(wb.CalcPr, CalcPrDef);\n  push_defaults_array(wb.WBView, WBViewDef);\n  push_defaults_array(wb.Sheets, SheetDef);\n  _ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\nfunction safe1904(wb /*:Workbook*/) /*:string*/{\n  /* TODO: store date1904 somewhere else */\n  if (!wb.Workbook) return \"false\";\n  if (!wb.Workbook.WBProps) return \"false\";\n  return parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\nvar badchars = /*#__PURE__*/\"][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n /*:string*/, safe /*:?boolean*/) /*:boolean*/{\n  if (n.length > 31) {\n    if (safe) return false;\n    throw new Error(\"Sheet names cannot exceed 31 chars\");\n  }\n  var _good = true;\n  badchars.forEach(function (c) {\n    if (n.indexOf(c) == -1) return;\n    if (!safe) throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n    _good = false;\n  });\n  return _good;\n}\nfunction check_wb_names(N, S, codes) {\n  N.forEach(function (n, i) {\n    check_ws_name(n);\n    for (var j = 0; j < i; ++j) if (n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n    if (codes) {\n      var cn = S && S[i] && S[i].CodeName || n;\n      if (cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n    }\n  });\n}\nfunction check_wb(wb) {\n  if (!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n  if (!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n  var Sheets = wb.Workbook && wb.Workbook.Sheets || [];\n  check_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n  for (var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n  /* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts) /*:WorkbookFile*/{\n  if (!data) throw new Error(\"Could not find file\");\n  var wb = /*::(*/{\n    AppVersion: {},\n    WBProps: {},\n    WBView: [],\n    Sheets: [],\n    CalcPr: {},\n    Names: [],\n    xmlns: \"\"\n  } /*::)*/;\n  var pass = false,\n    xmlns = \"xmlns\";\n  var dname = {},\n    dnstart = 0;\n  data.replace(tagregex, function xml_wb(x, idx) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 18.2.27 workbook CT_Workbook 1 */\n      case '<workbook':\n        if (x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n        wb.xmlns = y[xmlns];\n        break;\n      case '</workbook>':\n        break;\n\n      /* 18.2.13 fileVersion CT_FileVersion ? */\n      case '<fileVersion':\n        delete y[0];\n        wb.AppVersion = y;\n        break;\n      case '<fileVersion/>':\n      case '</fileVersion>':\n        break;\n\n      /* 18.2.12 fileSharing CT_FileSharing ? */\n      case '<fileSharing':\n        break;\n      case '<fileSharing/>':\n        break;\n\n      /* 18.2.28 workbookPr CT_WorkbookPr ? */\n      case '<workbookPr':\n      case '<workbookPr/>':\n        WBPropsDef.forEach(function (w) {\n          if (y[w[0]] == null) return;\n          switch (w[2]) {\n            case \"bool\":\n              wb.WBProps[w[0]] = parsexmlbool(y[w[0]]);\n              break;\n            case \"int\":\n              wb.WBProps[w[0]] = parseInt(y[w[0]], 10);\n              break;\n            default:\n              wb.WBProps[w[0]] = y[w[0]];\n          }\n        });\n        if (y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n        break;\n      case '</workbookPr>':\n        break;\n\n      /* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n      case '<workbookProtection':\n        break;\n      case '<workbookProtection/>':\n        break;\n\n      /* 18.2.1  bookViews CT_BookViews ? */\n      case '<bookViews':\n      case '<bookViews>':\n      case '</bookViews>':\n        break;\n      /* 18.2.30   workbookView CT_BookView + */\n      case '<workbookView':\n      case '<workbookView/>':\n        delete y[0];\n        wb.WBView.push(y);\n        break;\n      case '</workbookView>':\n        break;\n\n      /* 18.2.20 sheets CT_Sheets 1 */\n      case '<sheets':\n      case '<sheets>':\n      case '</sheets>':\n        break;\n      // aggregate sheet\n      /* 18.2.19   sheet CT_Sheet + */\n      case '<sheet':\n        switch (y.state) {\n          case \"hidden\":\n            y.Hidden = 1;\n            break;\n          case \"veryHidden\":\n            y.Hidden = 2;\n            break;\n          default:\n            y.Hidden = 0;\n        }\n        delete y.state;\n        y.name = unescapexml(utf8read(y.name));\n        delete y[0];\n        wb.Sheets.push(y);\n        break;\n      case '</sheet>':\n        break;\n\n      /* 18.2.15 functionGroups CT_FunctionGroups ? */\n      case '<functionGroups':\n      case '<functionGroups/>':\n        break;\n      /* 18.2.14   functionGroup CT_FunctionGroup + */\n      case '<functionGroup':\n        break;\n\n      /* 18.2.9  externalReferences CT_ExternalReferences ? */\n      case '<externalReferences':\n      case '</externalReferences>':\n      case '<externalReferences>':\n        break;\n      /* 18.2.8    externalReference CT_ExternalReference + */\n      case '<externalReference':\n        break;\n\n      /* 18.2.6  definedNames CT_DefinedNames ? */\n      case '<definedNames/>':\n        break;\n      case '<definedNames>':\n      case '<definedNames':\n        pass = true;\n        break;\n      case '</definedNames>':\n        pass = false;\n        break;\n      /* 18.2.5    definedName CT_DefinedName + */\n      case '<definedName':\n        {\n          dname = {};\n          dname.Name = utf8read(y.name);\n          if (y.comment) dname.Comment = y.comment;\n          if (y.localSheetId) dname.Sheet = +y.localSheetId;\n          if (parsexmlbool(y.hidden || \"0\")) dname.Hidden = true;\n          dnstart = idx + x.length;\n        }\n        break;\n      case '</definedName>':\n        {\n          dname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n          wb.Names.push(dname);\n        }\n        break;\n      case '<definedName/>':\n        break;\n\n      /* 18.2.2  calcPr CT_CalcPr ? */\n      case '<calcPr':\n        delete y[0];\n        wb.CalcPr = y;\n        break;\n      case '<calcPr/>':\n        delete y[0];\n        wb.CalcPr = y;\n        break;\n      case '</calcPr>':\n        break;\n\n      /* 18.2.16 oleSize CT_OleSize ? (ref required) */\n      case '<oleSize':\n        break;\n\n      /* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n      case '<customWorkbookViews>':\n      case '</customWorkbookViews>':\n      case '<customWorkbookViews':\n        break;\n      /* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n      case '<customWorkbookView':\n      case '</customWorkbookView>':\n        break;\n\n      /* 18.2.18 pivotCaches CT_PivotCaches ? */\n      case '<pivotCaches>':\n      case '</pivotCaches>':\n      case '<pivotCaches':\n        break;\n      /* 18.2.17 pivotCache CT_PivotCache ? */\n      case '<pivotCache':\n        break;\n\n      /* 18.2.21 smartTagPr CT_SmartTagPr ? */\n      case '<smartTagPr':\n      case '<smartTagPr/>':\n        break;\n\n      /* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n      case '<smartTagTypes':\n      case '<smartTagTypes>':\n      case '</smartTagTypes>':\n        break;\n      /* 18.2.22 smartTagType CT_SmartTagType ? */\n      case '<smartTagType':\n        break;\n\n      /* 18.2.24 webPublishing CT_WebPublishing ? */\n      case '<webPublishing':\n      case '<webPublishing/>':\n        break;\n\n      /* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n      case '<fileRecoveryPr':\n      case '<fileRecoveryPr/>':\n        break;\n\n      /* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n      case '<webPublishObjects>':\n      case '<webPublishObjects':\n      case '</webPublishObjects>':\n        break;\n      /* 18.2.25 webPublishObject CT_WebPublishObject ? */\n      case '<webPublishObject':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      //TODO: check with versions of excel\n      case '</ext>':\n        pass = false;\n        break;\n\n      /* Others */\n      case '<ArchID':\n        break;\n      case '<AlternateContent':\n      case '<AlternateContent>':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* TODO */\n      case '<revisionPtr':\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n    }\n    return x;\n  });\n  if (XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n  parse_wb_defaults(wb);\n  return wb;\n}\nfunction write_wb_xml(wb /*:Workbook*/ /*::, opts:?WriteOpts*/) /*:string*/{\n  var o = [XML_HEADER];\n  o[o.length] = writextag('workbook', null, {\n    'xmlns': XMLNS_main[0],\n    //'xmlns:mx': XMLNS.mx,\n    //'xmlns:s': XMLNS_main[0],\n    'xmlns:r': XMLNS.r\n  });\n  var write_names = wb.Workbook && (wb.Workbook.Names || []).length > 0;\n\n  /* fileVersion */\n  /* fileSharing */\n\n  var workbookPr /*:any*/ = {\n    codeName: \"ThisWorkbook\"\n  } /*:any*/;\n  if (wb.Workbook && wb.Workbook.WBProps) {\n    WBPropsDef.forEach(function (x) {\n      /*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n      if (wb.Workbook.WBProps[x[0]] /*:any*/ == null) return;\n      if (wb.Workbook.WBProps[x[0]] /*:any*/ == x[1]) return;\n      workbookPr[x[0]] = wb.Workbook.WBProps[x[0]] /*:any*/;\n    });\n    /*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n    if (wb.Workbook.WBProps.CodeName) {\n      workbookPr.codeName = wb.Workbook.WBProps.CodeName;\n      delete workbookPr.CodeName;\n    }\n  }\n  o[o.length] = writextag('workbookPr', null, workbookPr);\n\n  /* workbookProtection */\n\n  var sheets = wb.Workbook && wb.Workbook.Sheets || [];\n  var i = 0;\n\n  /* bookViews only written if first worksheet is hidden */\n  if (sheets && sheets[0] && !!sheets[0].Hidden) {\n    o[o.length] = \"<bookViews>\";\n    for (i = 0; i != wb.SheetNames.length; ++i) {\n      if (!sheets[i]) break;\n      if (!sheets[i].Hidden) break;\n    }\n    if (i == wb.SheetNames.length) i = 0;\n    o[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n    o[o.length] = \"</bookViews>\";\n  }\n  o[o.length] = \"<sheets>\";\n  for (i = 0; i != wb.SheetNames.length; ++i) {\n    var sht = {\n      name: escapexml(wb.SheetNames[i].slice(0, 31))\n    } /*:any*/;\n    sht.sheetId = \"\" + (i + 1);\n    sht[\"r:id\"] = \"rId\" + (i + 1);\n    if (sheets[i]) switch (sheets[i].Hidden) {\n      case 1:\n        sht.state = \"hidden\";\n        break;\n      case 2:\n        sht.state = \"veryHidden\";\n        break;\n    }\n    o[o.length] = writextag('sheet', null, sht);\n  }\n  o[o.length] = \"</sheets>\";\n\n  /* functionGroups */\n  /* externalReferences */\n\n  if (write_names) {\n    o[o.length] = \"<definedNames>\";\n    if (wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function (n) {\n      var d /*:any*/ = {\n        name: n.Name\n      };\n      if (n.Comment) d.comment = n.Comment;\n      if (n.Sheet != null) d.localSheetId = \"\" + n.Sheet;\n      if (n.Hidden) d.hidden = \"1\";\n      if (!n.Ref) return;\n      o[o.length] = writextag('definedName', escapexml(n.Ref), d);\n    });\n    o[o.length] = \"</definedNames>\";\n  }\n\n  /* calcPr */\n  /* oleSize */\n  /* customWorkbookViews */\n  /* pivotCaches */\n  /* smartTagPr */\n  /* smartTagTypes */\n  /* webPublishing */\n  /* fileRecoveryPr */\n  /* webPublishObjects */\n  /* extLst */\n\n  if (o.length > 2) {\n    o[o.length] = '</workbook>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length /*:number*/) {\n  var z = {};\n  z.Hidden = data.read_shift(4); //hsState ST_SheetState\n  z.iTabID = data.read_shift(4);\n  z.strRelID = parse_RelID(data, length - 8);\n  z.name = parse_XLWideString(data);\n  return z;\n}\nfunction write_BrtBundleSh(data, o) {\n  if (!o) o = new_buf(127);\n  o.write_shift(4, data.Hidden);\n  o.write_shift(4, data.iTabID);\n  write_RelID(data.strRelID, o);\n  write_XLWideString(data.name.slice(0, 31), o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length) /*:WBProps*/{\n  var o /*:WBProps*/ = {} /*:any*/;\n  var flags = data.read_shift(4);\n  o.defaultThemeVersion = data.read_shift(4);\n  var strName = length > 8 ? parse_XLWideString(data) : \"\";\n  if (strName.length > 0) o.CodeName = strName;\n  o.autoCompressPictures = !!(flags & 0x10000);\n  o.backupFile = !!(flags & 0x40);\n  o.checkCompatibility = !!(flags & 0x1000);\n  o.date1904 = !!(flags & 0x01);\n  o.filterPrivacy = !!(flags & 0x08);\n  o.hidePivotFieldList = !!(flags & 0x400);\n  o.promptedSolutions = !!(flags & 0x10);\n  o.publishItems = !!(flags & 0x800);\n  o.refreshAllConnections = !!(flags & 0x40000);\n  o.saveExternalLinkValues = !!(flags & 0x80);\n  o.showBorderUnselectedTables = !!(flags & 0x04);\n  o.showInkAnnotation = !!(flags & 0x20);\n  o.showObjects = [\"all\", \"placeholders\", \"none\"][flags >> 13 & 0x03];\n  o.showPivotChartFilter = !!(flags & 0x8000);\n  o.updateLinks = [\"userSet\", \"never\", \"always\"][flags >> 8 & 0x03];\n  return o;\n}\nfunction write_BrtWbProp(data /*:?WBProps*/, o) {\n  if (!o) o = new_buf(72);\n  var flags = 0;\n  if (data) {\n    /* TODO: mirror parse_BrtWbProp fields */\n    if (data.filterPrivacy) flags |= 0x08;\n  }\n  o.write_shift(4, flags);\n  o.write_shift(4, 0);\n  write_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtFRTArchID$(data, length) {\n  var o = {};\n  data.read_shift(4);\n  o.ArchID = data.read_shift(4);\n  data.l += length - 8;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n  var end = data.l + length;\n  data.l += 4; //var flags = data.read_shift(4);\n  data.l += 1; //var chKey = data.read_shift(1);\n  var itab = data.read_shift(4);\n  var name = parse_XLNameWideString(data);\n  var formula = parse_XLSBNameParsedFormula(data, 0, opts);\n  var comment = parse_XLNullableWideString(data);\n  //if(0 /* fProc */) {\n  // unusedstring1: XLNullableWideString\n  // description: XLNullableWideString\n  // helpTopic: XLNullableWideString\n  // unusedstring2: XLNullableWideString\n  //}\n  data.l = end;\n  var out = {\n    Name: name,\n    Ptg: formula\n  } /*:any*/;\n  if (itab < 0xFFFFFFF) out.Sheet = itab;\n  if (comment) out.Comment = comment;\n  return out;\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts) /*:WorkbookFile*/{\n  var wb = {\n    AppVersion: {},\n    WBProps: {},\n    WBView: [],\n    Sheets: [],\n    CalcPr: {},\n    xmlns: \"\"\n  };\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  if (!opts) opts = {};\n  opts.biff = 12;\n  var Names = [];\n  var supbooks = [[]] /*:any*/;\n  supbooks.SheetNames = [];\n  supbooks.XTI = [];\n  XLSBRecordEnum[0x0010] = {\n    n: \"BrtFRTArchID$\",\n    f: parse_BrtFRTArchID$\n  };\n  recordhopper(data, function hopper_wb(val, R, RT) {\n    switch (RT) {\n      case 0x009C:\n        /* 'BrtBundleSh' */\n        supbooks.SheetNames.push(val.name);\n        wb.Sheets.push(val);\n        break;\n      case 0x0099:\n        /* 'BrtWbProp' */\n        wb.WBProps = val;\n        break;\n      case 0x0027:\n        /* 'BrtName' */\n        if (val.Sheet != null) opts.SID = val.Sheet;\n        val.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n        delete opts.SID;\n        delete val.Ptg;\n        Names.push(val);\n        break;\n      case 0x040C:\n        /* 'BrtNameExt' */break;\n      case 0x0165: /* 'BrtSupSelf' */\n      case 0x0166: /* 'BrtSupSame' */\n      case 0x0163: /* 'BrtSupBookSrc' */\n      case 0x029B:\n        /* 'BrtSupAddin' */\n        if (!supbooks[0].length) supbooks[0] = [RT, val];else supbooks.push([RT, val]);\n        supbooks[supbooks.length - 1].XTI = [];\n        break;\n      case 0x016A:\n        /* 'BrtExternSheet' */\n        if (supbooks.length === 0) {\n          supbooks[0] = [];\n          supbooks[0].XTI = [];\n        }\n        supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n        supbooks.XTI = supbooks.XTI.concat(val);\n        break;\n      case 0x0169:\n        /* 'BrtPlaceholderName' */\n        break;\n      case 0x0817: /* 'BrtAbsPath15' */\n      case 0x009E: /* 'BrtBookView' */\n      case 0x008F: /* 'BrtBeginBundleShs' */\n      case 0x0298: /* 'BrtBeginFnGroup' */\n      case 0x0161:\n        /* 'BrtBeginExternals' */\n        break;\n\n      /* case 'BrtModelTimeGroupingCalcCol' */\n      case 0x0C00: /* 'BrtUid' */\n      case 0x0C01: /* 'BrtRevisionPtr' */\n      case 0x0216: /* 'BrtBookProtection' */\n      case 0x02A5: /* 'BrtBookProtectionIso' */\n      case 0x009D: /* 'BrtCalcProp' */\n      case 0x0262: /* 'BrtCrashRecErr' */\n      case 0x0802: /* 'BrtDecoupledPivotCacheID' */\n      case 0x009B: /* 'BrtFileRecover' */\n      case 0x0224: /* 'BrtFileSharing' */\n      case 0x02A4: /* 'BrtFileSharingIso' */\n      case 0x0080: /* 'BrtFileVersion' */\n      case 0x0299: /* 'BrtFnGroup' */\n      case 0x0850: /* 'BrtModelRelationship' */\n      case 0x084D: /* 'BrtModelTable' */\n      case 0x0225: /* 'BrtOleSize' */\n      case 0x0805: /* 'BrtPivotTableRef' */\n      case 0x0254: /* 'BrtSmartTagType' */\n      case 0x081C: /* 'BrtTableSlicerCacheID' */\n      case 0x081B: /* 'BrtTableSlicerCacheIDs' */\n      case 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n      case 0x018D: /* 'BrtUserBookView' */\n      case 0x009A: /* 'BrtWbFactoid' */\n      case 0x045D: /* 'BrtWbProp14' */\n      case 0x0229: /* 'BrtWebOpt' */\n      case 0x082B:\n        /* 'BrtWorkBookPr15' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        state.pop();\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        state.pop();\n        pass = false;\n        break;\n      case 0x0010:\n        /* 'BrtFRTArchID$' */break;\n      default:\n        if (R.T) {/* empty */} else if (!pass || opts.WTF && state[state.length - 1] != 0x0025 /* BrtACBegin */ && state[state.length - 1] != 0x0023 /* BrtFRTBegin */) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  parse_wb_defaults(wb);\n\n  // $FlowIgnore\n  wb.Names = Names;\n  wb /*:any*/.supbooks = supbooks;\n  return wb;\n}\nfunction write_BUNDLESHS(ba, wb /*::, opts*/) {\n  write_record(ba, 0x008F /* BrtBeginBundleShs */);\n  for (var idx = 0; idx != wb.SheetNames.length; ++idx) {\n    var viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n    var d = {\n      Hidden: viz,\n      iTabID: idx + 1,\n      strRelID: 'rId' + (idx + 1),\n      name: wb.SheetNames[idx]\n    };\n    write_record(ba, 0x009C /* BrtBundleSh */, write_BrtBundleSh(d));\n  }\n  write_record(ba, 0x0090 /* BrtEndBundleShs */);\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n  if (!o) o = new_buf(127);\n  for (var i = 0; i != 4; ++i) o.write_shift(4, 0);\n  write_XLWideString(\"SheetJS\", o);\n  write_XLWideString(XLSX.version, o);\n  write_XLWideString(XLSX.version, o);\n  write_XLWideString(\"7262\", o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n  if (!o) o = new_buf(29);\n  o.write_shift(-4, 0);\n  o.write_shift(-4, 460);\n  o.write_shift(4, 28800);\n  o.write_shift(4, 17600);\n  o.write_shift(4, 500);\n  o.write_shift(4, idx);\n  o.write_shift(4, idx);\n  var flags = 0x78;\n  o.write_shift(1, flags);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_BOOKVIEWS(ba, wb /*::, opts*/) {\n  /* required if hidden tab appears before visible tab */\n  if (!wb.Workbook || !wb.Workbook.Sheets) return;\n  var sheets = wb.Workbook.Sheets;\n  var i = 0,\n    vistab = -1,\n    hidden = -1;\n  for (; i < sheets.length; ++i) {\n    if (!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;else if (sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n  }\n  if (hidden > vistab) return;\n  write_record(ba, 0x0087 /* BrtBeginBookViews */);\n  write_record(ba, 0x009E /* BrtBookView */, write_BrtBookView(vistab));\n  /* 1*(BrtBookView *FRT) */\n  write_record(ba, 0x0088 /* BrtEndBookViews */);\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n  var ba = buf_array();\n  write_record(ba, 0x0083 /* BrtBeginBook */);\n  write_record(ba, 0x0080 /* BrtFileVersion */, write_BrtFileVersion());\n  /* [[BrtFileSharingIso] BrtFileSharing] */\n  write_record(ba, 0x0099 /* BrtWbProp */, write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n  /* [ACABSPATH] */\n  /* [[BrtBookProtectionIso] BrtBookProtection] */\n  write_BOOKVIEWS(ba, wb, opts);\n  write_BUNDLESHS(ba, wb, opts);\n  /* [FNGROUP] */\n  /* [EXTERNALS] */\n  /* *BrtName */\n  /* write_record(ba, 0x009D BrtCalcProp, write_BrtCalcProp()); */\n  /* [BrtOleSize] */\n  /* *(BrtUserBookView *FRT) */\n  /* [PIVOTCACHEIDS] */\n  /* [BrtWbFactoid] */\n  /* [SMARTTAGTYPES] */\n  /* [BrtWebOpt] */\n  /* write_record(ba, 0x009B BrtFileRecover, write_BrtFileRecover()); */\n  /* [WEBPUBITEMS] */\n  /* [CRERRS] */\n  /* FRTWORKBOOK */\n  write_record(ba, 0x0084 /* BrtEndBook */);\n  return ba.end();\n}\nfunction parse_wb(data, name /*:string*/, opts) /*:WorkbookFile*/{\n  if (name.slice(-4) === \".bin\") return parse_wb_bin(data /*:any*/, opts);\n  return parse_wb_xml(data /*:any*/, opts);\n}\nfunction parse_ws(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ws_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_ws_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_cs(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_cs_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_cs_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_ms(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ms_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_ms_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_ds(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ds_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_ds_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_sty(data, name /*:string*/, themes, opts) {\n  if (name.slice(-4) === \".bin\") return parse_sty_bin(data /*:any*/, themes, opts);\n  return parse_sty_xml(data /*:any*/, themes, opts);\n}\nfunction parse_theme(data /*:string*/, name /*:string*/, opts) {\n  return parse_theme_xml(data, opts);\n}\nfunction parse_sst(data, name /*:string*/, opts) /*:SST*/{\n  if (name.slice(-4) === \".bin\") return parse_sst_bin(data /*:any*/, opts);\n  return parse_sst_xml(data /*:any*/, opts);\n}\nfunction parse_cmnt(data, name /*:string*/, opts) /*:Array<RawComment>*/{\n  if (name.slice(-4) === \".bin\") return parse_comments_bin(data /*:any*/, opts);\n  return parse_comments_xml(data /*:any*/, opts);\n}\nfunction parse_cc(data, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_cc_bin(data /*:any*/, name, opts);\n  return parse_cc_xml(data /*:any*/, name, opts);\n}\nfunction parse_xlink(data, rel, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_xlink_bin(data /*:any*/, rel, name, opts);\n  return parse_xlink_xml(data /*:any*/, rel, name, opts);\n}\nfunction parse_xlmeta(data, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_xlmeta_bin(data /*:any*/, name, opts);\n  return parse_xlmeta_xml(data /*:any*/, name, opts);\n}\nfunction write_wb(wb, name /*:string*/, opts) {\n  return (name.slice(-4) === \".bin\" ? write_wb_bin : write_wb_xml)(wb, opts);\n}\nfunction write_ws(data /*:number*/, name /*:string*/, opts, wb /*:Workbook*/, rels) {\n  return (name.slice(-4) === \".bin\" ? write_ws_bin : write_ws_xml)(data, opts, wb, rels);\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction write_cs(data /*:number*/, name /*:string*/, opts, wb /*:Workbook*/, rels) {\n  return (name.slice(-4) === \".bin\" ? write_cs_bin : write_cs_xml)(data, opts, wb, rels);\n}\nfunction write_sty(data, name /*:string*/, opts) {\n  return (name.slice(-4) === \".bin\" ? write_sty_bin : write_sty_xml)(data, opts);\n}\nfunction write_sst(data /*:SST*/, name /*:string*/, opts) {\n  return (name.slice(-4) === \".bin\" ? write_sst_bin : write_sst_xml)(data, opts);\n}\nfunction write_cmnt(data /*:Array<any>*/, name /*:string*/, opts) {\n  return (name.slice(-4) === \".bin\" ? write_comments_bin : write_comments_xml)(data, opts);\n}\n/*\nfunction write_cc(data, name:string, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_cc_bin : write_cc_xml)(data, opts);\n}\n*/\n\nfunction write_xlmeta(name /*:string*/) {\n  return (name.slice(-4) === \".bin\" ? write_xlmeta_bin : write_xlmeta_xml)();\n}\nvar attregexg2 = /([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2 = /([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag /*:string*/, skip_root /*:?boolean*/) {\n  var words = tag.split(/\\s+/);\n  var z /*:any*/ = [] /*:any*/;\n  if (!skip_root) z[0] = words[0];\n  if (words.length === 1) return z;\n  var m = tag.match(attregexg2),\n    y,\n    j,\n    w,\n    i;\n  if (m) for (i = 0; i != m.length; ++i) {\n    y = m[i].match(attregex2);\n    /*:: if(!y || !y[2]) continue; */\n    if ((j = y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1, y[2].length - 1);else {\n      if (y[1].slice(0, 6) === \"xmlns:\") w = \"xmlns\" + y[1].slice(6);else w = y[1].slice(j + 1);\n      z[w] = y[2].slice(1, y[2].length - 1);\n    }\n  }\n  return z;\n}\nfunction xlml_parsexmltagobj(tag /*:string*/) {\n  var words = tag.split(/\\s+/);\n  var z = {};\n  if (words.length === 1) return z;\n  var m = tag.match(attregexg2),\n    y,\n    j,\n    w,\n    i;\n  if (m) for (i = 0; i != m.length; ++i) {\n    y = m[i].match(attregex2);\n    /*:: if(!y || !y[2]) continue; */\n    if ((j = y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1, y[2].length - 1);else {\n      if (y[1].slice(0, 6) === \"xmlns:\") w = \"xmlns\" + y[1].slice(6);else w = y[1].slice(j + 1);\n      z[w] = y[2].slice(1, y[2].length - 1);\n    }\n  }\n  return z;\n}\n\n// ----\n\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap /*: {[string]:string}*/;\nfunction xlml_format(format, value) /*:string*/{\n  var fmt = XLMLFormatMap[format] || unescapexml(format);\n  if (fmt === \"General\") return SSF_general(value);\n  return SSF_format(fmt, value);\n}\nfunction xlml_set_custprop(Custprops, key, cp, val /*:string*/) {\n  var oval /*:any*/ = val;\n  switch ((cp[0].match(/dt:dt=\"([\\w.]+)\"/) || [\"\", \"\"])[1]) {\n    case \"boolean\":\n      oval = parsexmlbool(val);\n      break;\n    case \"i2\":\n    case \"int\":\n      oval = parseInt(val, 10);\n      break;\n    case \"r4\":\n    case \"float\":\n      oval = parseFloat(val);\n      break;\n    case \"date\":\n    case \"dateTime.tz\":\n      oval = parseDate(val);\n      break;\n    case \"i8\":\n    case \"string\":\n    case \"fixed\":\n    case \"uuid\":\n    case \"bin.base64\":\n      break;\n    default:\n      throw new Error(\"bad custprop:\" + cp[0]);\n  }\n  Custprops[unescapexml(key)] = oval;\n}\nfunction safe_format_xlml(cell /*:Cell*/, nf, o) {\n  if (cell.t === 'z') return;\n  if (!o || o.cellText !== false) try {\n    if (cell.t === 'e') {\n      cell.w = cell.w || BErr[cell.v];\n    } else if (nf === \"General\") {\n      if (cell.t === 'n') {\n        if ((cell.v | 0) === cell.v) cell.w = cell.v.toString(10);else cell.w = SSF_general_num(cell.v);\n      } else cell.w = SSF_general(cell.v);\n    } else cell.w = xlml_format(nf || \"General\", cell.v);\n  } catch (e) {\n    if (o.WTF) throw e;\n  }\n  try {\n    var z = XLMLFormatMap[nf] || nf || \"General\";\n    if (o.cellNF) cell.z = z;\n    if (o.cellDates && cell.t == 'n' && fmt_is_date(z)) {\n      var _d = SSF_parse_date_code(cell.v);\n      if (_d) {\n        cell.t = 'd';\n        cell.v = new Date(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u);\n      }\n    }\n  } catch (e) {\n    if (o.WTF) throw e;\n  }\n}\nfunction process_style_xlml(styles, stag, opts) {\n  if (opts.cellStyles) {\n    if (stag.Interior) {\n      var I = stag.Interior;\n      if (I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n    }\n  }\n  styles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell /*:any*/, base, styles, csty, row, arrayf, o) {\n  var nf = \"General\",\n    sid = cell.StyleID,\n    S = {};\n  o = o || {};\n  var interiors = [];\n  var i = 0;\n  if (sid === undefined && row) sid = row.StyleID;\n  if (sid === undefined && csty) sid = csty.StyleID;\n  while (styles[sid] !== undefined) {\n    if (styles[sid].nf) nf = styles[sid].nf;\n    if (styles[sid].Interior) interiors.push(styles[sid].Interior);\n    if (!styles[sid].Parent) break;\n    sid = styles[sid].Parent;\n  }\n  switch (data.Type) {\n    case 'Boolean':\n      cell.t = 'b';\n      cell.v = parsexmlbool(xml);\n      break;\n    case 'String':\n      cell.t = 's';\n      cell.r = xlml_fixstr(unescapexml(xml));\n      cell.v = xml.indexOf(\"<\") > -1 ? unescapexml(ss || xml).replace(/<.*?>/g, \"\") : cell.r; // todo: BR etc\n      break;\n    case 'DateTime':\n      if (xml.slice(-1) != \"Z\") xml += \"Z\";\n      cell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n      if (cell.v !== cell.v) cell.v = unescapexml(xml);else if (cell.v < 60) cell.v = cell.v - 1;\n      if (!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n    /* falls through */\n    case 'Number':\n      if (cell.v === undefined) cell.v = +xml;\n      if (!cell.t) cell.t = 'n';\n      break;\n    case 'Error':\n      cell.t = 'e';\n      cell.v = RBErr[xml];\n      if (o.cellText !== false) cell.w = xml;\n      break;\n    default:\n      if (xml == \"\" && ss == \"\") {\n        cell.t = 'z';\n      } else {\n        cell.t = 's';\n        cell.v = xlml_fixstr(ss || xml);\n      }\n      break;\n  }\n  safe_format_xlml(cell, nf, o);\n  if (o.cellFormula !== false) {\n    if (cell.Formula) {\n      var fstr = unescapexml(cell.Formula);\n      /* strictly speaking, the leading = is required but some writers omit */\n      if (fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n      cell.f = rc_to_a1(fstr, base);\n      delete cell.Formula;\n      if (cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);else if (cell.ArrayRange) {\n        cell.F = rc_to_a1(cell.ArrayRange, base);\n        arrayf.push([safe_decode_range(cell.F), cell.F]);\n      }\n    } else {\n      for (i = 0; i < arrayf.length; ++i) if (base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r) if (base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c) cell.F = arrayf[i][1];\n    }\n  }\n  if (o.cellStyles) {\n    interiors.forEach(function (x) {\n      if (!S.patternType && x.patternType) S.patternType = x.patternType;\n    });\n    cell.s = S;\n  }\n  if (cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\nfunction xlml_clean_comment(comment /*:any*/) {\n  comment.t = comment.v || \"\";\n  comment.t = comment.t.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  comment.v = comment.w = comment.ixfe = undefined;\n}\n\n/* TODO: Everything */\nfunction parse_xlml_xml(d, _opts) /*:Workbook*/{\n  var opts = _opts || {};\n  make_ssf();\n  var str = debom(xlml_normalize(d));\n  if (opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n    if (typeof $cptable !== 'undefined') str = $cptable.utils.decode(65001, char_codes(str));else str = utf8read(str);\n  }\n  var opening = str.slice(0, 1024).toLowerCase(),\n    ishtml = false;\n  opening = opening.replace(/\".*?\"/g, \"\");\n  if ((opening.indexOf(\">\") & 1023) > Math.min(opening.indexOf(\",\") & 1023, opening.indexOf(\";\") & 1023)) {\n    var _o = dup(opts);\n    _o.type = \"string\";\n    return PRN.to_workbook(str, _o);\n  }\n  if (opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function (tag) {\n    if (opening.indexOf(\"<\" + tag) >= 0) ishtml = true;\n  });\n  if (ishtml) return html_to_workbook(str, opts);\n  XLMLFormatMap = {\n    \"General Number\": \"General\",\n    \"General Date\": table_fmt[22],\n    \"Long Date\": \"dddd, mmmm dd, yyyy\",\n    \"Medium Date\": table_fmt[15],\n    \"Short Date\": table_fmt[14],\n    \"Long Time\": table_fmt[19],\n    \"Medium Time\": table_fmt[18],\n    \"Short Time\": table_fmt[20],\n    \"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n    \"Fixed\": table_fmt[2],\n    \"Standard\": table_fmt[4],\n    \"Percent\": table_fmt[10],\n    \"Scientific\": table_fmt[11],\n    \"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n    \"True/False\": '\"True\";\"True\";\"False\";@',\n    \"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n  } /*:any*/;\n  var Rn;\n  var state = [],\n    tmp;\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n  var sheets = {},\n    sheetnames /*:Array<string>*/ = [],\n    cursheet /*:Worksheet*/ = opts.dense ? [] : {},\n    sheetname = \"\";\n  var cell = {} /*:any*/,\n    row = {}; // eslint-disable-line no-unused-vars\n  var dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'),\n    didx = 0;\n  var c = 0,\n    r = 0;\n  var refguess /*:Range*/ = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var styles = {},\n    stag = {};\n  var ss = \"\",\n    fidx = 0;\n  var merges /*:Array<Range>*/ = [];\n  var Props = {},\n    Custprops = {},\n    pidx = 0,\n    cp = [];\n  var comments /*:Array<Comment>*/ = [],\n    comment /*:Comment*/ = {} /*:any*/;\n  var cstys = [],\n    csty,\n    seencol = false;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var rowinfo /*:Array<RowInfo>*/ = [],\n    rowobj = {},\n    cc = 0,\n    rr = 0;\n  var Workbook /*:WBWBProps*/ = {\n      Sheets: [],\n      WBProps: {\n        date1904: false\n      }\n    } /*:any*/,\n    wsprops = {};\n  xlmlregex.lastIndex = 0;\n  str = str.replace(/<!--([\\s\\S]*?)-->/mg, \"\");\n  var raw_Rn3 = \"\";\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase()) {\n    case 'data' /*case 'Data'*/:\n      if (raw_Rn3 == \"data\") {\n        if (Rn[1] === '/') {\n          if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n        break;\n      }\n      if (state[state.length - 1][1]) break;\n      if (Rn[1] === '/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length - 1][0] == /*\"Comment\"*/\"comment\" ? comment : cell, {\n        c: c,\n        r: r\n      }, styles, cstys[c], row, arrayf, opts);else {\n        ss = \"\";\n        dtag = xlml_parsexmltag(Rn[0]);\n        didx = Rn.index + Rn[0].length;\n      }\n      break;\n    case 'cell' /*case 'Cell'*/:\n      if (Rn[1] === '/') {\n        if (comments.length > 0) cell.c = comments;\n        if ((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {\n          if (opts.dense) {\n            if (!cursheet[r]) cursheet[r] = [];\n            cursheet[r][c] = cell;\n          } else cursheet[encode_col(c) + encode_row(r)] = cell;\n        }\n        if (cell.HRef) {\n          cell.l = {\n            Target: unescapexml(cell.HRef)\n          } /*:any*/;\n          if (cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n          delete cell.HRef;\n          delete cell.HRefScreenTip;\n        }\n        if (cell.MergeAcross || cell.MergeDown) {\n          cc = c + (parseInt(cell.MergeAcross, 10) | 0);\n          rr = r + (parseInt(cell.MergeDown, 10) | 0);\n          merges.push({\n            s: {\n              c: c,\n              r: r\n            },\n            e: {\n              c: cc,\n              r: rr\n            }\n          });\n        }\n        if (!opts.sheetStubs) {\n          if (cell.MergeAcross) c = cc + 1;else ++c;\n        } else if (cell.MergeAcross || cell.MergeDown) {\n          /*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n          for (var cma = c; cma <= cc; ++cma) {\n            for (var cmd = r; cmd <= rr; ++cmd) {\n              if (cma > c || cmd > r) {\n                if (opts.dense) {\n                  if (!cursheet[cmd]) cursheet[cmd] = [];\n                  cursheet[cmd][cma] = {\n                    t: 'z'\n                  };\n                } else cursheet[encode_col(cma) + encode_row(cmd)] = {\n                  t: 'z'\n                };\n              }\n            }\n          }\n          c = cc + 1;\n        } else ++c;\n      } else {\n        cell = xlml_parsexmltagobj(Rn[0]);\n        if (cell.Index) c = +cell.Index - 1;\n        if (c < refguess.s.c) refguess.s.c = c;\n        if (c > refguess.e.c) refguess.e.c = c;\n        if (Rn[0].slice(-2) === \"/>\") ++c;\n        comments = [];\n      }\n      break;\n    case 'row' /*case 'Row'*/:\n      if (Rn[1] === '/' || Rn[0].slice(-2) === \"/>\") {\n        if (r < refguess.s.r) refguess.s.r = r;\n        if (r > refguess.e.r) refguess.e.r = r;\n        if (Rn[0].slice(-2) === \"/>\") {\n          row = xlml_parsexmltag(Rn[0]);\n          if (row.Index) r = +row.Index - 1;\n        }\n        c = 0;\n        ++r;\n      } else {\n        row = xlml_parsexmltag(Rn[0]);\n        if (row.Index) r = +row.Index - 1;\n        rowobj = {};\n        if (row.AutoFitHeight == \"0\" || row.Height) {\n          rowobj.hpx = parseInt(row.Height, 10);\n          rowobj.hpt = px2pt(rowobj.hpx);\n          rowinfo[r] = rowobj;\n        }\n        if (row.Hidden == \"1\") {\n          rowobj.hidden = true;\n          rowinfo[r] = rowobj;\n        }\n      }\n      break;\n    case 'worksheet' /*case 'Worksheet'*/:\n      /* TODO: read range from FullRows/FullColumns */\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        sheetnames.push(sheetname);\n        if (refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n          cursheet[\"!ref\"] = encode_range(refguess);\n          if (opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n            cursheet[\"!fullref\"] = cursheet[\"!ref\"];\n            refguess.e.r = opts.sheetRows - 1;\n            cursheet[\"!ref\"] = encode_range(refguess);\n          }\n        }\n        if (merges.length) cursheet[\"!merges\"] = merges;\n        if (cstys.length > 0) cursheet[\"!cols\"] = cstys;\n        if (rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n        sheets[sheetname] = cursheet;\n      } else {\n        refguess = {\n          s: {\n            r: 2000000,\n            c: 2000000\n          },\n          e: {\n            r: 0,\n            c: 0\n          }\n        };\n        r = c = 0;\n        state.push([Rn[3], false]);\n        tmp = xlml_parsexmltag(Rn[0]);\n        sheetname = unescapexml(tmp.Name);\n        cursheet = opts.dense ? [] : {};\n        merges = [];\n        arrayf = [];\n        rowinfo = [];\n        wsprops = {\n          name: sheetname,\n          Hidden: 0\n        };\n        Workbook.Sheets.push(wsprops);\n      }\n      break;\n    case 'table' /*case 'Table'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].slice(-2) == \"/>\") break;else {\n        state.push([Rn[3], false]);\n        cstys = [];\n        seencol = false;\n      }\n      break;\n    case 'style' /*case 'Style'*/:\n      if (Rn[1] === '/') process_style_xlml(styles, stag, opts);else stag = xlml_parsexmltag(Rn[0]);\n      break;\n    case 'numberformat' /*case 'NumberFormat'*/:\n      stag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n      if (XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n      for (var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if (table_fmt[ssfidx] == stag.nf) break;\n      if (ssfidx == 0x188) for (ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if (table_fmt[ssfidx] == null) {\n        SSF_load(stag.nf, ssfidx);\n        break;\n      }\n      break;\n    case 'column' /*case 'Column'*/:\n      if (state[state.length - 1][0] !== /*'Table'*/'table') break;\n      csty = xlml_parsexmltag(Rn[0]);\n      if (csty.Hidden) {\n        csty.hidden = true;\n        delete csty.Hidden;\n      }\n      if (csty.Width) csty.wpx = parseInt(csty.Width, 10);\n      if (!seencol && csty.wpx > 10) {\n        seencol = true;\n        MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n        for (var _col = 0; _col < cstys.length; ++_col) if (cstys[_col]) process_col(cstys[_col]);\n      }\n      if (seencol) process_col(csty);\n      cstys[csty.Index - 1 || cstys.length] = csty;\n      for (var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n      break;\n    case 'namedrange' /*case 'NamedRange'*/:\n      if (Rn[1] === '/') break;\n      if (!Workbook.Names) Workbook.Names = [];\n      var _NamedRange = parsexmltag(Rn[0]);\n      var _DefinedName /*:DefinedName*/ = {\n        Name: _NamedRange.Name,\n        Ref: rc_to_a1(_NamedRange.RefersTo.slice(1), {\n          r: 0,\n          c: 0\n        })\n      } /*:any*/;\n      if (Workbook.Sheets.length > 0) _DefinedName.Sheet = Workbook.Sheets.length - 1;\n      /*:: if(Workbook.Names) */\n      Workbook.Names.push(_DefinedName);\n      break;\n    case 'namedcell' /*case 'NamedCell'*/:\n      break;\n    case 'b' /*case 'B'*/:\n      break;\n    case 'i' /*case 'I'*/:\n      break;\n    case 'u' /*case 'U'*/:\n      break;\n    case 's' /*case 'S'*/:\n      break;\n    case 'em' /*case 'EM'*/:\n      break;\n    case 'h2' /*case 'H2'*/:\n      break;\n    case 'h3' /*case 'H3'*/:\n      break;\n    case 'sub' /*case 'Sub'*/:\n      break;\n    case 'sup' /*case 'Sup'*/:\n      break;\n    case 'span' /*case 'Span'*/:\n      break;\n    case 'alignment' /*case 'Alignment'*/:\n      break;\n    case 'borders' /*case 'Borders'*/:\n      break;\n    case 'border' /*case 'Border'*/:\n      break;\n    case 'font' /*case 'Font'*/:\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") ss += str.slice(fidx, Rn.index);else fidx = Rn.index + Rn[0].length;\n      break;\n    case 'interior' /*case 'Interior'*/:\n      if (!opts.cellStyles) break;\n      stag.Interior = xlml_parsexmltag(Rn[0]);\n      break;\n    case 'protection' /*case 'Protection'*/:\n      break;\n    case 'author' /*case 'Author'*/:\n    case 'title' /*case 'Title'*/:\n    case 'description' /*case 'Description'*/:\n    case 'created' /*case 'Created'*/:\n    case 'keywords' /*case 'Keywords'*/:\n    case 'subject' /*case 'Subject'*/:\n    case 'category' /*case 'Category'*/:\n    case 'company' /*case 'Company'*/:\n    case 'lastauthor' /*case 'LastAuthor'*/:\n    case 'lastsaved' /*case 'LastSaved'*/:\n    case 'lastprinted' /*case 'LastPrinted'*/:\n    case 'version' /*case 'Version'*/:\n    case 'revision' /*case 'Revision'*/:\n    case 'totaltime' /*case 'TotalTime'*/:\n    case 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n    case 'manager' /*case 'Manager'*/:\n    case 'contentstatus' /*case 'ContentStatus'*/:\n    case 'identifier' /*case 'Identifier'*/:\n    case 'language' /*case 'Language'*/:\n    case 'appname' /*case 'AppName'*/:\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));else pidx = Rn.index + Rn[0].length;\n      break;\n    case 'paragraphs' /*case 'Paragraphs'*/:\n      break;\n    case 'styles' /*case 'Styles'*/:\n    case 'workbook' /*case 'Workbook'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else state.push([Rn[3], false]);\n      break;\n    case 'comment' /*case 'Comment'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        xlml_clean_comment(comment);\n        comments.push(comment);\n      } else {\n        state.push([Rn[3], false]);\n        tmp = xlml_parsexmltag(Rn[0]);\n        comment = {\n          a: tmp.Author\n        } /*:any*/;\n      }\n      break;\n    case 'autofilter' /*case 'AutoFilter'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        var AutoFilter = xlml_parsexmltag(Rn[0]);\n        cursheet['!autofilter'] = {\n          ref: rc_to_a1(AutoFilter.Range).replace(/\\$/g, \"\")\n        };\n        state.push([Rn[3], true]);\n      }\n      break;\n    case 'name' /*case 'Name'*/:\n      break;\n    case 'datavalidation' /*case 'DataValidation'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else {\n        if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      }\n      break;\n    case 'pixelsperinch' /*case 'PixelsPerInch'*/:\n      break;\n    case 'componentoptions' /*case 'ComponentOptions'*/:\n    case 'documentproperties' /*case 'DocumentProperties'*/:\n    case 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n    case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n    case 'pivottable' /*case 'PivotTable'*/:\n    case 'pivotcache' /*case 'PivotCache'*/:\n    case 'names' /*case 'Names'*/:\n    case 'mapinfo' /*case 'MapInfo'*/:\n    case 'pagebreaks' /*case 'PageBreaks'*/:\n    case 'querytable' /*case 'QueryTable'*/:\n    case 'sorting' /*case 'Sorting'*/:\n    case 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n    case 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n    case 'smarttagtype' /*case 'SmartTagType'*/:\n    case 'smarttags' /*case 'SmartTags'*/:\n    case 'excelworkbook' /*case 'ExcelWorkbook'*/:\n    case 'workbookoptions' /*case 'WorkbookOptions'*/:\n    case 'worksheetoptions' /*case 'WorksheetOptions'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      break;\n    case 'null' /*case 'Null'*/:\n      break;\n    default:\n      /* FODS file root is <office:document> */\n      if (state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n      /* UOS file root is <uof:UOF> */\n      if (state.length == 0 && Rn[3] == \"uof\" /*\"UOF\"*/) return parse_fods(str, opts);\n      var seen = true;\n      switch (state[state.length - 1][0]) {\n        /* OfficeDocumentSettings */\n        case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n          switch (Rn[3]) {\n            case 'allowpng' /*case 'AllowPNG'*/:\n              break;\n            case 'removepersonalinformation' /*case 'RemovePersonalInformation'*/:\n              break;\n            case 'downloadcomponents' /*case 'DownloadComponents'*/:\n              break;\n            case 'locationofcomponents' /*case 'LocationOfComponents'*/:\n              break;\n            case 'colors' /*case 'Colors'*/:\n              break;\n            case 'color' /*case 'Color'*/:\n              break;\n            case 'index' /*case 'Index'*/:\n              break;\n            case 'rgb' /*case 'RGB'*/:\n              break;\n            case 'targetscreensize' /*case 'TargetScreenSize'*/:\n              break;\n            case 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* ComponentOptions */\n        case 'componentoptions' /*case 'ComponentOptions'*/:\n          switch (Rn[3]) {\n            case 'toolbar' /*case 'Toolbar'*/:\n              break;\n            case 'hideofficelogo' /*case 'HideOfficeLogo'*/:\n              break;\n            case 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/:\n              break;\n            case 'label' /*case 'Label'*/:\n              break;\n            case 'caption' /*case 'Caption'*/:\n              break;\n            case 'maxheight' /*case 'MaxHeight'*/:\n              break;\n            case 'maxwidth' /*case 'MaxWidth'*/:\n              break;\n            case 'nextsheetnumber' /*case 'NextSheetNumber'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* ExcelWorkbook */\n        case 'excelworkbook' /*case 'ExcelWorkbook'*/:\n          switch (Rn[3]) {\n            case 'date1904' /*case 'Date1904'*/:\n              /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n              Workbook.WBProps.date1904 = true;\n              break;\n            case 'windowheight' /*case 'WindowHeight'*/:\n              break;\n            case 'windowwidth' /*case 'WindowWidth'*/:\n              break;\n            case 'windowtopx' /*case 'WindowTopX'*/:\n              break;\n            case 'windowtopy' /*case 'WindowTopY'*/:\n              break;\n            case 'tabratio' /*case 'TabRatio'*/:\n              break;\n            case 'protectstructure' /*case 'ProtectStructure'*/:\n              break;\n            case 'protectwindow' /*case 'ProtectWindow'*/:\n              break;\n            case 'protectwindows' /*case 'ProtectWindows'*/:\n              break;\n            case 'activesheet' /*case 'ActiveSheet'*/:\n              break;\n            case 'displayinknotes' /*case 'DisplayInkNotes'*/:\n              break;\n            case 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/:\n              break;\n            case 'supbook' /*case 'SupBook'*/:\n              break;\n            case 'sheetname' /*case 'SheetName'*/:\n              break;\n            case 'sheetindex' /*case 'SheetIndex'*/:\n              break;\n            case 'sheetindexfirst' /*case 'SheetIndexFirst'*/:\n              break;\n            case 'sheetindexlast' /*case 'SheetIndexLast'*/:\n              break;\n            case 'dll' /*case 'Dll'*/:\n              break;\n            case 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/:\n              break;\n            case 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/:\n              break;\n            case 'iteration' /*case 'Iteration'*/:\n              break;\n            case 'maxiterations' /*case 'MaxIterations'*/:\n              break;\n            case 'maxchange' /*case 'MaxChange'*/:\n              break;\n            case 'path' /*case 'Path'*/:\n              break;\n            case 'xct' /*case 'Xct'*/:\n              break;\n            case 'count' /*case 'Count'*/:\n              break;\n            case 'selectedsheets' /*case 'SelectedSheets'*/:\n              break;\n            case 'calculation' /*case 'Calculation'*/:\n              break;\n            case 'uncalced' /*case 'Uncalced'*/:\n              break;\n            case 'startupprompt' /*case 'StartupPrompt'*/:\n              break;\n            case 'crn' /*case 'Crn'*/:\n              break;\n            case 'externname' /*case 'ExternName'*/:\n              break;\n            case 'formula' /*case 'Formula'*/:\n              break;\n            case 'colfirst' /*case 'ColFirst'*/:\n              break;\n            case 'collast' /*case 'ColLast'*/:\n              break;\n            case 'wantadvise' /*case 'WantAdvise'*/:\n              break;\n            case 'boolean' /*case 'Boolean'*/:\n              break;\n            case 'error' /*case 'Error'*/:\n              break;\n            case 'text' /*case 'Text'*/:\n              break;\n            case 'ole' /*case 'OLE'*/:\n              break;\n            case 'noautorecover' /*case 'NoAutoRecover'*/:\n              break;\n            case 'publishobjects' /*case 'PublishObjects'*/:\n              break;\n            case 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'refmoder1c1' /*case 'RefModeR1C1'*/:\n              break;\n            case 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* WorkbookOptions */\n        case 'workbookoptions' /*case 'WorkbookOptions'*/:\n          switch (Rn[3]) {\n            case 'owcversion' /*case 'OWCVersion'*/:\n              break;\n            case 'height' /*case 'Height'*/:\n              break;\n            case 'width' /*case 'Width'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* WorksheetOptions */\n        case 'worksheetoptions' /*case 'WorksheetOptions'*/:\n          switch (Rn[3]) {\n            case 'visible' /*case 'Visible'*/:\n              if (Rn[0].slice(-2) === \"/>\") {/* empty */} else if (Rn[1] === \"/\") switch (str.slice(pidx, Rn.index)) {\n                case \"SheetHidden\":\n                  wsprops.Hidden = 1;\n                  break;\n                case \"SheetVeryHidden\":\n                  wsprops.Hidden = 2;\n                  break;\n              } else pidx = Rn.index + Rn[0].length;\n              break;\n            case 'header' /*case 'Header'*/:\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n              break;\n            case 'footer' /*case 'Footer'*/:\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n              break;\n            case 'pagemargins' /*case 'PageMargins'*/:\n              var pagemargins = parsexmltag(Rn[0]);\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n              if (!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n              if (!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n              if (!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n              break;\n            case 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n              if (!Workbook.Views) Workbook.Views = [];\n              if (!Workbook.Views[0]) Workbook.Views[0] = {};\n              Workbook.Views[0].RTL = true;\n              break;\n            case 'freezepanes' /*case 'FreezePanes'*/:\n              break;\n            case 'frozennosplit' /*case 'FrozenNoSplit'*/:\n              break;\n            case 'splithorizontal' /*case 'SplitHorizontal'*/:\n            case 'splitvertical' /*case 'SplitVertical'*/:\n              break;\n            case 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n              break;\n            case 'activerow' /*case 'ActiveRow'*/:\n              break;\n            case 'activecol' /*case 'ActiveCol'*/:\n              break;\n            case 'toprowbottompane' /*case 'TopRowBottomPane'*/:\n              break;\n            case 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/:\n              break;\n            case 'unsynced' /*case 'Unsynced'*/:\n              break;\n            case 'print' /*case 'Print'*/:\n              break;\n            case 'printerrors' /*case 'PrintErrors'*/:\n              break;\n            case 'panes' /*case 'Panes'*/:\n              break;\n            case 'scale' /*case 'Scale'*/:\n              break;\n            case 'pane' /*case 'Pane'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'layout' /*case 'Layout'*/:\n              break;\n            case 'pagesetup' /*case 'PageSetup'*/:\n              break;\n            case 'selected' /*case 'Selected'*/:\n              break;\n            case 'protectobjects' /*case 'ProtectObjects'*/:\n              break;\n            case 'enableselection' /*case 'EnableSelection'*/:\n              break;\n            case 'protectscenarios' /*case 'ProtectScenarios'*/:\n              break;\n            case 'validprinterinfo' /*case 'ValidPrinterInfo'*/:\n              break;\n            case 'horizontalresolution' /*case 'HorizontalResolution'*/:\n              break;\n            case 'verticalresolution' /*case 'VerticalResolution'*/:\n              break;\n            case 'numberofcopies' /*case 'NumberofCopies'*/:\n              break;\n            case 'activepane' /*case 'ActivePane'*/:\n              break;\n            case 'toprowvisible' /*case 'TopRowVisible'*/:\n              break;\n            case 'leftcolumnvisible' /*case 'LeftColumnVisible'*/:\n              break;\n            case 'fittopage' /*case 'FitToPage'*/:\n              break;\n            case 'rangeselection' /*case 'RangeSelection'*/:\n              break;\n            case 'papersizeindex' /*case 'PaperSizeIndex'*/:\n              break;\n            case 'pagelayoutzoom' /*case 'PageLayoutZoom'*/:\n              break;\n            case 'pagebreakzoom' /*case 'PageBreakZoom'*/:\n              break;\n            case 'filteron' /*case 'FilterOn'*/:\n              break;\n            case 'fitwidth' /*case 'FitWidth'*/:\n              break;\n            case 'fitheight' /*case 'FitHeight'*/:\n              break;\n            case 'commentslayout' /*case 'CommentsLayout'*/:\n              break;\n            case 'zoom' /*case 'Zoom'*/:\n              break;\n            case 'lefttoright' /*case 'LeftToRight'*/:\n              break;\n            case 'gridlines' /*case 'Gridlines'*/:\n              break;\n            case 'allowsort' /*case 'AllowSort'*/:\n              break;\n            case 'allowfilter' /*case 'AllowFilter'*/:\n              break;\n            case 'allowinsertrows' /*case 'AllowInsertRows'*/:\n              break;\n            case 'allowdeleterows' /*case 'AllowDeleteRows'*/:\n              break;\n            case 'allowinsertcols' /*case 'AllowInsertCols'*/:\n              break;\n            case 'allowdeletecols' /*case 'AllowDeleteCols'*/:\n              break;\n            case 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/:\n              break;\n            case 'allowformatcells' /*case 'AllowFormatCells'*/:\n              break;\n            case 'allowsizecols' /*case 'AllowSizeCols'*/:\n              break;\n            case 'allowsizerows' /*case 'AllowSizeRows'*/:\n              break;\n            case 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n              if (!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n              cursheet[\"!outline\"].above = true;\n              break;\n            case 'tabcolorindex' /*case 'TabColorIndex'*/:\n              break;\n            case 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/:\n              break;\n            case 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/:\n              break;\n            case 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n              if (!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n              cursheet[\"!outline\"].left = true;\n              break;\n            case 'blackandwhite' /*case 'BlackAndWhite'*/:\n              break;\n            case 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/:\n              break;\n            case 'displaypagebreak' /*case 'DisplayPageBreak'*/:\n              break;\n            case 'rowcolheadings' /*case 'RowColHeadings'*/:\n              break;\n            case 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/:\n              break;\n            case 'noorientation' /*case 'NoOrientation'*/:\n              break;\n            case 'allowusepivottables' /*case 'AllowUsePivotTables'*/:\n              break;\n            case 'zeroheight' /*case 'ZeroHeight'*/:\n              break;\n            case 'viewablerange' /*case 'ViewableRange'*/:\n              break;\n            case 'selection' /*case 'Selection'*/:\n              break;\n            case 'protectcontents' /*case 'ProtectContents'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* PivotTable */\n        case 'pivottable' /*case 'PivotTable'*/:\n        case 'pivotcache' /*case 'PivotCache'*/:\n          switch (Rn[3]) {\n            case 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/:\n              break;\n            case 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/:\n              break;\n            case 'compactrowindent' /*case 'CompactRowIndent'*/:\n              break;\n            case 'location' /*case 'Location'*/:\n              break;\n            case 'pivotfield' /*case 'PivotField'*/:\n              break;\n            case 'orientation' /*case 'Orientation'*/:\n              break;\n            case 'layoutform' /*case 'LayoutForm'*/:\n              break;\n            case 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/:\n              break;\n            case 'layoutcompactrow' /*case 'LayoutCompactRow'*/:\n              break;\n            case 'position' /*case 'Position'*/:\n              break;\n            case 'pivotitem' /*case 'PivotItem'*/:\n              break;\n            case 'datatype' /*case 'DataType'*/:\n              break;\n            case 'datafield' /*case 'DataField'*/:\n              break;\n            case 'sourcename' /*case 'SourceName'*/:\n              break;\n            case 'parentfield' /*case 'ParentField'*/:\n              break;\n            case 'ptlineitems' /*case 'PTLineItems'*/:\n              break;\n            case 'ptlineitem' /*case 'PTLineItem'*/:\n              break;\n            case 'countofsameitems' /*case 'CountOfSameItems'*/:\n              break;\n            case 'item' /*case 'Item'*/:\n              break;\n            case 'itemtype' /*case 'ItemType'*/:\n              break;\n            case 'ptsource' /*case 'PTSource'*/:\n              break;\n            case 'cacheindex' /*case 'CacheIndex'*/:\n              break;\n            case 'consolidationreference' /*case 'ConsolidationReference'*/:\n              break;\n            case 'filename' /*case 'FileName'*/:\n              break;\n            case 'reference' /*case 'Reference'*/:\n              break;\n            case 'nocolumngrand' /*case 'NoColumnGrand'*/:\n              break;\n            case 'norowgrand' /*case 'NoRowGrand'*/:\n              break;\n            case 'blanklineafteritems' /*case 'BlankLineAfterItems'*/:\n              break;\n            case 'hidden' /*case 'Hidden'*/:\n              break;\n            case 'subtotal' /*case 'Subtotal'*/:\n              break;\n            case 'basefield' /*case 'BaseField'*/:\n              break;\n            case 'mapchilditems' /*case 'MapChildItems'*/:\n              break;\n            case 'function' /*case 'Function'*/:\n              break;\n            case 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/:\n              break;\n            case 'printsettitles' /*case 'PrintSetTitles'*/:\n              break;\n            case 'mergelabels' /*case 'MergeLabels'*/:\n              break;\n            case 'defaultversion' /*case 'DefaultVersion'*/:\n              break;\n            case 'refreshname' /*case 'RefreshName'*/:\n              break;\n            case 'refreshdate' /*case 'RefreshDate'*/:\n              break;\n            case 'refreshdatecopy' /*case 'RefreshDateCopy'*/:\n              break;\n            case 'versionlastrefresh' /*case 'VersionLastRefresh'*/:\n              break;\n            case 'versionlastupdate' /*case 'VersionLastUpdate'*/:\n              break;\n            case 'versionupdateablemin' /*case 'VersionUpdateableMin'*/:\n              break;\n            case 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/:\n              break;\n            case 'calculation' /*case 'Calculation'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* PageBreaks */\n        case 'pagebreaks' /*case 'PageBreaks'*/:\n          switch (Rn[3]) {\n            case 'colbreaks' /*case 'ColBreaks'*/:\n              break;\n            case 'colbreak' /*case 'ColBreak'*/:\n              break;\n            case 'rowbreaks' /*case 'RowBreaks'*/:\n              break;\n            case 'rowbreak' /*case 'RowBreak'*/:\n              break;\n            case 'colstart' /*case 'ColStart'*/:\n              break;\n            case 'colend' /*case 'ColEnd'*/:\n              break;\n            case 'rowend' /*case 'RowEnd'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* AutoFilter */\n        case 'autofilter' /*case 'AutoFilter'*/:\n          switch (Rn[3]) {\n            case 'autofiltercolumn' /*case 'AutoFilterColumn'*/:\n              break;\n            case 'autofiltercondition' /*case 'AutoFilterCondition'*/:\n              break;\n            case 'autofilterand' /*case 'AutoFilterAnd'*/:\n              break;\n            case 'autofilteror' /*case 'AutoFilterOr'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* QueryTable */\n        case 'querytable' /*case 'QueryTable'*/:\n          switch (Rn[3]) {\n            case 'id' /*case 'Id'*/:\n              break;\n            case 'autoformatfont' /*case 'AutoFormatFont'*/:\n              break;\n            case 'autoformatpattern' /*case 'AutoFormatPattern'*/:\n              break;\n            case 'querysource' /*case 'QuerySource'*/:\n              break;\n            case 'querytype' /*case 'QueryType'*/:\n              break;\n            case 'enableredirections' /*case 'EnableRedirections'*/:\n              break;\n            case 'refreshedinxl9' /*case 'RefreshedInXl9'*/:\n              break;\n            case 'urlstring' /*case 'URLString'*/:\n              break;\n            case 'htmltables' /*case 'HTMLTables'*/:\n              break;\n            case 'connection' /*case 'Connection'*/:\n              break;\n            case 'commandtext' /*case 'CommandText'*/:\n              break;\n            case 'refreshinfo' /*case 'RefreshInfo'*/:\n              break;\n            case 'notitles' /*case 'NoTitles'*/:\n              break;\n            case 'nextid' /*case 'NextId'*/:\n              break;\n            case 'columninfo' /*case 'ColumnInfo'*/:\n              break;\n            case 'overwritecells' /*case 'OverwriteCells'*/:\n              break;\n            case 'donotpromptforfile' /*case 'DoNotPromptForFile'*/:\n              break;\n            case 'textwizardsettings' /*case 'TextWizardSettings'*/:\n              break;\n            case 'source' /*case 'Source'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'decimal' /*case 'Decimal'*/:\n              break;\n            case 'thousandseparator' /*case 'ThousandSeparator'*/:\n              break;\n            case 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/:\n              break;\n            case 'formatsettings' /*case 'FormatSettings'*/:\n              break;\n            case 'fieldtype' /*case 'FieldType'*/:\n              break;\n            case 'delimiters' /*case 'Delimiters'*/:\n              break;\n            case 'tab' /*case 'Tab'*/:\n              break;\n            case 'comma' /*case 'Comma'*/:\n              break;\n            case 'autoformatname' /*case 'AutoFormatName'*/:\n              break;\n            case 'versionlastedit' /*case 'VersionLastEdit'*/:\n              break;\n            case 'versionlastrefresh' /*case 'VersionLastRefresh'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n        case 'datavalidation' /*case 'DataValidation'*/:\n          switch (Rn[3]) {\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'type' /*case 'Type'*/:\n              break;\n            case 'min' /*case 'Min'*/:\n              break;\n            case 'max' /*case 'Max'*/:\n              break;\n            case 'sort' /*case 'Sort'*/:\n              break;\n            case 'descending' /*case 'Descending'*/:\n              break;\n            case 'order' /*case 'Order'*/:\n              break;\n            case 'casesensitive' /*case 'CaseSensitive'*/:\n              break;\n            case 'value' /*case 'Value'*/:\n              break;\n            case 'errorstyle' /*case 'ErrorStyle'*/:\n              break;\n            case 'errormessage' /*case 'ErrorMessage'*/:\n              break;\n            case 'errortitle' /*case 'ErrorTitle'*/:\n              break;\n            case 'inputmessage' /*case 'InputMessage'*/:\n              break;\n            case 'inputtitle' /*case 'InputTitle'*/:\n              break;\n            case 'combohide' /*case 'ComboHide'*/:\n              break;\n            case 'inputhide' /*case 'InputHide'*/:\n              break;\n            case 'condition' /*case 'Condition'*/:\n              break;\n            case 'qualifier' /*case 'Qualifier'*/:\n              break;\n            case 'useblank' /*case 'UseBlank'*/:\n              break;\n            case 'value1' /*case 'Value1'*/:\n              break;\n            case 'value2' /*case 'Value2'*/:\n              break;\n            case 'format' /*case 'Format'*/:\n              break;\n            case 'cellrangelist' /*case 'CellRangeList'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n        case 'sorting' /*case 'Sorting'*/:\n        case 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n          switch (Rn[3]) {\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'type' /*case 'Type'*/:\n              break;\n            case 'min' /*case 'Min'*/:\n              break;\n            case 'max' /*case 'Max'*/:\n              break;\n            case 'sort' /*case 'Sort'*/:\n              break;\n            case 'descending' /*case 'Descending'*/:\n              break;\n            case 'order' /*case 'Order'*/:\n              break;\n            case 'casesensitive' /*case 'CaseSensitive'*/:\n              break;\n            case 'value' /*case 'Value'*/:\n              break;\n            case 'errorstyle' /*case 'ErrorStyle'*/:\n              break;\n            case 'errormessage' /*case 'ErrorMessage'*/:\n              break;\n            case 'errortitle' /*case 'ErrorTitle'*/:\n              break;\n            case 'cellrangelist' /*case 'CellRangeList'*/:\n              break;\n            case 'inputmessage' /*case 'InputMessage'*/:\n              break;\n            case 'inputtitle' /*case 'InputTitle'*/:\n              break;\n            case 'combohide' /*case 'ComboHide'*/:\n              break;\n            case 'inputhide' /*case 'InputHide'*/:\n              break;\n            case 'condition' /*case 'Condition'*/:\n              break;\n            case 'qualifier' /*case 'Qualifier'*/:\n              break;\n            case 'useblank' /*case 'UseBlank'*/:\n              break;\n            case 'value1' /*case 'Value1'*/:\n              break;\n            case 'value2' /*case 'Value2'*/:\n              break;\n            case 'format' /*case 'Format'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* MapInfo (schema) */\n        case 'mapinfo' /*case 'MapInfo'*/:\n        case 'schema' /*case 'Schema'*/:\n        case 'data' /*case 'data'*/:\n          switch (Rn[3]) {\n            case 'map' /*case 'Map'*/:\n              break;\n            case 'entry' /*case 'Entry'*/:\n              break;\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'xpath' /*case 'XPath'*/:\n              break;\n            case 'field' /*case 'Field'*/:\n              break;\n            case 'xsdtype' /*case 'XSDType'*/:\n              break;\n            case 'filteron' /*case 'FilterOn'*/:\n              break;\n            case 'aggregate' /*case 'Aggregate'*/:\n              break;\n            case 'elementtype' /*case 'ElementType'*/:\n              break;\n            case 'attributetype' /*case 'AttributeType'*/:\n              break;\n            /* These are from xsd (XML Schema Definition) */\n            case 'schema' /*case 'schema'*/:\n            case 'element' /*case 'element'*/:\n            case 'complextype' /*case 'complexType'*/:\n            case 'datatype' /*case 'datatype'*/:\n            case 'all' /*case 'all'*/:\n            case 'attribute' /*case 'attribute'*/:\n            case 'extends' /*case 'extends'*/:\n              break;\n            case 'row' /*case 'row'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* SmartTags (can be anything) */\n        case 'smarttags' /*case 'SmartTags'*/:\n          break;\n        default:\n          seen = false;\n          break;\n      }\n      if (seen) break;\n      /* CustomDocumentProperties */\n      if (Rn[3].match(/!\\[CDATA/)) break;\n      if (!state[state.length - 1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n      if (state[state.length - 1][0] === /*'CustomDocumentProperties'*/'customdocumentproperties') {\n        if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));else {\n          cp = Rn;\n          pidx = Rn.index + Rn[0].length;\n        }\n        break;\n      }\n      if (opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n  }\n  var out = {} /*:any*/;\n  if (!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n  out.SheetNames = sheetnames;\n  out.Workbook = Workbook;\n  out.SSF = dup(table_fmt);\n  out.Props = Props;\n  out.Custprops = Custprops;\n  return out;\n}\nfunction parse_xlml(data /*:RawBytes|string*/, opts) /*:Workbook*/{\n  fix_read_opts(opts = opts || {});\n  switch (opts.type || \"base64\") {\n    case \"base64\":\n      return parse_xlml_xml(Base64_decode(data), opts);\n    case \"binary\":\n    case \"buffer\":\n    case \"file\":\n      return parse_xlml_xml(data, opts);\n    case \"array\":\n      return parse_xlml_xml(a2s(data), opts);\n  }\n  /*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb /*:Workbook*/, opts) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  /* DocumentProperties */\n  if (wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n  /* CustomDocumentProperties */\n  if (wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n  return o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml( /*::wb, opts*/\n) /*:string*/{\n  /* OfficeDocumentSettings */\n  /* ExcelWorkbook */\n  return \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts) /*:string*/{\n  /* Styles */\n  var styles /*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n  opts.cellXfs.forEach(function (xf, id) {\n    var payload /*:Array<string>*/ = [];\n    payload.push(writextag('NumberFormat', null, {\n      \"ss:Format\": escapexml(table_fmt[xf.numFmtId])\n    }));\n    var o = /*::(*/{\n      \"ss:ID\": \"s\" + (21 + id)\n    } /*:: :any)*/;\n    styles.push(writextag('Style', payload.join(\"\"), o));\n  });\n  return writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) {\n  return writextag(\"NamedRange\", null, {\n    \"ss:Name\": n.Name,\n    \"ss:RefersTo\": \"=\" + a1_to_rc(n.Ref, {\n      r: 0,\n      c: 0\n    })\n  });\n}\nfunction write_names_xlml(wb /*::, opts*/) /*:string*/{\n  if (!((wb || {}).Workbook || {}).Names) return \"\";\n  /*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n  var names /*:Array<any>*/ = wb.Workbook.Names;\n  var out /*:Array<string>*/ = [];\n  for (var i = 0; i < names.length; ++i) {\n    var n = names[i];\n    if (n.Sheet != null) continue;\n    if (n.Name.match(/^_xlfn\\./)) continue;\n    out.push(write_name_xlml(n));\n  }\n  return writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws) return \"\";\n  if (!((wb || {}).Workbook || {}).Names) return \"\";\n  /*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n  var names /*:Array<any>*/ = wb.Workbook.Names;\n  var out /*:Array<string>*/ = [];\n  for (var i = 0; i < names.length; ++i) {\n    var n = names[i];\n    if (n.Sheet != idx) continue;\n    /*switch(n.Name) {\n    \tcase \"_\": continue;\n    }*/\n    if (n.Name.match(/^_xlfn\\./)) continue;\n    out.push(write_name_xlml(n));\n  }\n  return out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws) return \"\";\n  var o /*:Array<string>*/ = [];\n  /* NOTE: spec technically allows any order, but stick with implied order */\n\n  /* FitToPage */\n  /* DoNotDisplayColHeaders */\n  /* DoNotDisplayRowHeaders */\n  /* ViewableRange */\n  /* Selection */\n  /* GridlineColor */\n  /* Name */\n  /* ExcelWorksheetType */\n  /* IntlMacro */\n  /* Unsynced */\n  /* Selected */\n  /* CodeName */\n\n  if (ws['!margins']) {\n    o.push(\"<PageSetup>\");\n    if (ws['!margins'].header) o.push(writextag(\"Header\", null, {\n      'x:Margin': ws['!margins'].header\n    }));\n    if (ws['!margins'].footer) o.push(writextag(\"Footer\", null, {\n      'x:Margin': ws['!margins'].footer\n    }));\n    o.push(writextag(\"PageMargins\", null, {\n      'x:Bottom': ws['!margins'].bottom || \"0.75\",\n      'x:Left': ws['!margins'].left || \"0.7\",\n      'x:Right': ws['!margins'].right || \"0.7\",\n      'x:Top': ws['!margins'].top || \"0.75\"\n    }));\n    o.push(\"</PageSetup>\");\n  }\n\n  /* PageSetup */\n  /* DisplayPageBreak */\n  /* TransitionExpressionEvaluation */\n  /* TransitionFormulaEntry */\n  /* Print */\n  /* Zoom */\n  /* PageLayoutZoom */\n  /* PageBreakZoom */\n  /* ShowPageBreakZoom */\n  /* DefaultRowHeight */\n  /* DefaultColumnWidth */\n  /* StandardWidth */\n\n  if (wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n    /* Visible */\n    if (wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\", {}));else {\n      /* Selected */\n      for (var i = 0; i < idx; ++i) if (wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n      if (i == idx) o.push(\"<Selected/>\");\n    }\n  }\n\n  /* LeftColumnVisible */\n\n  if (((((wb || {}).Workbook || {}).Views || [])[0] || {}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n  /* GridlineColorIndex */\n  /* DisplayFormulas */\n  /* DoNotDisplayGridlines */\n  /* DoNotDisplayHeadings */\n  /* DoNotDisplayOutline */\n  /* ApplyAutomaticOutlineStyles */\n  /* NoSummaryRowsBelowDetail */\n  /* NoSummaryColumnsRightDetail */\n  /* DoNotDisplayZeros */\n  /* ActiveRow */\n  /* ActiveColumn */\n  /* FilterOn */\n  /* RangeSelection */\n  /* TopRowVisible */\n  /* TopRowBottomPane */\n  /* LeftColumnRightPane */\n  /* ActivePane */\n  /* SplitHorizontal */\n  /* SplitVertical */\n  /* FreezePanes */\n  /* FrozenNoSplit */\n  /* TabColorIndex */\n  /* Panes */\n\n  /* NOTE: Password not supported in XLML Format */\n  if (ws['!protect']) {\n    o.push(writetag(\"ProtectContents\", \"True\"));\n    if (ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n    if (ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n    if (ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));else if (ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n    [[\"formatCells\", \"AllowFormatCells\"], [\"formatColumns\", \"AllowSizeCols\"], [\"formatRows\", \"AllowSizeRows\"], [\"insertColumns\", \"AllowInsertCols\"], [\"insertRows\", \"AllowInsertRows\"], [\"insertHyperlinks\", \"AllowInsertHyperlinks\"], [\"deleteColumns\", \"AllowDeleteCols\"], [\"deleteRows\", \"AllowDeleteRows\"], [\"sort\", \"AllowSort\"], [\"autoFilter\", \"AllowFilter\"], [\"pivotTables\", \"AllowUsePivotTables\"]].forEach(function (x) {\n      if (ws['!protect'][x[0]]) o.push(\"<\" + x[1] + \"/>\");\n    });\n  }\n  if (o.length == 0) return \"\";\n  return writextag(\"WorksheetOptions\", o.join(\"\"), {\n    xmlns: XLMLNS.x\n  });\n}\nfunction write_ws_xlml_comment(comments /*:Array<any>*/) /*:string*/{\n  return comments.map(function (c) {\n    // TODO: formatted text\n    var t = xlml_unfixstr(c.t || \"\");\n    var d = writextag(\"ss:Data\", t, {\n      \"xmlns\": \"http://www.w3.org/TR/REC-html40\"\n    });\n    return writextag(\"Comment\", d, {\n      \"ss:Author\": c.a\n    });\n  }).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref /*:string*/, ws, opts, idx /*:number*/, wb, addr) /*:string*/{\n  if (!cell || cell.v == undefined && cell.f == undefined) return \"\";\n  var attr = {};\n  if (cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n  if (cell.F && cell.F.slice(0, ref.length) == ref) {\n    var end = decode_cell(cell.F.slice(ref.length + 1));\n    attr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n  }\n  if (cell.l && cell.l.Target) {\n    attr[\"ss:HRef\"] = escapexml(cell.l.Target);\n    if (cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n  }\n  if (ws['!merges']) {\n    var marr = ws['!merges'];\n    for (var mi = 0; mi != marr.length; ++mi) {\n      if (marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n      if (marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n      if (marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n    }\n  }\n  var t = \"\",\n    p = \"\";\n  switch (cell.t) {\n    case 'z':\n      if (!opts.sheetStubs) return \"\";\n      break;\n    case 'n':\n      t = 'Number';\n      p = String(cell.v);\n      break;\n    case 'b':\n      t = 'Boolean';\n      p = cell.v ? \"1\" : \"0\";\n      break;\n    case 'e':\n      t = 'Error';\n      p = BErr[cell.v];\n      break;\n    case 'd':\n      t = 'DateTime';\n      p = new Date(cell.v).toISOString();\n      if (cell.z == null) cell.z = cell.z || table_fmt[14];\n      break;\n    case 's':\n      t = 'String';\n      p = escapexlml(cell.v || \"\");\n      break;\n  }\n  /* TODO: cell style */\n  var os = get_cell_style(opts.cellXfs, cell, opts);\n  attr[\"ss:StyleID\"] = \"s\" + (21 + os);\n  attr[\"ss:Index\"] = addr.c + 1;\n  var _v = cell.v != null ? p : \"\";\n  var m = cell.t == 'z' ? \"\" : '<Data ss:Type=\"' + t + '\">' + _v + '</Data>';\n  if ((cell.c || []).length > 0) m += write_ws_xlml_comment(cell.c);\n  return writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R /*:number*/, row) /*:string*/{\n  var o = '<Row ss:Index=\"' + (R + 1) + '\"';\n  if (row) {\n    if (row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n    if (row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n    if (row.hidden) o += ' ss:Hidden=\"1\"';\n  }\n  return o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws['!ref']) return \"\";\n  var range /*:Range*/ = safe_decode_range(ws['!ref']);\n  var marr /*:Array<Range>*/ = ws['!merges'] || [],\n    mi = 0;\n  var o /*:Array<string>*/ = [];\n  if (ws['!cols']) ws['!cols'].forEach(function (n, i) {\n    process_col(n);\n    var w = !!n.width;\n    var p = col_obj_w(i, n);\n    var k /*:any*/ = {\n      \"ss:Index\": i + 1\n    };\n    if (w) k['ss:Width'] = width2px(p.width);\n    if (n.hidden) k['ss:Hidden'] = \"1\";\n    o.push(writextag(\"Column\", null, k));\n  });\n  var dense = Array.isArray(ws);\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    var row = [write_ws_xlml_row(R, (ws['!rows'] || [])[R])];\n    for (var C = range.s.c; C <= range.e.c; ++C) {\n      var skip = false;\n      for (mi = 0; mi != marr.length; ++mi) {\n        if (marr[mi].s.c > C) continue;\n        if (marr[mi].s.r > R) continue;\n        if (marr[mi].e.c < C) continue;\n        if (marr[mi].e.r < R) continue;\n        if (marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n        break;\n      }\n      if (skip) continue;\n      var addr = {\n        r: R,\n        c: C\n      };\n      var ref = encode_cell(addr),\n        cell = dense ? (ws[R] || [])[C] : ws[ref];\n      row.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n    }\n    row.push(\"</Row>\");\n    if (row.length > 2) o.push(row.join(\"\"));\n  }\n  return o.join(\"\");\n}\nfunction write_ws_xlml(idx /*:number*/, opts, wb /*:Workbook*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  var s = wb.SheetNames[idx];\n  var ws = wb.Sheets[s];\n  var t /*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n  if (t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n  /* Table */\n  t = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n  if (t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n  /* WorksheetOptions */\n  o.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n  return o.join(\"\");\n}\nfunction write_xlml(wb, opts) /*:string*/{\n  if (!opts) opts = {};\n  if (!wb.SSF) wb.SSF = dup(table_fmt);\n  if (wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n    opts.cellXfs = [];\n    get_cell_style(opts.cellXfs, {}, {\n      revssf: {\n        \"General\": 0\n      }\n    });\n  }\n  var d /*:Array<string>*/ = [];\n  d.push(write_props_xlml(wb, opts));\n  d.push(write_wb_xlml(wb, opts));\n  d.push(\"\");\n  d.push(\"\");\n  for (var i = 0; i < wb.SheetNames.length; ++i) d.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\n    \"ss:Name\": escapexml(wb.SheetNames[i])\n  }));\n  d[2] = write_sty_xlml(wb, opts);\n  d[3] = write_names_xlml(wb, opts);\n  return XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n    'xmlns': XLMLNS.ss,\n    'xmlns:o': XLMLNS.o,\n    'xmlns:x': XLMLNS.x,\n    'xmlns:ss': XLMLNS.ss,\n    'xmlns:dt': XLMLNS.dt,\n    'xmlns:html': XLMLNS.html\n  });\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj /*:CFBEntry*/) {\n  var v = {};\n  var o = obj.content;\n  /*:: if(o == null) return; */\n\n  /* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n  o.l = 28;\n  v.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n  v.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n  if (o.length - o.l <= 4) return v;\n  var m /*:number*/ = o.read_shift(4);\n  if (m == 0 || m > 40) return v;\n  o.l -= 4;\n  v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n  if (o.length - o.l <= 4) return v;\n  m = o.read_shift(4);\n  if (m !== 0x71b239f4) return v;\n  v.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n  m = o.read_shift(4);\n  if (m == 0 || m > 40) return v;\n  o.l -= 4;\n  v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue          0x003c\n\t- 2.4.59 ContinueBigName   0x043c\n\t- 2.4.60 ContinueFrt       0x0812\n\t- 2.4.61 ContinueFrt11     0x0875\n\t- 2.4.62 ContinueFrt12     0x087f\n*/\nvar CONTINUE_RT = [0x003c, 0x043c, 0x0812, 0x0875, 0x087f];\nfunction slurp(RecordType, R, blob, length /*:number*/, opts) /*:any*/{\n  var l = length;\n  var bufs = [];\n  var d = blob.slice(blob.l, blob.l + l);\n  if (opts && opts.enc && opts.enc.insitu && d.length > 0) switch (RecordType) {\n    case 0x0009:\n    case 0x0209:\n    case 0x0409:\n    case 0x0809 /* BOF */:\n    case 0x002f /* FilePass */:\n    case 0x0195 /* FileLock */:\n    case 0x00e1 /* InterfaceHdr */:\n    case 0x0196 /* RRDInfo */:\n    case 0x0138 /* RRDHead */:\n    case 0x0194 /* UsrExcl */:\n    case 0x000a /* EOF */:\n      break;\n    case 0x0085 /* BoundSheet8 */:\n      break;\n    default:\n      opts.enc.insitu(d);\n  }\n  bufs.push(d);\n  blob.l += l;\n  var nextrt = __readUInt16LE(blob, blob.l),\n    next = XLSRecordEnum[nextrt];\n  var start = 0;\n  while (next != null && CONTINUE_RT.indexOf(nextrt) > -1) {\n    l = __readUInt16LE(blob, blob.l + 2);\n    start = blob.l + 4;\n    if (nextrt == 0x0812 /* ContinueFrt */) start += 4;else if (nextrt == 0x0875 || nextrt == 0x087f) {\n      start += 12;\n    }\n    d = blob.slice(start, blob.l + 4 + l);\n    bufs.push(d);\n    blob.l += 4 + l;\n    next = XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)];\n  }\n  var b = bconcat(bufs) /*:any*/;\n  prep_blob(b, 0);\n  var ll = 0;\n  b.lens = [];\n  for (var j = 0; j < bufs.length; ++j) {\n    b.lens.push(ll);\n    ll += bufs[j].length;\n  }\n  if (b.length < length) throw \"XLS Record 0x\" + RecordType.toString(16) + \" Truncated: \" + b.length + \" < \" + length;\n  return R.f(b, b.length, opts);\n}\nfunction safe_format_xf(p /*:any*/, opts /*:ParseOpts*/, date1904 /*:?boolean*/) {\n  if (p.t === 'z') return;\n  if (!p.XF) return;\n  var fmtid = 0;\n  try {\n    fmtid = p.z || p.XF.numFmtId || 0;\n    if (opts.cellNF) p.z = table_fmt[fmtid];\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (!opts || opts.cellText !== false) try {\n    if (p.t === 'e') {\n      p.w = p.w || BErr[p.v];\n    } else if (fmtid === 0 || fmtid == \"General\") {\n      if (p.t === 'n') {\n        if ((p.v | 0) === p.v) p.w = p.v.toString(10);else p.w = SSF_general_num(p.v);\n      } else p.w = SSF_general(p.v);\n    } else p.w = SSF_format(fmtid, p.v, {\n      date1904: !!date1904,\n      dateNF: opts && opts.dateNF\n    });\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {\n    var _d = SSF_parse_date_code(p.v);\n    if (_d) {\n      p.t = 'd';\n      p.v = new Date(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u);\n    }\n  }\n}\nfunction make_cell(val, ixfe, t) /*:Cell*/{\n  return {\n    v: val,\n    ixfe: ixfe,\n    t: t\n  } /*:any*/;\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options /*:ParseOpts*/) /*:Workbook*/{\n  var wb = {\n    opts: {}\n  } /*:any*/;\n  var Sheets = {};\n  if (DENSE != null && options.dense == null) options.dense = DENSE;\n  var out /*:Worksheet*/ = options.dense ? [] : {} /*:any*/;\n  var Directory = {};\n  var range /*:Range*/ = {} /*:any*/;\n  var last_formula = null;\n  var sst /*:SST*/ = [] /*:any*/;\n  var cur_sheet = \"\";\n  var Preamble = {};\n  var lastcell,\n    last_cell = \"\",\n    cc /*:Cell*/,\n    cmnt,\n    rngC,\n    rngR;\n  var sharedf = {};\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var temp_val /*:Cell*/;\n  var country;\n  var XFs = []; /* XF records */\n  var palette /*:Array<[number, number, number]>*/ = [];\n  var Workbook /*:WBWBProps*/ = {\n      Sheets: [],\n      WBProps: {\n        date1904: false\n      },\n      Views: [{}]\n    } /*:any*/,\n    wsprops = {};\n  var get_rgb = function getrgb(icv /*:number*/) /*:[number, number, number]*/{\n    if (icv < 8) return XLSIcv[icv];\n    if (icv < 64) return palette[icv - 8] || XLSIcv[icv];\n    return XLSIcv[icv];\n  };\n  var process_cell_style = function pcs(cell, line /*:any*/, options) {\n    var xfd = line.XF.data;\n    if (!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n    line.s = {} /*:any*/;\n    line.s.patternType = xfd.patternType;\n    var t;\n    if (t = rgb2Hex(get_rgb(xfd.icvFore))) {\n      line.s.fgColor = {\n        rgb: t\n      };\n    }\n    if (t = rgb2Hex(get_rgb(xfd.icvBack))) {\n      line.s.bgColor = {\n        rgb: t\n      };\n    }\n  };\n  var addcell = function addcell(cell /*:any*/, line /*:any*/, options /*:any*/) {\n    if (file_depth > 1) return;\n    if (options.sheetRows && cell.r >= options.sheetRows) return;\n    if (options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n    delete line.ixfe;\n    delete line.XF;\n    lastcell = cell;\n    last_cell = encode_cell(cell);\n    if (!range || !range.s || !range.e) range = {\n      s: {\n        r: 0,\n        c: 0\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n    if (cell.r < range.s.r) range.s.r = cell.r;\n    if (cell.c < range.s.c) range.s.c = cell.c;\n    if (cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n    if (cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n    if (options.cellFormula && line.f) {\n      for (var afi = 0; afi < arrayf.length; ++afi) {\n        if (arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n        if (arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n        line.F = encode_range(arrayf[afi][0]);\n        if (arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n        if (line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n        break;\n      }\n    }\n    {\n      if (options.dense) {\n        if (!out[cell.r]) out[cell.r] = [];\n        out[cell.r][cell.c] = line;\n      } else out[last_cell] = line;\n    }\n  };\n  var opts = {\n    enc: false,\n    // encrypted\n    sbcch: 0,\n    // cch in the preceding SupBook\n    snames: [],\n    // sheetnames\n    sharedf: sharedf,\n    // shared formulae by address\n    arrayf: arrayf,\n    // array formulae array\n    rrtabid: [],\n    // RRTabId\n    lastuser: \"\",\n    // Last User from WriteAccess\n    biff: 8,\n    // BIFF version\n    codepage: 0,\n    // CP from CodePage record\n    winlocked: 0,\n    // fLockWn from WinProtect\n    cellStyles: !!options && !!options.cellStyles,\n    WTF: !!options && !!options.wtf\n  } /*:any*/;\n  if (options.password) opts.password = options.password;\n  var themes;\n  var merges /*:Array<Range>*/ = [];\n  var objects = [];\n  var colinfo /*:Array<ColInfo>*/ = [],\n    rowinfo /*:Array<RowInfo>*/ = [];\n  var seencol = false;\n  var supbooks = [] /*:any*/; // 1-indexed, will hold extern names\n  supbooks.SheetNames = opts.snames;\n  supbooks.sharedf = opts.sharedf;\n  supbooks.arrayf = opts.arrayf;\n  supbooks.names = [];\n  supbooks.XTI = [];\n  var last_RT = 0;\n  var file_depth = 0; /* TODO: make a real stack */\n  var BIFF2Fmt = 0,\n    BIFF2FmtTable /*:Array<string>*/ = [];\n  var FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n  var last_lbl /*:?DefinedName*/;\n\n  /* explicit override for some broken writers */\n  opts.codepage = 1200;\n  set_cp(1200);\n  var seen_codepage = false;\n  while (blob.l < blob.length - 1) {\n    var s = blob.l;\n    var RecordType = blob.read_shift(2);\n    if (RecordType === 0 && last_RT === 0x000a /* EOF */) break;\n    var length = blob.l === blob.length ? 0 : blob.read_shift(2);\n    var R = XLSRecordEnum[RecordType];\n    //console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n    //if(!R) console.log(blob.slice(blob.l, blob.l + length));\n    if (R && R.f) {\n      if (options.bookSheets) {\n        if (last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;\n      }\n      last_RT = RecordType;\n      if (R.r === 2 || R.r == 12) {\n        var rt = blob.read_shift(2);\n        length -= 2;\n        if (!opts.enc && rt !== RecordType && ((rt & 0xFF) << 8 | rt >> 8) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n        if (R.r == 12) {\n          blob.l += 10;\n          length -= 10;\n        } // skip FRT\n      }\n      //console.error(R,blob.l,length,blob.length);\n      var val /*:any*/ = {} /*:any*/;\n      if (RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts) /*:: :any)*/;else val = /*::(*/slurp(RecordType, R, blob, length, opts) /*:: :any)*/;\n      /*:: val = (val:any); */\n      if (file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* 'BOF' */) continue;\n      switch (RecordType) {\n        case 0x0022 /* Date1904 */:\n          /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n          wb.opts.Date1904 = Workbook.WBProps.date1904 = val;\n          break;\n        case 0x0086 /* WriteProtect */:\n          wb.opts.WriteProtect = true;\n          break;\n        case 0x002f /* FilePass */:\n          if (!opts.enc) blob.l = 0;\n          opts.enc = val;\n          if (!options.password) throw new Error(\"File is password-protected\");\n          if (val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n          if (!val.valid) throw new Error(\"Password is incorrect\");\n          break;\n        case 0x005c /* WriteAccess */:\n          opts.lastuser = val;\n          break;\n        case 0x0042 /* CodePage */:\n          var cpval = Number(val);\n          /* overrides based on test cases */\n          switch (cpval) {\n            case 0x5212:\n              cpval = 1200;\n              break;\n            case 0x8000:\n              cpval = 10000;\n              break;\n            case 0x8001:\n              cpval = 1252;\n              break;\n          }\n          set_cp(opts.codepage = cpval);\n          seen_codepage = true;\n          break;\n        case 0x013d /* RRTabId */:\n          opts.rrtabid = val;\n          break;\n        case 0x0019 /* WinProtect */:\n          opts.winlocked = val;\n          break;\n        case 0x01b7 /* RefreshAll */:\n          wb.opts[\"RefreshAll\"] = val;\n          break;\n        case 0x000c /* CalcCount */:\n          wb.opts[\"CalcCount\"] = val;\n          break;\n        case 0x0010 /* CalcDelta */:\n          wb.opts[\"CalcDelta\"] = val;\n          break;\n        case 0x0011 /* CalcIter */:\n          wb.opts[\"CalcIter\"] = val;\n          break;\n        case 0x000d /* CalcMode */:\n          wb.opts[\"CalcMode\"] = val;\n          break;\n        case 0x000e /* CalcPrecision */:\n          wb.opts[\"CalcPrecision\"] = val;\n          break;\n        case 0x005f /* CalcSaveRecalc */:\n          wb.opts[\"CalcSaveRecalc\"] = val;\n          break;\n        case 0x000f /* CalcRefMode */:\n          opts.CalcRefMode = val;\n          break;\n        // TODO: implement R1C1\n        case 0x08a3 /* ForceFullCalculation */:\n          wb.opts.FullCalc = val;\n          break;\n        case 0x0081 /* WsBool */:\n          if (val.fDialog) out[\"!type\"] = \"dialog\";\n          if (!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n          if (!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n          break;\n        // TODO\n        case 0x00e0 /* XF */:\n          XFs.push(val);\n          break;\n        case 0x01ae /* SupBook */:\n          supbooks.push([val]);\n          supbooks[supbooks.length - 1].XTI = [];\n          break;\n        case 0x0023:\n        case 0x0223 /* ExternName */:\n          supbooks[supbooks.length - 1].push(val);\n          break;\n        case 0x0018:\n        case 0x0218 /* Lbl */:\n          last_lbl = {\n            Name: val.Name,\n            Ref: stringify_formula(val.rgce, range, null, supbooks, opts)\n          } /*:DefinedName*/;\n          if (val.itab > 0) last_lbl.Sheet = val.itab - 1;\n          supbooks.names.push(last_lbl);\n          if (!supbooks[0]) {\n            supbooks[0] = [];\n            supbooks[0].XTI = [];\n          }\n          supbooks[supbooks.length - 1].push(val);\n          if (val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0) if (val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d') FilterDatabases[val.itab - 1] = {\n            ref: encode_range(val.rgce[0][0][1][2])\n          };\n          break;\n        case 0x0016 /* ExternCount */:\n          opts.ExternCount = val;\n          break;\n        case 0x0017 /* ExternSheet */:\n          if (supbooks.length == 0) {\n            supbooks[0] = [];\n            supbooks[0].XTI = [];\n          }\n          supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n          supbooks.XTI = supbooks.XTI.concat(val);\n          break;\n        case 0x0894 /* NameCmt */:\n          /* TODO: search for correct name */\n          if (opts.biff < 8) break;\n          if (last_lbl != null) last_lbl.Comment = val[1];\n          break;\n        case 0x0012 /* Protect */:\n          out[\"!protect\"] = val;\n          break;\n        /* for sheet or book */\n        case 0x0013 /* Password */:\n          if (val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val);\n          break;\n        case 0x0085 /* BoundSheet8 */:\n          {\n            Directory[val.pos] = val;\n            opts.snames.push(val.name);\n          }\n          break;\n        case 0x000a /* EOF */:\n          {\n            if (--file_depth) break;\n            if (range.e) {\n              if (range.e.r > 0 && range.e.c > 0) {\n                range.e.r--;\n                range.e.c--;\n                out[\"!ref\"] = encode_range(range);\n                if (options.sheetRows && options.sheetRows <= range.e.r) {\n                  var tmpri = range.e.r;\n                  range.e.r = options.sheetRows - 1;\n                  out[\"!fullref\"] = out[\"!ref\"];\n                  out[\"!ref\"] = encode_range(range);\n                  range.e.r = tmpri;\n                }\n                range.e.r++;\n                range.e.c++;\n              }\n              if (merges.length > 0) out[\"!merges\"] = merges;\n              if (objects.length > 0) out[\"!objects\"] = objects;\n              if (colinfo.length > 0) out[\"!cols\"] = colinfo;\n              if (rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n              Workbook.Sheets.push(wsprops);\n            }\n            if (cur_sheet === \"\") Preamble = out;else Sheets[cur_sheet] = out;\n            out = options.dense ? [] : {} /*:any*/;\n          }\n          break;\n        case 0x0009:\n        case 0x0209:\n        case 0x0409:\n        case 0x0809 /* BOF */:\n          {\n            if (opts.biff === 8) opts.biff = {\n              /*::[*/0x0009 /*::]*/: 2,\n              /*::[*/0x0209 /*::]*/: 3,\n              /*::[*/0x0409 /*::]*/: 4\n            }[RecordType] || {\n              /*::[*/0x0200 /*::]*/: 2,\n              /*::[*/0x0300 /*::]*/: 3,\n              /*::[*/0x0400 /*::]*/: 4,\n              /*::[*/0x0500 /*::]*/: 5,\n              /*::[*/0x0600 /*::]*/: 8,\n              /*::[*/0x0002 /*::]*/: 2,\n              /*::[*/0x0007 /*::]*/: 2\n            }[val.BIFFVer] || 8;\n            opts.biffguess = val.BIFFVer == 0;\n            if (val.BIFFVer == 0 && val.dt == 0x1000) {\n              opts.biff = 5;\n              seen_codepage = true;\n              set_cp(opts.codepage = 28591);\n            }\n            if (opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n            if (file_depth++) break;\n            out = options.dense ? [] : {} /*:any*/;\n            if (opts.biff < 8 && !seen_codepage) {\n              seen_codepage = true;\n              set_cp(opts.codepage = options.codepage || 1252);\n            }\n            if (opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n              if (cur_sheet === \"\") cur_sheet = \"Sheet1\";\n              range = {\n                s: {\n                  r: 0,\n                  c: 0\n                },\n                e: {\n                  r: 0,\n                  c: 0\n                }\n              };\n              /* fake BoundSheet8 */\n              var fakebs8 = {\n                pos: blob.l - length,\n                name: cur_sheet\n              };\n              Directory[fakebs8.pos] = fakebs8;\n              opts.snames.push(cur_sheet);\n            } else cur_sheet = (Directory[s] || {\n              name: \"\"\n            }).name;\n            if (val.dt == 0x20) out[\"!type\"] = \"chart\";\n            if (val.dt == 0x40) out[\"!type\"] = \"macro\";\n            merges = [];\n            objects = [];\n            opts.arrayf = arrayf = [];\n            colinfo = [];\n            rowinfo = [];\n            seencol = false;\n            wsprops = {\n              Hidden: (Directory[s] || {\n                hs: 0\n              }).hs,\n              name: cur_sheet\n            };\n          }\n          break;\n        case 0x0203 /* Number */:\n        case 0x0003 /* BIFF2NUM */:\n        case 0x0002 /* BIFF2INT */:\n          {\n            if (out[\"!type\"] == \"chart\") if (options.dense ? (out[val.r] || [])[val.c] : out[encode_cell({\n              c: val.c,\n              r: val.r\n            })]) ++val.c;\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe] || {},\n              v: val.val,\n              t: 'n'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x0005:\n        case 0x0205 /* BoolErr */:\n          {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              v: val.val,\n              t: val.t\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x027e /* RK */:\n          {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              v: val.rknum,\n              t: 'n'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x00bd /* MulRk */:\n          {\n            for (var j = val.c; j <= val.C; ++j) {\n              var ixfe = val.rkrec[j - val.c][0];\n              temp_val = {\n                ixfe: ixfe,\n                XF: XFs[ixfe],\n                v: val.rkrec[j - val.c][1],\n                t: 'n'\n              } /*:any*/;\n              if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({\n                c: j,\n                r: val.r\n              }, temp_val, options);\n            }\n          }\n          break;\n        case 0x0006:\n        case 0x0206:\n        case 0x0406 /* Formula */:\n          {\n            if (val.val == 'String') {\n              last_formula = val;\n              break;\n            }\n            temp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n            temp_val.XF = XFs[temp_val.ixfe];\n            if (options.cellFormula) {\n              var _f = val.formula;\n              if (_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n                var _fr = _f[0][0][1][0],\n                  _fc = _f[0][0][1][1];\n                var _fe = encode_cell({\n                  r: _fr,\n                  c: _fc\n                });\n                if (sharedf[_fe]) temp_val.f = \"\" + stringify_formula(val.formula, range, val.cell, supbooks, opts);else temp_val.F = ((options.dense ? (out[_fr] || [])[_fc] : out[_fe]) || {}).F;\n              } else temp_val.f = \"\" + stringify_formula(val.formula, range, val.cell, supbooks, opts);\n            }\n            if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell(val.cell, temp_val, options);\n            last_formula = val;\n          }\n          break;\n        case 0x0007:\n        case 0x0207 /* String */:\n          {\n            if (last_formula) {\n              /* technically always true */\n              last_formula.val = val;\n              temp_val = make_cell(val, last_formula.cell.ixfe, 's');\n              temp_val.XF = XFs[temp_val.ixfe];\n              if (options.cellFormula) {\n                temp_val.f = \"\" + stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n              }\n              if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell(last_formula.cell, temp_val, options);\n              last_formula = null;\n            } else throw new Error(\"String record expects Formula\");\n          }\n          break;\n        case 0x0021:\n        case 0x0221 /* Array */:\n          {\n            arrayf.push(val);\n            var _arraystart = encode_cell(val[0].s);\n            cc = options.dense ? (out[val[0].s.r] || [])[val[0].s.c] : out[_arraystart];\n            if (options.cellFormula && cc) {\n              if (!last_formula) break; /* technically unreachable */\n              if (!_arraystart || !cc) break;\n              cc.f = \"\" + stringify_formula(val[1], range, val[0], supbooks, opts);\n              cc.F = encode_range(val[0]);\n            }\n          }\n          break;\n        case 0x04bc /* ShrFmla */:\n          {\n            if (!options.cellFormula) break;\n            if (last_cell) {\n              /* TODO: capture range */\n              if (!last_formula) break; /* technically unreachable */\n              sharedf[encode_cell(last_formula.cell)] = val[0];\n              cc = options.dense ? (out[last_formula.cell.r] || [])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n              (cc || {}).f = \"\" + stringify_formula(val[0], range, lastcell, supbooks, opts);\n            }\n          }\n          break;\n        case 0x00fd /* LabelSst */:\n          temp_val = make_cell(sst[val.isst].t, val.ixfe, 's');\n          if (sst[val.isst].h) temp_val.h = sst[val.isst].h;\n          temp_val.XF = XFs[temp_val.ixfe];\n          if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n          safe_format_xf(temp_val, options, wb.opts.Date1904);\n          addcell({\n            c: val.c,\n            r: val.r\n          }, temp_val, options);\n          break;\n        case 0x0201 /* Blank */:\n          if (options.sheetStubs) {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              t: 'z'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x00be /* MulBlank */:\n          if (options.sheetStubs) {\n            for (var _j = val.c; _j <= val.C; ++_j) {\n              var _ixfe = val.ixfe[_j - val.c];\n              temp_val = {\n                ixfe: _ixfe,\n                XF: XFs[_ixfe],\n                t: 'z'\n              } /*:any*/;\n              if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({\n                c: _j,\n                r: val.r\n              }, temp_val, options);\n            }\n          }\n          break;\n        case 0x00d6 /* RString */:\n        case 0x0204 /* Label */:\n        case 0x0004 /* BIFF2STR */:\n          temp_val = make_cell(val.val, val.ixfe, 's');\n          temp_val.XF = XFs[temp_val.ixfe];\n          if (BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n          safe_format_xf(temp_val, options, wb.opts.Date1904);\n          addcell({\n            c: val.c,\n            r: val.r\n          }, temp_val, options);\n          break;\n        case 0x0000:\n        case 0x0200 /* Dimensions */:\n          {\n            if (file_depth === 1) range = val; /* TODO: stack */\n          }\n          break;\n        case 0x00fc /* SST */:\n          {\n            sst = val;\n          }\n          break;\n        case 0x041e /* Format */:\n          {\n            /* val = [id, fmt] */\n            if (opts.biff == 4) {\n              BIFF2FmtTable[BIFF2Fmt++] = val[1];\n              for (var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if (table_fmt[b4idx] == val[1]) break;\n              if (b4idx >= 163) SSF_load(val[1], BIFF2Fmt + 163);\n            } else SSF_load(val[1], val[0]);\n          }\n          break;\n        case 0x001e /* BIFF2FORMAT */:\n          {\n            BIFF2FmtTable[BIFF2Fmt++] = val;\n            for (var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if (table_fmt[b2idx] == val) break;\n            if (b2idx >= 163) SSF_load(val, BIFF2Fmt + 163);\n          }\n          break;\n        case 0x00e5 /* MergeCells */:\n          merges = merges.concat(val);\n          break;\n        case 0x005d /* Obj */:\n          objects[val.cmo[0]] = opts.lastobj = val;\n          break;\n        case 0x01b6 /* TxO */:\n          opts.lastobj.TxO = val;\n          break;\n        case 0x007f /* ImData */:\n          opts.lastobj.ImData = val;\n          break;\n        case 0x01b8 /* HLink */:\n          {\n            for (rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR) for (rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n              cc = options.dense ? (out[rngR] || [])[rngC] : out[encode_cell({\n                c: rngC,\n                r: rngR\n              })];\n              if (cc) cc.l = val[1];\n            }\n          }\n          break;\n        case 0x0800 /* HLinkTooltip */:\n          {\n            for (rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR) for (rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n              cc = options.dense ? (out[rngR] || [])[rngC] : out[encode_cell({\n                c: rngC,\n                r: rngR\n              })];\n              if (cc && cc.l) cc.l.Tooltip = val[1];\n            }\n          }\n          break;\n        case 0x001c /* Note */:\n          {\n            if (opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\n            cc = options.dense ? (out[val[0].r] || [])[val[0].c] : out[encode_cell(val[0])];\n            var noteobj = objects[val[2]];\n            if (!cc) {\n              if (options.dense) {\n                if (!out[val[0].r]) out[val[0].r] = [];\n                cc = out[val[0].r][val[0].c] = {\n                  t: \"z\"\n                } /*:any*/;\n              } else {\n                cc = out[encode_cell(val[0])] = {\n                  t: \"z\"\n                } /*:any*/;\n              }\n              range.e.r = Math.max(range.e.r, val[0].r);\n              range.s.r = Math.min(range.s.r, val[0].r);\n              range.e.c = Math.max(range.e.c, val[0].c);\n              range.s.c = Math.min(range.s.c, val[0].c);\n            }\n            if (!cc.c) cc.c = [];\n            cmnt = {\n              a: val[1],\n              t: noteobj.TxO.t\n            };\n            cc.c.push(cmnt);\n          }\n          break;\n        case 0x087d /* XFExt */:\n          update_xfext(XFs[val.ixfe], val.ext);\n          break;\n        case 0x007d /* ColInfo */:\n          {\n            if (!opts.cellStyles) break;\n            while (val.e >= val.s) {\n              colinfo[val.e--] = {\n                width: val.w / 256,\n                level: val.level || 0,\n                hidden: !!(val.flags & 1)\n              };\n              if (!seencol) {\n                seencol = true;\n                find_mdw_colw(val.w / 256);\n              }\n              process_col(colinfo[val.e + 1]);\n            }\n          }\n          break;\n        case 0x0208 /* Row */:\n          {\n            var rowobj = {};\n            if (val.level != null) {\n              rowinfo[val.r] = rowobj;\n              rowobj.level = val.level;\n            }\n            if (val.hidden) {\n              rowinfo[val.r] = rowobj;\n              rowobj.hidden = true;\n            }\n            if (val.hpt) {\n              rowinfo[val.r] = rowobj;\n              rowobj.hpt = val.hpt;\n              rowobj.hpx = pt2px(val.hpt);\n            }\n          }\n          break;\n        case 0x0026 /* LeftMargin */:\n        case 0x0027 /* RightMargin */:\n        case 0x0028 /* TopMargin */:\n        case 0x0029 /* BottomMargin */:\n          if (!out['!margins']) default_margins(out['!margins'] = {});\n          out['!margins'][{\n            0x26: \"left\",\n            0x27: \"right\",\n            0x28: \"top\",\n            0x29: \"bottom\"\n          }[RecordType]] = val;\n          break;\n        case 0x00a1 /* Setup */:\n          // TODO\n          if (!out['!margins']) default_margins(out['!margins'] = {});\n          out['!margins'].header = val.header;\n          out['!margins'].footer = val.footer;\n          break;\n        case 0x023e /* Window2 */:\n          // TODO\n          // $FlowIgnore\n          if (val.RTL) Workbook.Views[0].RTL = true;\n          break;\n        case 0x0092 /* Palette */:\n          palette = val;\n          break;\n        case 0x0896 /* Theme */:\n          themes = val;\n          break;\n        case 0x008c /* Country */:\n          country = val;\n          break;\n        case 0x01ba /* CodeName */:\n          {\n            /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n            if (!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";else wsprops.CodeName = val || wsprops.name;\n          }\n          break;\n      }\n    } else {\n      if (!R) console.error(\"Missing Info for XLS Record 0x\" + RecordType.toString(16));\n      blob.l += length;\n    }\n  }\n  wb.SheetNames = keys(Directory).sort(function (a, b) {\n    return Number(a) - Number(b);\n  }).map(function (x) {\n    return Directory[x].name;\n  });\n  if (!options.bookSheets) wb.Sheets = Sheets;\n  if (!wb.SheetNames.length && Preamble[\"!ref\"]) {\n    wb.SheetNames.push(\"Sheet1\");\n    /*jshint -W069 */\n    if (wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n    /*jshint +W069 */\n  } else wb.Preamble = Preamble;\n  if (wb.Sheets) FilterDatabases.forEach(function (r, i) {\n    wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r;\n  });\n  wb.Strings = sst;\n  wb.SSF = dup(table_fmt);\n  if (opts.enc) wb.Encryption = opts.enc;\n  if (themes) wb.Themes = themes;\n  wb.Metadata = {};\n  if (country !== undefined) wb.Metadata.Country = country;\n  if (supbooks.names.length > 0) Workbook.Names = supbooks.names;\n  wb.Workbook = Workbook;\n  return wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n  SI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n  DSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n  UDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb /*:CFBContainer*/, props, o) {\n  /* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n  var DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n  if (DSI && DSI.size > 0) try {\n    var DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n    for (var d in DocSummary) props[d] = DocSummary[d];\n  } catch (e) {\n    if (o.WTF) throw e; /* empty */\n  }\n\n  /* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n  var SI = CFB.find(cfb, '/!SummaryInformation');\n  if (SI && SI.size > 0) try {\n    var Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n    for (var s in Summary) if (props[s] == null) props[s] = Summary[s];\n  } catch (e) {\n    if (o.WTF) throw e; /* empty */\n  }\n  if (props.HeadingPairs && props.TitlesOfParts) {\n    load_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n    delete props.HeadingPairs;\n    delete props.TitlesOfParts;\n  }\n}\nfunction write_xls_props(wb /*:Workbook*/, cfb /*:CFBContainer*/) {\n  var DSEntries = [],\n    SEntries = [],\n    CEntries = [];\n  var i = 0,\n    Keys;\n  var DocSummaryRE /*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\n  var SummaryRE /*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n  if (wb.Props) {\n    Keys = keys(wb.Props);\n    // $FlowIgnore\n    for (i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n  }\n  if (wb.Custprops) {\n    Keys = keys(wb.Custprops);\n    // $FlowIgnore\n    for (i = 0; i < Keys.length; ++i) if (!Object.prototype.hasOwnProperty.call(wb.Props || {}, Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n  }\n  var CEntries2 = [];\n  for (i = 0; i < CEntries.length; ++i) {\n    if (XLSPSSkip.indexOf(CEntries[i][0]) > -1 || PseudoPropsPairs.indexOf(CEntries[i][0]) > -1) continue;\n    if (CEntries[i][1] == null) continue;\n    CEntries2.push(CEntries[i]);\n  }\n  if (SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n  if (DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\nfunction parse_xlscfb(cfb /*:any*/, options /*:?ParseOpts*/) /*:Workbook*/{\n  if (!options) options = {};\n  fix_read_opts(options);\n  reset_cp();\n  if (options.codepage) set_ansi(options.codepage);\n  var CompObj /*:?CFBEntry*/, WB /*:?any*/;\n  if (cfb.FullPaths) {\n    if (CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n    CompObj = CFB.find(cfb, '!CompObj');\n    WB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n  } else {\n    switch (options.type) {\n      case 'base64':\n        cfb = s2a(Base64_decode(cfb));\n        break;\n      case 'binary':\n        cfb = s2a(cfb);\n        break;\n      case 'buffer':\n        break;\n      case 'array':\n        if (!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb);\n        break;\n    }\n    prep_blob(cfb, 0);\n    WB = {\n      content: cfb\n    } /*:any*/;\n  }\n  var /*::CompObjP, */WorkbookP /*:: :Workbook = XLSX.utils.book_new(); */;\n  var _data /*:?any*/;\n  if (CompObj) /*::CompObjP = */parse_compobj(CompObj);\n  if (options.bookProps && !options.bookSheets) WorkbookP = {} /*:any*/;else /*:: if(cfb instanceof CFBContainer) */{\n      var T = has_buf ? 'buffer' : 'array';\n      if (WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n      /* Quattro Pro 7-8 */else if ((_data = CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      /* Quattro Pro 9 */else if ((_data = CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      /* Works 4 for Mac */else if ((_data = CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");else throw new Error(\"Cannot find Workbook stream\");\n      if (options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n    }\n  var props = {};\n  if (cfb.FullPaths) parse_xls_props( /*::((*/cfb /*:: :any):CFBContainer)*/, props, options);\n  WorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\n  if (options.bookFiles) WorkbookP.cfb = cfb;\n  /*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\n  return WorkbookP;\n}\nfunction write_xlscfb(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:CFBContainer*/{\n  var o = opts || {};\n  var cfb = CFB.utils.cfb_new({\n    root: \"R\"\n  });\n  var wbpath = \"/Workbook\";\n  switch (o.bookType || \"xls\") {\n    case \"xls\":\n      o.bookType = \"biff8\";\n    /* falls through */\n    case \"xla\":\n      if (!o.bookType) o.bookType = \"xla\";\n    /* falls through */\n    case \"biff8\":\n      wbpath = \"/Workbook\";\n      o.biff = 8;\n      break;\n    case \"biff5\":\n      wbpath = \"/Book\";\n      o.biff = 5;\n      break;\n    default:\n      throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n  }\n  CFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n  if (o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n  // TODO: SI, DSI, CO\n  if (o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {\n    type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"\n  }));\n  return cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n  /*::[*/0x0000 /*::]*/: {\n    /* n:\"BrtRowHdr\", */f: parse_BrtRowHdr\n  },\n  /*::[*/0x0001 /*::]*/: {\n    /* n:\"BrtCellBlank\", */f: parse_BrtCellBlank\n  },\n  /*::[*/0x0002 /*::]*/: {\n    /* n:\"BrtCellRk\", */f: parse_BrtCellRk\n  },\n  /*::[*/0x0003 /*::]*/: {\n    /* n:\"BrtCellError\", */f: parse_BrtCellError\n  },\n  /*::[*/0x0004 /*::]*/: {\n    /* n:\"BrtCellBool\", */f: parse_BrtCellBool\n  },\n  /*::[*/0x0005 /*::]*/: {\n    /* n:\"BrtCellReal\", */f: parse_BrtCellReal\n  },\n  /*::[*/0x0006 /*::]*/: {\n    /* n:\"BrtCellSt\", */f: parse_BrtCellSt\n  },\n  /*::[*/0x0007 /*::]*/: {\n    /* n:\"BrtCellIsst\", */f: parse_BrtCellIsst\n  },\n  /*::[*/0x0008 /*::]*/: {\n    /* n:\"BrtFmlaString\", */f: parse_BrtFmlaString\n  },\n  /*::[*/0x0009 /*::]*/: {\n    /* n:\"BrtFmlaNum\", */f: parse_BrtFmlaNum\n  },\n  /*::[*/0x000A /*::]*/: {\n    /* n:\"BrtFmlaBool\", */f: parse_BrtFmlaBool\n  },\n  /*::[*/0x000B /*::]*/: {\n    /* n:\"BrtFmlaError\", */f: parse_BrtFmlaError\n  },\n  /*::[*/0x000C /*::]*/: {\n    /* n:\"BrtShortBlank\", */f: parse_BrtShortBlank\n  },\n  /*::[*/0x000D /*::]*/: {\n    /* n:\"BrtShortRk\", */f: parse_BrtShortRk\n  },\n  /*::[*/0x000E /*::]*/: {\n    /* n:\"BrtShortError\", */f: parse_BrtShortError\n  },\n  /*::[*/0x000F /*::]*/: {\n    /* n:\"BrtShortBool\", */f: parse_BrtShortBool\n  },\n  /*::[*/0x0010 /*::]*/: {\n    /* n:\"BrtShortReal\", */f: parse_BrtShortReal\n  },\n  /*::[*/0x0011 /*::]*/: {\n    /* n:\"BrtShortSt\", */f: parse_BrtShortSt\n  },\n  /*::[*/0x0012 /*::]*/: {\n    /* n:\"BrtShortIsst\", */f: parse_BrtShortIsst\n  },\n  /*::[*/0x0013 /*::]*/: {\n    /* n:\"BrtSSTItem\", */f: parse_RichStr\n  },\n  /*::[*/0x0014 /*::]*/: {/* n:\"BrtPCDIMissing\" */},\n  /*::[*/0x0015 /*::]*/: {/* n:\"BrtPCDINumber\" */},\n  /*::[*/0x0016 /*::]*/: {/* n:\"BrtPCDIBoolean\" */},\n  /*::[*/0x0017 /*::]*/: {/* n:\"BrtPCDIError\" */},\n  /*::[*/0x0018 /*::]*/: {/* n:\"BrtPCDIString\" */},\n  /*::[*/0x0019 /*::]*/: {/* n:\"BrtPCDIDatetime\" */},\n  /*::[*/0x001A /*::]*/: {/* n:\"BrtPCDIIndex\" */},\n  /*::[*/0x001B /*::]*/: {/* n:\"BrtPCDIAMissing\" */},\n  /*::[*/0x001C /*::]*/: {/* n:\"BrtPCDIANumber\" */},\n  /*::[*/0x001D /*::]*/: {/* n:\"BrtPCDIABoolean\" */},\n  /*::[*/0x001E /*::]*/: {/* n:\"BrtPCDIAError\" */},\n  /*::[*/0x001F /*::]*/: {/* n:\"BrtPCDIAString\" */},\n  /*::[*/0x0020 /*::]*/: {/* n:\"BrtPCDIADatetime\" */},\n  /*::[*/0x0021 /*::]*/: {/* n:\"BrtPCRRecord\" */},\n  /*::[*/0x0022 /*::]*/: {/* n:\"BrtPCRRecordDt\" */},\n  /*::[*/0x0023 /*::]*/: {\n    /* n:\"BrtFRTBegin\", */T: 1\n  },\n  /*::[*/0x0024 /*::]*/: {\n    /* n:\"BrtFRTEnd\", */T: -1\n  },\n  /*::[*/0x0025 /*::]*/: {\n    /* n:\"BrtACBegin\", */T: 1\n  },\n  /*::[*/0x0026 /*::]*/: {\n    /* n:\"BrtACEnd\", */T: -1\n  },\n  /*::[*/0x0027 /*::]*/: {\n    /* n:\"BrtName\", */f: parse_BrtName\n  },\n  /*::[*/0x0028 /*::]*/: {/* n:\"BrtIndexRowBlock\" */},\n  /*::[*/0x002A /*::]*/: {/* n:\"BrtIndexBlock\" */},\n  /*::[*/0x002B /*::]*/: {\n    /* n:\"BrtFont\", */f: parse_BrtFont\n  },\n  /*::[*/0x002C /*::]*/: {\n    /* n:\"BrtFmt\", */f: parse_BrtFmt\n  },\n  /*::[*/0x002D /*::]*/: {\n    /* n:\"BrtFill\", */f: parse_BrtFill\n  },\n  /*::[*/0x002E /*::]*/: {\n    /* n:\"BrtBorder\", */f: parse_BrtBorder\n  },\n  /*::[*/0x002F /*::]*/: {\n    /* n:\"BrtXF\", */f: parse_BrtXF\n  },\n  /*::[*/0x0030 /*::]*/: {/* n:\"BrtStyle\" */},\n  /*::[*/0x0031 /*::]*/: {\n    /* n:\"BrtCellMeta\", */f: parse_Int32LE\n  },\n  /*::[*/0x0032 /*::]*/: {/* n:\"BrtValueMeta\" */},\n  /*::[*/0x0033 /*::]*/: {\n    /* n:\"BrtMdb\" */f: parse_BrtMdb\n  },\n  /*::[*/0x0034 /*::]*/: {\n    /* n:\"BrtBeginFmd\", */T: 1\n  },\n  /*::[*/0x0035 /*::]*/: {\n    /* n:\"BrtEndFmd\", */T: -1\n  },\n  /*::[*/0x0036 /*::]*/: {\n    /* n:\"BrtBeginMdx\", */T: 1\n  },\n  /*::[*/0x0037 /*::]*/: {\n    /* n:\"BrtEndMdx\", */T: -1\n  },\n  /*::[*/0x0038 /*::]*/: {\n    /* n:\"BrtBeginMdxTuple\", */T: 1\n  },\n  /*::[*/0x0039 /*::]*/: {\n    /* n:\"BrtEndMdxTuple\", */T: -1\n  },\n  /*::[*/0x003A /*::]*/: {/* n:\"BrtMdxMbrIstr\" */},\n  /*::[*/0x003B /*::]*/: {/* n:\"BrtStr\" */},\n  /*::[*/0x003C /*::]*/: {\n    /* n:\"BrtColInfo\", */f: parse_ColInfo\n  },\n  /*::[*/0x003E /*::]*/: {\n    /* n:\"BrtCellRString\", */f: parse_BrtCellRString\n  },\n  /*::[*/0x003F /*::]*/: {\n    /* n:\"BrtCalcChainItem$\", */f: parse_BrtCalcChainItem$\n  },\n  /*::[*/0x0040 /*::]*/: {\n    /* n:\"BrtDVal\", */f: parse_BrtDVal\n  },\n  /*::[*/0x0041 /*::]*/: {/* n:\"BrtSxvcellNum\" */},\n  /*::[*/0x0042 /*::]*/: {/* n:\"BrtSxvcellStr\" */},\n  /*::[*/0x0043 /*::]*/: {/* n:\"BrtSxvcellBool\" */},\n  /*::[*/0x0044 /*::]*/: {/* n:\"BrtSxvcellErr\" */},\n  /*::[*/0x0045 /*::]*/: {/* n:\"BrtSxvcellDate\" */},\n  /*::[*/0x0046 /*::]*/: {/* n:\"BrtSxvcellNil\" */},\n  /*::[*/0x0080 /*::]*/: {/* n:\"BrtFileVersion\" */},\n  /*::[*/0x0081 /*::]*/: {\n    /* n:\"BrtBeginSheet\", */T: 1\n  },\n  /*::[*/0x0082 /*::]*/: {\n    /* n:\"BrtEndSheet\", */T: -1\n  },\n  /*::[*/0x0083 /*::]*/: {\n    /* n:\"BrtBeginBook\", */T: 1,\n    f: parsenoop,\n    p: 0\n  },\n  /*::[*/0x0084 /*::]*/: {\n    /* n:\"BrtEndBook\", */T: -1\n  },\n  /*::[*/0x0085 /*::]*/: {\n    /* n:\"BrtBeginWsViews\", */T: 1\n  },\n  /*::[*/0x0086 /*::]*/: {\n    /* n:\"BrtEndWsViews\", */T: -1\n  },\n  /*::[*/0x0087 /*::]*/: {\n    /* n:\"BrtBeginBookViews\", */T: 1\n  },\n  /*::[*/0x0088 /*::]*/: {\n    /* n:\"BrtEndBookViews\", */T: -1\n  },\n  /*::[*/0x0089 /*::]*/: {\n    /* n:\"BrtBeginWsView\", */T: 1,\n    f: parse_BrtBeginWsView\n  },\n  /*::[*/0x008A /*::]*/: {\n    /* n:\"BrtEndWsView\", */T: -1\n  },\n  /*::[*/0x008B /*::]*/: {\n    /* n:\"BrtBeginCsViews\", */T: 1\n  },\n  /*::[*/0x008C /*::]*/: {\n    /* n:\"BrtEndCsViews\", */T: -1\n  },\n  /*::[*/0x008D /*::]*/: {\n    /* n:\"BrtBeginCsView\", */T: 1\n  },\n  /*::[*/0x008E /*::]*/: {\n    /* n:\"BrtEndCsView\", */T: -1\n  },\n  /*::[*/0x008F /*::]*/: {\n    /* n:\"BrtBeginBundleShs\", */T: 1\n  },\n  /*::[*/0x0090 /*::]*/: {\n    /* n:\"BrtEndBundleShs\", */T: -1\n  },\n  /*::[*/0x0091 /*::]*/: {\n    /* n:\"BrtBeginSheetData\", */T: 1\n  },\n  /*::[*/0x0092 /*::]*/: {\n    /* n:\"BrtEndSheetData\", */T: -1\n  },\n  /*::[*/0x0093 /*::]*/: {\n    /* n:\"BrtWsProp\", */f: parse_BrtWsProp\n  },\n  /*::[*/0x0094 /*::]*/: {\n    /* n:\"BrtWsDim\", */f: parse_BrtWsDim,\n    p: 16\n  },\n  /*::[*/0x0097 /*::]*/: {\n    /* n:\"BrtPane\", */f: parse_BrtPane\n  },\n  /*::[*/0x0098 /*::]*/: {/* n:\"BrtSel\" */},\n  /*::[*/0x0099 /*::]*/: {\n    /* n:\"BrtWbProp\", */f: parse_BrtWbProp\n  },\n  /*::[*/0x009A /*::]*/: {/* n:\"BrtWbFactoid\" */},\n  /*::[*/0x009B /*::]*/: {/* n:\"BrtFileRecover\" */},\n  /*::[*/0x009C /*::]*/: {\n    /* n:\"BrtBundleSh\", */f: parse_BrtBundleSh\n  },\n  /*::[*/0x009D /*::]*/: {/* n:\"BrtCalcProp\" */},\n  /*::[*/0x009E /*::]*/: {/* n:\"BrtBookView\" */},\n  /*::[*/0x009F /*::]*/: {\n    /* n:\"BrtBeginSst\", */T: 1,\n    f: parse_BrtBeginSst\n  },\n  /*::[*/0x00A0 /*::]*/: {\n    /* n:\"BrtEndSst\", */T: -1\n  },\n  /*::[*/0x00A1 /*::]*/: {\n    /* n:\"BrtBeginAFilter\", */T: 1,\n    f: parse_UncheckedRfX\n  },\n  /*::[*/0x00A2 /*::]*/: {\n    /* n:\"BrtEndAFilter\", */T: -1\n  },\n  /*::[*/0x00A3 /*::]*/: {\n    /* n:\"BrtBeginFilterColumn\", */T: 1\n  },\n  /*::[*/0x00A4 /*::]*/: {\n    /* n:\"BrtEndFilterColumn\", */T: -1\n  },\n  /*::[*/0x00A5 /*::]*/: {\n    /* n:\"BrtBeginFilters\", */T: 1\n  },\n  /*::[*/0x00A6 /*::]*/: {\n    /* n:\"BrtEndFilters\", */T: -1\n  },\n  /*::[*/0x00A7 /*::]*/: {/* n:\"BrtFilter\" */},\n  /*::[*/0x00A8 /*::]*/: {/* n:\"BrtColorFilter\" */},\n  /*::[*/0x00A9 /*::]*/: {/* n:\"BrtIconFilter\" */},\n  /*::[*/0x00AA /*::]*/: {/* n:\"BrtTop10Filter\" */},\n  /*::[*/0x00AB /*::]*/: {/* n:\"BrtDynamicFilter\" */},\n  /*::[*/0x00AC /*::]*/: {\n    /* n:\"BrtBeginCustomFilters\", */T: 1\n  },\n  /*::[*/0x00AD /*::]*/: {\n    /* n:\"BrtEndCustomFilters\", */T: -1\n  },\n  /*::[*/0x00AE /*::]*/: {/* n:\"BrtCustomFilter\" */},\n  /*::[*/0x00AF /*::]*/: {/* n:\"BrtAFilterDateGroupItem\" */},\n  /*::[*/0x00B0 /*::]*/: {\n    /* n:\"BrtMergeCell\", */f: parse_BrtMergeCell\n  },\n  /*::[*/0x00B1 /*::]*/: {\n    /* n:\"BrtBeginMergeCells\", */T: 1\n  },\n  /*::[*/0x00B2 /*::]*/: {\n    /* n:\"BrtEndMergeCells\", */T: -1\n  },\n  /*::[*/0x00B3 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheDef\", */T: 1\n  },\n  /*::[*/0x00B4 /*::]*/: {\n    /* n:\"BrtEndPivotCacheDef\", */T: -1\n  },\n  /*::[*/0x00B5 /*::]*/: {\n    /* n:\"BrtBeginPCDFields\", */T: 1\n  },\n  /*::[*/0x00B6 /*::]*/: {\n    /* n:\"BrtEndPCDFields\", */T: -1\n  },\n  /*::[*/0x00B7 /*::]*/: {\n    /* n:\"BrtBeginPCDField\", */T: 1\n  },\n  /*::[*/0x00B8 /*::]*/: {\n    /* n:\"BrtEndPCDField\", */T: -1\n  },\n  /*::[*/0x00B9 /*::]*/: {\n    /* n:\"BrtBeginPCDSource\", */T: 1\n  },\n  /*::[*/0x00BA /*::]*/: {\n    /* n:\"BrtEndPCDSource\", */T: -1\n  },\n  /*::[*/0x00BB /*::]*/: {\n    /* n:\"BrtBeginPCDSRange\", */T: 1\n  },\n  /*::[*/0x00BC /*::]*/: {\n    /* n:\"BrtEndPCDSRange\", */T: -1\n  },\n  /*::[*/0x00BD /*::]*/: {\n    /* n:\"BrtBeginPCDFAtbl\", */T: 1\n  },\n  /*::[*/0x00BE /*::]*/: {\n    /* n:\"BrtEndPCDFAtbl\", */T: -1\n  },\n  /*::[*/0x00BF /*::]*/: {\n    /* n:\"BrtBeginPCDIRun\", */T: 1\n  },\n  /*::[*/0x00C0 /*::]*/: {\n    /* n:\"BrtEndPCDIRun\", */T: -1\n  },\n  /*::[*/0x00C1 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheRecords\", */T: 1\n  },\n  /*::[*/0x00C2 /*::]*/: {\n    /* n:\"BrtEndPivotCacheRecords\", */T: -1\n  },\n  /*::[*/0x00C3 /*::]*/: {\n    /* n:\"BrtBeginPCDHierarchies\", */T: 1\n  },\n  /*::[*/0x00C4 /*::]*/: {\n    /* n:\"BrtEndPCDHierarchies\", */T: -1\n  },\n  /*::[*/0x00C5 /*::]*/: {\n    /* n:\"BrtBeginPCDHierarchy\", */T: 1\n  },\n  /*::[*/0x00C6 /*::]*/: {\n    /* n:\"BrtEndPCDHierarchy\", */T: -1\n  },\n  /*::[*/0x00C7 /*::]*/: {\n    /* n:\"BrtBeginPCDHFieldsUsage\", */T: 1\n  },\n  /*::[*/0x00C8 /*::]*/: {\n    /* n:\"BrtEndPCDHFieldsUsage\", */T: -1\n  },\n  /*::[*/0x00C9 /*::]*/: {\n    /* n:\"BrtBeginExtConnection\", */T: 1\n  },\n  /*::[*/0x00CA /*::]*/: {\n    /* n:\"BrtEndExtConnection\", */T: -1\n  },\n  /*::[*/0x00CB /*::]*/: {\n    /* n:\"BrtBeginECDbProps\", */T: 1\n  },\n  /*::[*/0x00CC /*::]*/: {\n    /* n:\"BrtEndECDbProps\", */T: -1\n  },\n  /*::[*/0x00CD /*::]*/: {\n    /* n:\"BrtBeginECOlapProps\", */T: 1\n  },\n  /*::[*/0x00CE /*::]*/: {\n    /* n:\"BrtEndECOlapProps\", */T: -1\n  },\n  /*::[*/0x00CF /*::]*/: {\n    /* n:\"BrtBeginPCDSConsol\", */T: 1\n  },\n  /*::[*/0x00D0 /*::]*/: {\n    /* n:\"BrtEndPCDSConsol\", */T: -1\n  },\n  /*::[*/0x00D1 /*::]*/: {\n    /* n:\"BrtBeginPCDSCPages\", */T: 1\n  },\n  /*::[*/0x00D2 /*::]*/: {\n    /* n:\"BrtEndPCDSCPages\", */T: -1\n  },\n  /*::[*/0x00D3 /*::]*/: {\n    /* n:\"BrtBeginPCDSCPage\", */T: 1\n  },\n  /*::[*/0x00D4 /*::]*/: {\n    /* n:\"BrtEndPCDSCPage\", */T: -1\n  },\n  /*::[*/0x00D5 /*::]*/: {\n    /* n:\"BrtBeginPCDSCPItem\", */T: 1\n  },\n  /*::[*/0x00D6 /*::]*/: {\n    /* n:\"BrtEndPCDSCPItem\", */T: -1\n  },\n  /*::[*/0x00D7 /*::]*/: {\n    /* n:\"BrtBeginPCDSCSets\", */T: 1\n  },\n  /*::[*/0x00D8 /*::]*/: {\n    /* n:\"BrtEndPCDSCSets\", */T: -1\n  },\n  /*::[*/0x00D9 /*::]*/: {\n    /* n:\"BrtBeginPCDSCSet\", */T: 1\n  },\n  /*::[*/0x00DA /*::]*/: {\n    /* n:\"BrtEndPCDSCSet\", */T: -1\n  },\n  /*::[*/0x00DB /*::]*/: {\n    /* n:\"BrtBeginPCDFGroup\", */T: 1\n  },\n  /*::[*/0x00DC /*::]*/: {\n    /* n:\"BrtEndPCDFGroup\", */T: -1\n  },\n  /*::[*/0x00DD /*::]*/: {\n    /* n:\"BrtBeginPCDFGItems\", */T: 1\n  },\n  /*::[*/0x00DE /*::]*/: {\n    /* n:\"BrtEndPCDFGItems\", */T: -1\n  },\n  /*::[*/0x00DF /*::]*/: {\n    /* n:\"BrtBeginPCDFGRange\", */T: 1\n  },\n  /*::[*/0x00E0 /*::]*/: {\n    /* n:\"BrtEndPCDFGRange\", */T: -1\n  },\n  /*::[*/0x00E1 /*::]*/: {\n    /* n:\"BrtBeginPCDFGDiscrete\", */T: 1\n  },\n  /*::[*/0x00E2 /*::]*/: {\n    /* n:\"BrtEndPCDFGDiscrete\", */T: -1\n  },\n  /*::[*/0x00E3 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTupleCache\", */T: 1\n  },\n  /*::[*/0x00E4 /*::]*/: {\n    /* n:\"BrtEndPCDSDTupleCache\", */T: -1\n  },\n  /*::[*/0x00E5 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEntries\", */T: 1\n  },\n  /*::[*/0x00E6 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCEntries\", */T: -1\n  },\n  /*::[*/0x00E7 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEMembers\", */T: 1\n  },\n  /*::[*/0x00E8 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCEMembers\", */T: -1\n  },\n  /*::[*/0x00E9 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEMember\", */T: 1\n  },\n  /*::[*/0x00EA /*::]*/: {\n    /* n:\"BrtEndPCDSDTCEMember\", */T: -1\n  },\n  /*::[*/0x00EB /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCQueries\", */T: 1\n  },\n  /*::[*/0x00EC /*::]*/: {\n    /* n:\"BrtEndPCDSDTCQueries\", */T: -1\n  },\n  /*::[*/0x00ED /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCQuery\", */T: 1\n  },\n  /*::[*/0x00EE /*::]*/: {\n    /* n:\"BrtEndPCDSDTCQuery\", */T: -1\n  },\n  /*::[*/0x00EF /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCSets\", */T: 1\n  },\n  /*::[*/0x00F0 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCSets\", */T: -1\n  },\n  /*::[*/0x00F1 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCSet\", */T: 1\n  },\n  /*::[*/0x00F2 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCSet\", */T: -1\n  },\n  /*::[*/0x00F3 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcItems\", */T: 1\n  },\n  /*::[*/0x00F4 /*::]*/: {\n    /* n:\"BrtEndPCDCalcItems\", */T: -1\n  },\n  /*::[*/0x00F5 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcItem\", */T: 1\n  },\n  /*::[*/0x00F6 /*::]*/: {\n    /* n:\"BrtEndPCDCalcItem\", */T: -1\n  },\n  /*::[*/0x00F7 /*::]*/: {\n    /* n:\"BrtBeginPRule\", */T: 1\n  },\n  /*::[*/0x00F8 /*::]*/: {\n    /* n:\"BrtEndPRule\", */T: -1\n  },\n  /*::[*/0x00F9 /*::]*/: {\n    /* n:\"BrtBeginPRFilters\", */T: 1\n  },\n  /*::[*/0x00FA /*::]*/: {\n    /* n:\"BrtEndPRFilters\", */T: -1\n  },\n  /*::[*/0x00FB /*::]*/: {\n    /* n:\"BrtBeginPRFilter\", */T: 1\n  },\n  /*::[*/0x00FC /*::]*/: {\n    /* n:\"BrtEndPRFilter\", */T: -1\n  },\n  /*::[*/0x00FD /*::]*/: {\n    /* n:\"BrtBeginPNames\", */T: 1\n  },\n  /*::[*/0x00FE /*::]*/: {\n    /* n:\"BrtEndPNames\", */T: -1\n  },\n  /*::[*/0x00FF /*::]*/: {\n    /* n:\"BrtBeginPName\", */T: 1\n  },\n  /*::[*/0x0100 /*::]*/: {\n    /* n:\"BrtEndPName\", */T: -1\n  },\n  /*::[*/0x0101 /*::]*/: {\n    /* n:\"BrtBeginPNPairs\", */T: 1\n  },\n  /*::[*/0x0102 /*::]*/: {\n    /* n:\"BrtEndPNPairs\", */T: -1\n  },\n  /*::[*/0x0103 /*::]*/: {\n    /* n:\"BrtBeginPNPair\", */T: 1\n  },\n  /*::[*/0x0104 /*::]*/: {\n    /* n:\"BrtEndPNPair\", */T: -1\n  },\n  /*::[*/0x0105 /*::]*/: {\n    /* n:\"BrtBeginECWebProps\", */T: 1\n  },\n  /*::[*/0x0106 /*::]*/: {\n    /* n:\"BrtEndECWebProps\", */T: -1\n  },\n  /*::[*/0x0107 /*::]*/: {\n    /* n:\"BrtBeginEcWpTables\", */T: 1\n  },\n  /*::[*/0x0108 /*::]*/: {\n    /* n:\"BrtEndECWPTables\", */T: -1\n  },\n  /*::[*/0x0109 /*::]*/: {\n    /* n:\"BrtBeginECParams\", */T: 1\n  },\n  /*::[*/0x010A /*::]*/: {\n    /* n:\"BrtEndECParams\", */T: -1\n  },\n  /*::[*/0x010B /*::]*/: {\n    /* n:\"BrtBeginECParam\", */T: 1\n  },\n  /*::[*/0x010C /*::]*/: {\n    /* n:\"BrtEndECParam\", */T: -1\n  },\n  /*::[*/0x010D /*::]*/: {\n    /* n:\"BrtBeginPCDKPIs\", */T: 1\n  },\n  /*::[*/0x010E /*::]*/: {\n    /* n:\"BrtEndPCDKPIs\", */T: -1\n  },\n  /*::[*/0x010F /*::]*/: {\n    /* n:\"BrtBeginPCDKPI\", */T: 1\n  },\n  /*::[*/0x0110 /*::]*/: {\n    /* n:\"BrtEndPCDKPI\", */T: -1\n  },\n  /*::[*/0x0111 /*::]*/: {\n    /* n:\"BrtBeginDims\", */T: 1\n  },\n  /*::[*/0x0112 /*::]*/: {\n    /* n:\"BrtEndDims\", */T: -1\n  },\n  /*::[*/0x0113 /*::]*/: {\n    /* n:\"BrtBeginDim\", */T: 1\n  },\n  /*::[*/0x0114 /*::]*/: {\n    /* n:\"BrtEndDim\", */T: -1\n  },\n  /*::[*/0x0115 /*::]*/: {/* n:\"BrtIndexPartEnd\" */},\n  /*::[*/0x0116 /*::]*/: {\n    /* n:\"BrtBeginStyleSheet\", */T: 1\n  },\n  /*::[*/0x0117 /*::]*/: {\n    /* n:\"BrtEndStyleSheet\", */T: -1\n  },\n  /*::[*/0x0118 /*::]*/: {\n    /* n:\"BrtBeginSXView\", */T: 1\n  },\n  /*::[*/0x0119 /*::]*/: {\n    /* n:\"BrtEndSXVI\", */T: -1\n  },\n  /*::[*/0x011A /*::]*/: {\n    /* n:\"BrtBeginSXVI\", */T: 1\n  },\n  /*::[*/0x011B /*::]*/: {\n    /* n:\"BrtBeginSXVIs\", */T: 1\n  },\n  /*::[*/0x011C /*::]*/: {\n    /* n:\"BrtEndSXVIs\", */T: -1\n  },\n  /*::[*/0x011D /*::]*/: {\n    /* n:\"BrtBeginSXVD\", */T: 1\n  },\n  /*::[*/0x011E /*::]*/: {\n    /* n:\"BrtEndSXVD\", */T: -1\n  },\n  /*::[*/0x011F /*::]*/: {\n    /* n:\"BrtBeginSXVDs\", */T: 1\n  },\n  /*::[*/0x0120 /*::]*/: {\n    /* n:\"BrtEndSXVDs\", */T: -1\n  },\n  /*::[*/0x0121 /*::]*/: {\n    /* n:\"BrtBeginSXPI\", */T: 1\n  },\n  /*::[*/0x0122 /*::]*/: {\n    /* n:\"BrtEndSXPI\", */T: -1\n  },\n  /*::[*/0x0123 /*::]*/: {\n    /* n:\"BrtBeginSXPIs\", */T: 1\n  },\n  /*::[*/0x0124 /*::]*/: {\n    /* n:\"BrtEndSXPIs\", */T: -1\n  },\n  /*::[*/0x0125 /*::]*/: {\n    /* n:\"BrtBeginSXDI\", */T: 1\n  },\n  /*::[*/0x0126 /*::]*/: {\n    /* n:\"BrtEndSXDI\", */T: -1\n  },\n  /*::[*/0x0127 /*::]*/: {\n    /* n:\"BrtBeginSXDIs\", */T: 1\n  },\n  /*::[*/0x0128 /*::]*/: {\n    /* n:\"BrtEndSXDIs\", */T: -1\n  },\n  /*::[*/0x0129 /*::]*/: {\n    /* n:\"BrtBeginSXLI\", */T: 1\n  },\n  /*::[*/0x012A /*::]*/: {\n    /* n:\"BrtEndSXLI\", */T: -1\n  },\n  /*::[*/0x012B /*::]*/: {\n    /* n:\"BrtBeginSXLIRws\", */T: 1\n  },\n  /*::[*/0x012C /*::]*/: {\n    /* n:\"BrtEndSXLIRws\", */T: -1\n  },\n  /*::[*/0x012D /*::]*/: {\n    /* n:\"BrtBeginSXLICols\", */T: 1\n  },\n  /*::[*/0x012E /*::]*/: {\n    /* n:\"BrtEndSXLICols\", */T: -1\n  },\n  /*::[*/0x012F /*::]*/: {\n    /* n:\"BrtBeginSXFormat\", */T: 1\n  },\n  /*::[*/0x0130 /*::]*/: {\n    /* n:\"BrtEndSXFormat\", */T: -1\n  },\n  /*::[*/0x0131 /*::]*/: {\n    /* n:\"BrtBeginSXFormats\", */T: 1\n  },\n  /*::[*/0x0132 /*::]*/: {\n    /* n:\"BrtEndSxFormats\", */T: -1\n  },\n  /*::[*/0x0133 /*::]*/: {\n    /* n:\"BrtBeginSxSelect\", */T: 1\n  },\n  /*::[*/0x0134 /*::]*/: {\n    /* n:\"BrtEndSxSelect\", */T: -1\n  },\n  /*::[*/0x0135 /*::]*/: {\n    /* n:\"BrtBeginISXVDRws\", */T: 1\n  },\n  /*::[*/0x0136 /*::]*/: {\n    /* n:\"BrtEndISXVDRws\", */T: -1\n  },\n  /*::[*/0x0137 /*::]*/: {\n    /* n:\"BrtBeginISXVDCols\", */T: 1\n  },\n  /*::[*/0x0138 /*::]*/: {\n    /* n:\"BrtEndISXVDCols\", */T: -1\n  },\n  /*::[*/0x0139 /*::]*/: {\n    /* n:\"BrtEndSXLocation\", */T: -1\n  },\n  /*::[*/0x013A /*::]*/: {\n    /* n:\"BrtBeginSXLocation\", */T: 1\n  },\n  /*::[*/0x013B /*::]*/: {\n    /* n:\"BrtEndSXView\", */T: -1\n  },\n  /*::[*/0x013C /*::]*/: {\n    /* n:\"BrtBeginSXTHs\", */T: 1\n  },\n  /*::[*/0x013D /*::]*/: {\n    /* n:\"BrtEndSXTHs\", */T: -1\n  },\n  /*::[*/0x013E /*::]*/: {\n    /* n:\"BrtBeginSXTH\", */T: 1\n  },\n  /*::[*/0x013F /*::]*/: {\n    /* n:\"BrtEndSXTH\", */T: -1\n  },\n  /*::[*/0x0140 /*::]*/: {\n    /* n:\"BrtBeginISXTHRws\", */T: 1\n  },\n  /*::[*/0x0141 /*::]*/: {\n    /* n:\"BrtEndISXTHRws\", */T: -1\n  },\n  /*::[*/0x0142 /*::]*/: {\n    /* n:\"BrtBeginISXTHCols\", */T: 1\n  },\n  /*::[*/0x0143 /*::]*/: {\n    /* n:\"BrtEndISXTHCols\", */T: -1\n  },\n  /*::[*/0x0144 /*::]*/: {\n    /* n:\"BrtBeginSXTDMPS\", */T: 1\n  },\n  /*::[*/0x0145 /*::]*/: {\n    /* n:\"BrtEndSXTDMPs\", */T: -1\n  },\n  /*::[*/0x0146 /*::]*/: {\n    /* n:\"BrtBeginSXTDMP\", */T: 1\n  },\n  /*::[*/0x0147 /*::]*/: {\n    /* n:\"BrtEndSXTDMP\", */T: -1\n  },\n  /*::[*/0x0148 /*::]*/: {\n    /* n:\"BrtBeginSXTHItems\", */T: 1\n  },\n  /*::[*/0x0149 /*::]*/: {\n    /* n:\"BrtEndSXTHItems\", */T: -1\n  },\n  /*::[*/0x014A /*::]*/: {\n    /* n:\"BrtBeginSXTHItem\", */T: 1\n  },\n  /*::[*/0x014B /*::]*/: {\n    /* n:\"BrtEndSXTHItem\", */T: -1\n  },\n  /*::[*/0x014C /*::]*/: {\n    /* n:\"BrtBeginMetadata\", */T: 1\n  },\n  /*::[*/0x014D /*::]*/: {\n    /* n:\"BrtEndMetadata\", */T: -1\n  },\n  /*::[*/0x014E /*::]*/: {\n    /* n:\"BrtBeginEsmdtinfo\", */T: 1\n  },\n  /*::[*/0x014F /*::]*/: {\n    /* n:\"BrtMdtinfo\", */f: parse_BrtMdtinfo\n  },\n  /*::[*/0x0150 /*::]*/: {\n    /* n:\"BrtEndEsmdtinfo\", */T: -1\n  },\n  /*::[*/0x0151 /*::]*/: {\n    /* n:\"BrtBeginEsmdb\", */f: parse_BrtBeginEsmdb,\n    T: 1\n  },\n  /*::[*/0x0152 /*::]*/: {\n    /* n:\"BrtEndEsmdb\", */T: -1\n  },\n  /*::[*/0x0153 /*::]*/: {\n    /* n:\"BrtBeginEsfmd\", */T: 1\n  },\n  /*::[*/0x0154 /*::]*/: {\n    /* n:\"BrtEndEsfmd\", */T: -1\n  },\n  /*::[*/0x0155 /*::]*/: {\n    /* n:\"BrtBeginSingleCells\", */T: 1\n  },\n  /*::[*/0x0156 /*::]*/: {\n    /* n:\"BrtEndSingleCells\", */T: -1\n  },\n  /*::[*/0x0157 /*::]*/: {\n    /* n:\"BrtBeginList\", */T: 1\n  },\n  /*::[*/0x0158 /*::]*/: {\n    /* n:\"BrtEndList\", */T: -1\n  },\n  /*::[*/0x0159 /*::]*/: {\n    /* n:\"BrtBeginListCols\", */T: 1\n  },\n  /*::[*/0x015A /*::]*/: {\n    /* n:\"BrtEndListCols\", */T: -1\n  },\n  /*::[*/0x015B /*::]*/: {\n    /* n:\"BrtBeginListCol\", */T: 1\n  },\n  /*::[*/0x015C /*::]*/: {\n    /* n:\"BrtEndListCol\", */T: -1\n  },\n  /*::[*/0x015D /*::]*/: {\n    /* n:\"BrtBeginListXmlCPr\", */T: 1\n  },\n  /*::[*/0x015E /*::]*/: {\n    /* n:\"BrtEndListXmlCPr\", */T: -1\n  },\n  /*::[*/0x015F /*::]*/: {/* n:\"BrtListCCFmla\" */},\n  /*::[*/0x0160 /*::]*/: {/* n:\"BrtListTrFmla\" */},\n  /*::[*/0x0161 /*::]*/: {\n    /* n:\"BrtBeginExternals\", */T: 1\n  },\n  /*::[*/0x0162 /*::]*/: {\n    /* n:\"BrtEndExternals\", */T: -1\n  },\n  /*::[*/0x0163 /*::]*/: {\n    /* n:\"BrtSupBookSrc\", */f: parse_RelID\n  },\n  /*::[*/0x0165 /*::]*/: {/* n:\"BrtSupSelf\" */},\n  /*::[*/0x0166 /*::]*/: {/* n:\"BrtSupSame\" */},\n  /*::[*/0x0167 /*::]*/: {/* n:\"BrtSupTabs\" */},\n  /*::[*/0x0168 /*::]*/: {\n    /* n:\"BrtBeginSupBook\", */T: 1\n  },\n  /*::[*/0x0169 /*::]*/: {/* n:\"BrtPlaceholderName\" */},\n  /*::[*/0x016A /*::]*/: {\n    /* n:\"BrtExternSheet\", */f: parse_ExternSheet\n  },\n  /*::[*/0x016B /*::]*/: {/* n:\"BrtExternTableStart\" */},\n  /*::[*/0x016C /*::]*/: {/* n:\"BrtExternTableEnd\" */},\n  /*::[*/0x016E /*::]*/: {/* n:\"BrtExternRowHdr\" */},\n  /*::[*/0x016F /*::]*/: {/* n:\"BrtExternCellBlank\" */},\n  /*::[*/0x0170 /*::]*/: {/* n:\"BrtExternCellReal\" */},\n  /*::[*/0x0171 /*::]*/: {/* n:\"BrtExternCellBool\" */},\n  /*::[*/0x0172 /*::]*/: {/* n:\"BrtExternCellError\" */},\n  /*::[*/0x0173 /*::]*/: {/* n:\"BrtExternCellString\" */},\n  /*::[*/0x0174 /*::]*/: {\n    /* n:\"BrtBeginEsmdx\", */T: 1\n  },\n  /*::[*/0x0175 /*::]*/: {\n    /* n:\"BrtEndEsmdx\", */T: -1\n  },\n  /*::[*/0x0176 /*::]*/: {\n    /* n:\"BrtBeginMdxSet\", */T: 1\n  },\n  /*::[*/0x0177 /*::]*/: {\n    /* n:\"BrtEndMdxSet\", */T: -1\n  },\n  /*::[*/0x0178 /*::]*/: {\n    /* n:\"BrtBeginMdxMbrProp\", */T: 1\n  },\n  /*::[*/0x0179 /*::]*/: {\n    /* n:\"BrtEndMdxMbrProp\", */T: -1\n  },\n  /*::[*/0x017A /*::]*/: {\n    /* n:\"BrtBeginMdxKPI\", */T: 1\n  },\n  /*::[*/0x017B /*::]*/: {\n    /* n:\"BrtEndMdxKPI\", */T: -1\n  },\n  /*::[*/0x017C /*::]*/: {\n    /* n:\"BrtBeginEsstr\", */T: 1\n  },\n  /*::[*/0x017D /*::]*/: {\n    /* n:\"BrtEndEsstr\", */T: -1\n  },\n  /*::[*/0x017E /*::]*/: {\n    /* n:\"BrtBeginPRFItem\", */T: 1\n  },\n  /*::[*/0x017F /*::]*/: {\n    /* n:\"BrtEndPRFItem\", */T: -1\n  },\n  /*::[*/0x0180 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x0181 /*::]*/: {\n    /* n:\"BrtEndPivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x0182 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheID\", */T: 1\n  },\n  /*::[*/0x0183 /*::]*/: {\n    /* n:\"BrtEndPivotCacheID\", */T: -1\n  },\n  /*::[*/0x0184 /*::]*/: {\n    /* n:\"BrtBeginISXVIs\", */T: 1\n  },\n  /*::[*/0x0185 /*::]*/: {\n    /* n:\"BrtEndISXVIs\", */T: -1\n  },\n  /*::[*/0x0186 /*::]*/: {\n    /* n:\"BrtBeginColInfos\", */T: 1\n  },\n  /*::[*/0x0187 /*::]*/: {\n    /* n:\"BrtEndColInfos\", */T: -1\n  },\n  /*::[*/0x0188 /*::]*/: {\n    /* n:\"BrtBeginRwBrk\", */T: 1\n  },\n  /*::[*/0x0189 /*::]*/: {\n    /* n:\"BrtEndRwBrk\", */T: -1\n  },\n  /*::[*/0x018A /*::]*/: {\n    /* n:\"BrtBeginColBrk\", */T: 1\n  },\n  /*::[*/0x018B /*::]*/: {\n    /* n:\"BrtEndColBrk\", */T: -1\n  },\n  /*::[*/0x018C /*::]*/: {/* n:\"BrtBrk\" */},\n  /*::[*/0x018D /*::]*/: {/* n:\"BrtUserBookView\" */},\n  /*::[*/0x018E /*::]*/: {/* n:\"BrtInfo\" */},\n  /*::[*/0x018F /*::]*/: {/* n:\"BrtCUsr\" */},\n  /*::[*/0x0190 /*::]*/: {/* n:\"BrtUsr\" */},\n  /*::[*/0x0191 /*::]*/: {\n    /* n:\"BrtBeginUsers\", */T: 1\n  },\n  /*::[*/0x0193 /*::]*/: {/* n:\"BrtEOF\" */},\n  /*::[*/0x0194 /*::]*/: {/* n:\"BrtUCR\" */},\n  /*::[*/0x0195 /*::]*/: {/* n:\"BrtRRInsDel\" */},\n  /*::[*/0x0196 /*::]*/: {/* n:\"BrtRREndInsDel\" */},\n  /*::[*/0x0197 /*::]*/: {/* n:\"BrtRRMove\" */},\n  /*::[*/0x0198 /*::]*/: {/* n:\"BrtRREndMove\" */},\n  /*::[*/0x0199 /*::]*/: {/* n:\"BrtRRChgCell\" */},\n  /*::[*/0x019A /*::]*/: {/* n:\"BrtRREndChgCell\" */},\n  /*::[*/0x019B /*::]*/: {/* n:\"BrtRRHeader\" */},\n  /*::[*/0x019C /*::]*/: {/* n:\"BrtRRUserView\" */},\n  /*::[*/0x019D /*::]*/: {/* n:\"BrtRRRenSheet\" */},\n  /*::[*/0x019E /*::]*/: {/* n:\"BrtRRInsertSh\" */},\n  /*::[*/0x019F /*::]*/: {/* n:\"BrtRRDefName\" */},\n  /*::[*/0x01A0 /*::]*/: {/* n:\"BrtRRNote\" */},\n  /*::[*/0x01A1 /*::]*/: {/* n:\"BrtRRConflict\" */},\n  /*::[*/0x01A2 /*::]*/: {/* n:\"BrtRRTQSIF\" */},\n  /*::[*/0x01A3 /*::]*/: {/* n:\"BrtRRFormat\" */},\n  /*::[*/0x01A4 /*::]*/: {/* n:\"BrtRREndFormat\" */},\n  /*::[*/0x01A5 /*::]*/: {/* n:\"BrtRRAutoFmt\" */},\n  /*::[*/0x01A6 /*::]*/: {\n    /* n:\"BrtBeginUserShViews\", */T: 1\n  },\n  /*::[*/0x01A7 /*::]*/: {\n    /* n:\"BrtBeginUserShView\", */T: 1\n  },\n  /*::[*/0x01A8 /*::]*/: {\n    /* n:\"BrtEndUserShView\", */T: -1\n  },\n  /*::[*/0x01A9 /*::]*/: {\n    /* n:\"BrtEndUserShViews\", */T: -1\n  },\n  /*::[*/0x01AA /*::]*/: {\n    /* n:\"BrtArrFmla\", */f: parse_BrtArrFmla\n  },\n  /*::[*/0x01AB /*::]*/: {\n    /* n:\"BrtShrFmla\", */f: parse_BrtShrFmla\n  },\n  /*::[*/0x01AC /*::]*/: {/* n:\"BrtTable\" */},\n  /*::[*/0x01AD /*::]*/: {\n    /* n:\"BrtBeginExtConnections\", */T: 1\n  },\n  /*::[*/0x01AE /*::]*/: {\n    /* n:\"BrtEndExtConnections\", */T: -1\n  },\n  /*::[*/0x01AF /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMems\", */T: 1\n  },\n  /*::[*/0x01B0 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMems\", */T: -1\n  },\n  /*::[*/0x01B1 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMem\", */T: 1\n  },\n  /*::[*/0x01B2 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMem\", */T: -1\n  },\n  /*::[*/0x01B3 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLevels\", */T: 1\n  },\n  /*::[*/0x01B4 /*::]*/: {\n    /* n:\"BrtEndPCDHGLevels\", */T: -1\n  },\n  /*::[*/0x01B5 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLevel\", */T: 1\n  },\n  /*::[*/0x01B6 /*::]*/: {\n    /* n:\"BrtEndPCDHGLevel\", */T: -1\n  },\n  /*::[*/0x01B7 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGroups\", */T: 1\n  },\n  /*::[*/0x01B8 /*::]*/: {\n    /* n:\"BrtEndPCDHGLGroups\", */T: -1\n  },\n  /*::[*/0x01B9 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGroup\", */T: 1\n  },\n  /*::[*/0x01BA /*::]*/: {\n    /* n:\"BrtEndPCDHGLGroup\", */T: -1\n  },\n  /*::[*/0x01BB /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGMembers\", */T: 1\n  },\n  /*::[*/0x01BC /*::]*/: {\n    /* n:\"BrtEndPCDHGLGMembers\", */T: -1\n  },\n  /*::[*/0x01BD /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGMember\", */T: 1\n  },\n  /*::[*/0x01BE /*::]*/: {\n    /* n:\"BrtEndPCDHGLGMember\", */T: -1\n  },\n  /*::[*/0x01BF /*::]*/: {\n    /* n:\"BrtBeginQSI\", */T: 1\n  },\n  /*::[*/0x01C0 /*::]*/: {\n    /* n:\"BrtEndQSI\", */T: -1\n  },\n  /*::[*/0x01C1 /*::]*/: {\n    /* n:\"BrtBeginQSIR\", */T: 1\n  },\n  /*::[*/0x01C2 /*::]*/: {\n    /* n:\"BrtEndQSIR\", */T: -1\n  },\n  /*::[*/0x01C3 /*::]*/: {\n    /* n:\"BrtBeginDeletedNames\", */T: 1\n  },\n  /*::[*/0x01C4 /*::]*/: {\n    /* n:\"BrtEndDeletedNames\", */T: -1\n  },\n  /*::[*/0x01C5 /*::]*/: {\n    /* n:\"BrtBeginDeletedName\", */T: 1\n  },\n  /*::[*/0x01C6 /*::]*/: {\n    /* n:\"BrtEndDeletedName\", */T: -1\n  },\n  /*::[*/0x01C7 /*::]*/: {\n    /* n:\"BrtBeginQSIFs\", */T: 1\n  },\n  /*::[*/0x01C8 /*::]*/: {\n    /* n:\"BrtEndQSIFs\", */T: -1\n  },\n  /*::[*/0x01C9 /*::]*/: {\n    /* n:\"BrtBeginQSIF\", */T: 1\n  },\n  /*::[*/0x01CA /*::]*/: {\n    /* n:\"BrtEndQSIF\", */T: -1\n  },\n  /*::[*/0x01CB /*::]*/: {\n    /* n:\"BrtBeginAutoSortScope\", */T: 1\n  },\n  /*::[*/0x01CC /*::]*/: {\n    /* n:\"BrtEndAutoSortScope\", */T: -1\n  },\n  /*::[*/0x01CD /*::]*/: {\n    /* n:\"BrtBeginConditionalFormatting\", */T: 1\n  },\n  /*::[*/0x01CE /*::]*/: {\n    /* n:\"BrtEndConditionalFormatting\", */T: -1\n  },\n  /*::[*/0x01CF /*::]*/: {\n    /* n:\"BrtBeginCFRule\", */T: 1\n  },\n  /*::[*/0x01D0 /*::]*/: {\n    /* n:\"BrtEndCFRule\", */T: -1\n  },\n  /*::[*/0x01D1 /*::]*/: {\n    /* n:\"BrtBeginIconSet\", */T: 1\n  },\n  /*::[*/0x01D2 /*::]*/: {\n    /* n:\"BrtEndIconSet\", */T: -1\n  },\n  /*::[*/0x01D3 /*::]*/: {\n    /* n:\"BrtBeginDatabar\", */T: 1\n  },\n  /*::[*/0x01D4 /*::]*/: {\n    /* n:\"BrtEndDatabar\", */T: -1\n  },\n  /*::[*/0x01D5 /*::]*/: {\n    /* n:\"BrtBeginColorScale\", */T: 1\n  },\n  /*::[*/0x01D6 /*::]*/: {\n    /* n:\"BrtEndColorScale\", */T: -1\n  },\n  /*::[*/0x01D7 /*::]*/: {/* n:\"BrtCFVO\" */},\n  /*::[*/0x01D8 /*::]*/: {/* n:\"BrtExternValueMeta\" */},\n  /*::[*/0x01D9 /*::]*/: {\n    /* n:\"BrtBeginColorPalette\", */T: 1\n  },\n  /*::[*/0x01DA /*::]*/: {\n    /* n:\"BrtEndColorPalette\", */T: -1\n  },\n  /*::[*/0x01DB /*::]*/: {/* n:\"BrtIndexedColor\" */},\n  /*::[*/0x01DC /*::]*/: {\n    /* n:\"BrtMargins\", */f: parse_BrtMargins\n  },\n  /*::[*/0x01DD /*::]*/: {/* n:\"BrtPrintOptions\" */},\n  /*::[*/0x01DE /*::]*/: {/* n:\"BrtPageSetup\" */},\n  /*::[*/0x01DF /*::]*/: {\n    /* n:\"BrtBeginHeaderFooter\", */T: 1\n  },\n  /*::[*/0x01E0 /*::]*/: {\n    /* n:\"BrtEndHeaderFooter\", */T: -1\n  },\n  /*::[*/0x01E1 /*::]*/: {\n    /* n:\"BrtBeginSXCrtFormat\", */T: 1\n  },\n  /*::[*/0x01E2 /*::]*/: {\n    /* n:\"BrtEndSXCrtFormat\", */T: -1\n  },\n  /*::[*/0x01E3 /*::]*/: {\n    /* n:\"BrtBeginSXCrtFormats\", */T: 1\n  },\n  /*::[*/0x01E4 /*::]*/: {\n    /* n:\"BrtEndSXCrtFormats\", */T: -1\n  },\n  /*::[*/0x01E5 /*::]*/: {\n    /* n:\"BrtWsFmtInfo\", */f: parse_BrtWsFmtInfo\n  },\n  /*::[*/0x01E6 /*::]*/: {\n    /* n:\"BrtBeginMgs\", */T: 1\n  },\n  /*::[*/0x01E7 /*::]*/: {\n    /* n:\"BrtEndMGs\", */T: -1\n  },\n  /*::[*/0x01E8 /*::]*/: {\n    /* n:\"BrtBeginMGMaps\", */T: 1\n  },\n  /*::[*/0x01E9 /*::]*/: {\n    /* n:\"BrtEndMGMaps\", */T: -1\n  },\n  /*::[*/0x01EA /*::]*/: {\n    /* n:\"BrtBeginMG\", */T: 1\n  },\n  /*::[*/0x01EB /*::]*/: {\n    /* n:\"BrtEndMG\", */T: -1\n  },\n  /*::[*/0x01EC /*::]*/: {\n    /* n:\"BrtBeginMap\", */T: 1\n  },\n  /*::[*/0x01ED /*::]*/: {\n    /* n:\"BrtEndMap\", */T: -1\n  },\n  /*::[*/0x01EE /*::]*/: {\n    /* n:\"BrtHLink\", */f: parse_BrtHLink\n  },\n  /*::[*/0x01EF /*::]*/: {\n    /* n:\"BrtBeginDCon\", */T: 1\n  },\n  /*::[*/0x01F0 /*::]*/: {\n    /* n:\"BrtEndDCon\", */T: -1\n  },\n  /*::[*/0x01F1 /*::]*/: {\n    /* n:\"BrtBeginDRefs\", */T: 1\n  },\n  /*::[*/0x01F2 /*::]*/: {\n    /* n:\"BrtEndDRefs\", */T: -1\n  },\n  /*::[*/0x01F3 /*::]*/: {/* n:\"BrtDRef\" */},\n  /*::[*/0x01F4 /*::]*/: {\n    /* n:\"BrtBeginScenMan\", */T: 1\n  },\n  /*::[*/0x01F5 /*::]*/: {\n    /* n:\"BrtEndScenMan\", */T: -1\n  },\n  /*::[*/0x01F6 /*::]*/: {\n    /* n:\"BrtBeginSct\", */T: 1\n  },\n  /*::[*/0x01F7 /*::]*/: {\n    /* n:\"BrtEndSct\", */T: -1\n  },\n  /*::[*/0x01F8 /*::]*/: {/* n:\"BrtSlc\" */},\n  /*::[*/0x01F9 /*::]*/: {\n    /* n:\"BrtBeginDXFs\", */T: 1\n  },\n  /*::[*/0x01FA /*::]*/: {\n    /* n:\"BrtEndDXFs\", */T: -1\n  },\n  /*::[*/0x01FB /*::]*/: {/* n:\"BrtDXF\" */},\n  /*::[*/0x01FC /*::]*/: {\n    /* n:\"BrtBeginTableStyles\", */T: 1\n  },\n  /*::[*/0x01FD /*::]*/: {\n    /* n:\"BrtEndTableStyles\", */T: -1\n  },\n  /*::[*/0x01FE /*::]*/: {\n    /* n:\"BrtBeginTableStyle\", */T: 1\n  },\n  /*::[*/0x01FF /*::]*/: {\n    /* n:\"BrtEndTableStyle\", */T: -1\n  },\n  /*::[*/0x0200 /*::]*/: {/* n:\"BrtTableStyleElement\" */},\n  /*::[*/0x0201 /*::]*/: {/* n:\"BrtTableStyleClient\" */},\n  /*::[*/0x0202 /*::]*/: {\n    /* n:\"BrtBeginVolDeps\", */T: 1\n  },\n  /*::[*/0x0203 /*::]*/: {\n    /* n:\"BrtEndVolDeps\", */T: -1\n  },\n  /*::[*/0x0204 /*::]*/: {\n    /* n:\"BrtBeginVolType\", */T: 1\n  },\n  /*::[*/0x0205 /*::]*/: {\n    /* n:\"BrtEndVolType\", */T: -1\n  },\n  /*::[*/0x0206 /*::]*/: {\n    /* n:\"BrtBeginVolMain\", */T: 1\n  },\n  /*::[*/0x0207 /*::]*/: {\n    /* n:\"BrtEndVolMain\", */T: -1\n  },\n  /*::[*/0x0208 /*::]*/: {\n    /* n:\"BrtBeginVolTopic\", */T: 1\n  },\n  /*::[*/0x0209 /*::]*/: {\n    /* n:\"BrtEndVolTopic\", */T: -1\n  },\n  /*::[*/0x020A /*::]*/: {/* n:\"BrtVolSubtopic\" */},\n  /*::[*/0x020B /*::]*/: {/* n:\"BrtVolRef\" */},\n  /*::[*/0x020C /*::]*/: {/* n:\"BrtVolNum\" */},\n  /*::[*/0x020D /*::]*/: {/* n:\"BrtVolErr\" */},\n  /*::[*/0x020E /*::]*/: {/* n:\"BrtVolStr\" */},\n  /*::[*/0x020F /*::]*/: {/* n:\"BrtVolBool\" */},\n  /*::[*/0x0210 /*::]*/: {\n    /* n:\"BrtBeginCalcChain$\", */T: 1\n  },\n  /*::[*/0x0211 /*::]*/: {\n    /* n:\"BrtEndCalcChain$\", */T: -1\n  },\n  /*::[*/0x0212 /*::]*/: {\n    /* n:\"BrtBeginSortState\", */T: 1\n  },\n  /*::[*/0x0213 /*::]*/: {\n    /* n:\"BrtEndSortState\", */T: -1\n  },\n  /*::[*/0x0214 /*::]*/: {\n    /* n:\"BrtBeginSortCond\", */T: 1\n  },\n  /*::[*/0x0215 /*::]*/: {\n    /* n:\"BrtEndSortCond\", */T: -1\n  },\n  /*::[*/0x0216 /*::]*/: {/* n:\"BrtBookProtection\" */},\n  /*::[*/0x0217 /*::]*/: {/* n:\"BrtSheetProtection\" */},\n  /*::[*/0x0218 /*::]*/: {/* n:\"BrtRangeProtection\" */},\n  /*::[*/0x0219 /*::]*/: {/* n:\"BrtPhoneticInfo\" */},\n  /*::[*/0x021A /*::]*/: {\n    /* n:\"BrtBeginECTxtWiz\", */T: 1\n  },\n  /*::[*/0x021B /*::]*/: {\n    /* n:\"BrtEndECTxtWiz\", */T: -1\n  },\n  /*::[*/0x021C /*::]*/: {\n    /* n:\"BrtBeginECTWFldInfoLst\", */T: 1\n  },\n  /*::[*/0x021D /*::]*/: {\n    /* n:\"BrtEndECTWFldInfoLst\", */T: -1\n  },\n  /*::[*/0x021E /*::]*/: {\n    /* n:\"BrtBeginECTwFldInfo\", */T: 1\n  },\n  /*::[*/0x0224 /*::]*/: {/* n:\"BrtFileSharing\" */},\n  /*::[*/0x0225 /*::]*/: {/* n:\"BrtOleSize\" */},\n  /*::[*/0x0226 /*::]*/: {\n    /* n:\"BrtDrawing\", */f: parse_RelID\n  },\n  /*::[*/0x0227 /*::]*/: {/* n:\"BrtLegacyDrawing\" */},\n  /*::[*/0x0228 /*::]*/: {/* n:\"BrtLegacyDrawingHF\" */},\n  /*::[*/0x0229 /*::]*/: {/* n:\"BrtWebOpt\" */},\n  /*::[*/0x022A /*::]*/: {\n    /* n:\"BrtBeginWebPubItems\", */T: 1\n  },\n  /*::[*/0x022B /*::]*/: {\n    /* n:\"BrtEndWebPubItems\", */T: -1\n  },\n  /*::[*/0x022C /*::]*/: {\n    /* n:\"BrtBeginWebPubItem\", */T: 1\n  },\n  /*::[*/0x022D /*::]*/: {\n    /* n:\"BrtEndWebPubItem\", */T: -1\n  },\n  /*::[*/0x022E /*::]*/: {\n    /* n:\"BrtBeginSXCondFmt\", */T: 1\n  },\n  /*::[*/0x022F /*::]*/: {\n    /* n:\"BrtEndSXCondFmt\", */T: -1\n  },\n  /*::[*/0x0230 /*::]*/: {\n    /* n:\"BrtBeginSXCondFmts\", */T: 1\n  },\n  /*::[*/0x0231 /*::]*/: {\n    /* n:\"BrtEndSXCondFmts\", */T: -1\n  },\n  /*::[*/0x0232 /*::]*/: {/* n:\"BrtBkHim\" */},\n  /*::[*/0x0234 /*::]*/: {/* n:\"BrtColor\" */},\n  /*::[*/0x0235 /*::]*/: {\n    /* n:\"BrtBeginIndexedColors\", */T: 1\n  },\n  /*::[*/0x0236 /*::]*/: {\n    /* n:\"BrtEndIndexedColors\", */T: -1\n  },\n  /*::[*/0x0239 /*::]*/: {\n    /* n:\"BrtBeginMRUColors\", */T: 1\n  },\n  /*::[*/0x023A /*::]*/: {\n    /* n:\"BrtEndMRUColors\", */T: -1\n  },\n  /*::[*/0x023C /*::]*/: {/* n:\"BrtMRUColor\" */},\n  /*::[*/0x023D /*::]*/: {\n    /* n:\"BrtBeginDVals\", */T: 1\n  },\n  /*::[*/0x023E /*::]*/: {\n    /* n:\"BrtEndDVals\", */T: -1\n  },\n  /*::[*/0x0241 /*::]*/: {/* n:\"BrtSupNameStart\" */},\n  /*::[*/0x0242 /*::]*/: {/* n:\"BrtSupNameValueStart\" */},\n  /*::[*/0x0243 /*::]*/: {/* n:\"BrtSupNameValueEnd\" */},\n  /*::[*/0x0244 /*::]*/: {/* n:\"BrtSupNameNum\" */},\n  /*::[*/0x0245 /*::]*/: {/* n:\"BrtSupNameErr\" */},\n  /*::[*/0x0246 /*::]*/: {/* n:\"BrtSupNameSt\" */},\n  /*::[*/0x0247 /*::]*/: {/* n:\"BrtSupNameNil\" */},\n  /*::[*/0x0248 /*::]*/: {/* n:\"BrtSupNameBool\" */},\n  /*::[*/0x0249 /*::]*/: {/* n:\"BrtSupNameFmla\" */},\n  /*::[*/0x024A /*::]*/: {/* n:\"BrtSupNameBits\" */},\n  /*::[*/0x024B /*::]*/: {/* n:\"BrtSupNameEnd\" */},\n  /*::[*/0x024C /*::]*/: {\n    /* n:\"BrtEndSupBook\", */T: -1\n  },\n  /*::[*/0x024D /*::]*/: {/* n:\"BrtCellSmartTagProperty\" */},\n  /*::[*/0x024E /*::]*/: {\n    /* n:\"BrtBeginCellSmartTag\", */T: 1\n  },\n  /*::[*/0x024F /*::]*/: {\n    /* n:\"BrtEndCellSmartTag\", */T: -1\n  },\n  /*::[*/0x0250 /*::]*/: {\n    /* n:\"BrtBeginCellSmartTags\", */T: 1\n  },\n  /*::[*/0x0251 /*::]*/: {\n    /* n:\"BrtEndCellSmartTags\", */T: -1\n  },\n  /*::[*/0x0252 /*::]*/: {\n    /* n:\"BrtBeginSmartTags\", */T: 1\n  },\n  /*::[*/0x0253 /*::]*/: {\n    /* n:\"BrtEndSmartTags\", */T: -1\n  },\n  /*::[*/0x0254 /*::]*/: {/* n:\"BrtSmartTagType\" */},\n  /*::[*/0x0255 /*::]*/: {\n    /* n:\"BrtBeginSmartTagTypes\", */T: 1\n  },\n  /*::[*/0x0256 /*::]*/: {\n    /* n:\"BrtEndSmartTagTypes\", */T: -1\n  },\n  /*::[*/0x0257 /*::]*/: {\n    /* n:\"BrtBeginSXFilters\", */T: 1\n  },\n  /*::[*/0x0258 /*::]*/: {\n    /* n:\"BrtEndSXFilters\", */T: -1\n  },\n  /*::[*/0x0259 /*::]*/: {\n    /* n:\"BrtBeginSXFILTER\", */T: 1\n  },\n  /*::[*/0x025A /*::]*/: {\n    /* n:\"BrtEndSXFilter\", */T: -1\n  },\n  /*::[*/0x025B /*::]*/: {\n    /* n:\"BrtBeginFills\", */T: 1\n  },\n  /*::[*/0x025C /*::]*/: {\n    /* n:\"BrtEndFills\", */T: -1\n  },\n  /*::[*/0x025D /*::]*/: {\n    /* n:\"BrtBeginCellWatches\", */T: 1\n  },\n  /*::[*/0x025E /*::]*/: {\n    /* n:\"BrtEndCellWatches\", */T: -1\n  },\n  /*::[*/0x025F /*::]*/: {/* n:\"BrtCellWatch\" */},\n  /*::[*/0x0260 /*::]*/: {\n    /* n:\"BrtBeginCRErrs\", */T: 1\n  },\n  /*::[*/0x0261 /*::]*/: {\n    /* n:\"BrtEndCRErrs\", */T: -1\n  },\n  /*::[*/0x0262 /*::]*/: {/* n:\"BrtCrashRecErr\" */},\n  /*::[*/0x0263 /*::]*/: {\n    /* n:\"BrtBeginFonts\", */T: 1\n  },\n  /*::[*/0x0264 /*::]*/: {\n    /* n:\"BrtEndFonts\", */T: -1\n  },\n  /*::[*/0x0265 /*::]*/: {\n    /* n:\"BrtBeginBorders\", */T: 1\n  },\n  /*::[*/0x0266 /*::]*/: {\n    /* n:\"BrtEndBorders\", */T: -1\n  },\n  /*::[*/0x0267 /*::]*/: {\n    /* n:\"BrtBeginFmts\", */T: 1\n  },\n  /*::[*/0x0268 /*::]*/: {\n    /* n:\"BrtEndFmts\", */T: -1\n  },\n  /*::[*/0x0269 /*::]*/: {\n    /* n:\"BrtBeginCellXFs\", */T: 1\n  },\n  /*::[*/0x026A /*::]*/: {\n    /* n:\"BrtEndCellXFs\", */T: -1\n  },\n  /*::[*/0x026B /*::]*/: {\n    /* n:\"BrtBeginStyles\", */T: 1\n  },\n  /*::[*/0x026C /*::]*/: {\n    /* n:\"BrtEndStyles\", */T: -1\n  },\n  /*::[*/0x0271 /*::]*/: {/* n:\"BrtBigName\" */},\n  /*::[*/0x0272 /*::]*/: {\n    /* n:\"BrtBeginCellStyleXFs\", */T: 1\n  },\n  /*::[*/0x0273 /*::]*/: {\n    /* n:\"BrtEndCellStyleXFs\", */T: -1\n  },\n  /*::[*/0x0274 /*::]*/: {\n    /* n:\"BrtBeginComments\", */T: 1\n  },\n  /*::[*/0x0275 /*::]*/: {\n    /* n:\"BrtEndComments\", */T: -1\n  },\n  /*::[*/0x0276 /*::]*/: {\n    /* n:\"BrtBeginCommentAuthors\", */T: 1\n  },\n  /*::[*/0x0277 /*::]*/: {\n    /* n:\"BrtEndCommentAuthors\", */T: -1\n  },\n  /*::[*/0x0278 /*::]*/: {\n    /* n:\"BrtCommentAuthor\", */f: parse_BrtCommentAuthor\n  },\n  /*::[*/0x0279 /*::]*/: {\n    /* n:\"BrtBeginCommentList\", */T: 1\n  },\n  /*::[*/0x027A /*::]*/: {\n    /* n:\"BrtEndCommentList\", */T: -1\n  },\n  /*::[*/0x027B /*::]*/: {\n    /* n:\"BrtBeginComment\", */T: 1,\n    f: parse_BrtBeginComment\n  },\n  /*::[*/0x027C /*::]*/: {\n    /* n:\"BrtEndComment\", */T: -1\n  },\n  /*::[*/0x027D /*::]*/: {\n    /* n:\"BrtCommentText\", */f: parse_BrtCommentText\n  },\n  /*::[*/0x027E /*::]*/: {\n    /* n:\"BrtBeginOleObjects\", */T: 1\n  },\n  /*::[*/0x027F /*::]*/: {/* n:\"BrtOleObject\" */},\n  /*::[*/0x0280 /*::]*/: {\n    /* n:\"BrtEndOleObjects\", */T: -1\n  },\n  /*::[*/0x0281 /*::]*/: {\n    /* n:\"BrtBeginSxrules\", */T: 1\n  },\n  /*::[*/0x0282 /*::]*/: {\n    /* n:\"BrtEndSxRules\", */T: -1\n  },\n  /*::[*/0x0283 /*::]*/: {\n    /* n:\"BrtBeginActiveXControls\", */T: 1\n  },\n  /*::[*/0x0284 /*::]*/: {/* n:\"BrtActiveX\" */},\n  /*::[*/0x0285 /*::]*/: {\n    /* n:\"BrtEndActiveXControls\", */T: -1\n  },\n  /*::[*/0x0286 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEMembersSortBy\", */T: 1\n  },\n  /*::[*/0x0288 /*::]*/: {\n    /* n:\"BrtBeginCellIgnoreECs\", */T: 1\n  },\n  /*::[*/0x0289 /*::]*/: {/* n:\"BrtCellIgnoreEC\" */},\n  /*::[*/0x028A /*::]*/: {\n    /* n:\"BrtEndCellIgnoreECs\", */T: -1\n  },\n  /*::[*/0x028B /*::]*/: {\n    /* n:\"BrtCsProp\", */f: parse_BrtCsProp\n  },\n  /*::[*/0x028C /*::]*/: {/* n:\"BrtCsPageSetup\" */},\n  /*::[*/0x028D /*::]*/: {\n    /* n:\"BrtBeginUserCsViews\", */T: 1\n  },\n  /*::[*/0x028E /*::]*/: {\n    /* n:\"BrtEndUserCsViews\", */T: -1\n  },\n  /*::[*/0x028F /*::]*/: {\n    /* n:\"BrtBeginUserCsView\", */T: 1\n  },\n  /*::[*/0x0290 /*::]*/: {\n    /* n:\"BrtEndUserCsView\", */T: -1\n  },\n  /*::[*/0x0291 /*::]*/: {\n    /* n:\"BrtBeginPcdSFCIEntries\", */T: 1\n  },\n  /*::[*/0x0292 /*::]*/: {\n    /* n:\"BrtEndPCDSFCIEntries\", */T: -1\n  },\n  /*::[*/0x0293 /*::]*/: {/* n:\"BrtPCDSFCIEntry\" */},\n  /*::[*/0x0294 /*::]*/: {\n    /* n:\"BrtBeginListParts\", */T: 1\n  },\n  /*::[*/0x0295 /*::]*/: {/* n:\"BrtListPart\" */},\n  /*::[*/0x0296 /*::]*/: {\n    /* n:\"BrtEndListParts\", */T: -1\n  },\n  /*::[*/0x0297 /*::]*/: {/* n:\"BrtSheetCalcProp\" */},\n  /*::[*/0x0298 /*::]*/: {\n    /* n:\"BrtBeginFnGroup\", */T: 1\n  },\n  /*::[*/0x0299 /*::]*/: {/* n:\"BrtFnGroup\" */},\n  /*::[*/0x029A /*::]*/: {\n    /* n:\"BrtEndFnGroup\", */T: -1\n  },\n  /*::[*/0x029B /*::]*/: {/* n:\"BrtSupAddin\" */},\n  /*::[*/0x029C /*::]*/: {/* n:\"BrtSXTDMPOrder\" */},\n  /*::[*/0x029D /*::]*/: {/* n:\"BrtCsProtection\" */},\n  /*::[*/0x029F /*::]*/: {\n    /* n:\"BrtBeginWsSortMap\", */T: 1\n  },\n  /*::[*/0x02A0 /*::]*/: {\n    /* n:\"BrtEndWsSortMap\", */T: -1\n  },\n  /*::[*/0x02A1 /*::]*/: {\n    /* n:\"BrtBeginRRSort\", */T: 1\n  },\n  /*::[*/0x02A2 /*::]*/: {\n    /* n:\"BrtEndRRSort\", */T: -1\n  },\n  /*::[*/0x02A3 /*::]*/: {/* n:\"BrtRRSortItem\" */},\n  /*::[*/0x02A4 /*::]*/: {/* n:\"BrtFileSharingIso\" */},\n  /*::[*/0x02A5 /*::]*/: {/* n:\"BrtBookProtectionIso\" */},\n  /*::[*/0x02A6 /*::]*/: {/* n:\"BrtSheetProtectionIso\" */},\n  /*::[*/0x02A7 /*::]*/: {/* n:\"BrtCsProtectionIso\" */},\n  /*::[*/0x02A8 /*::]*/: {/* n:\"BrtRangeProtectionIso\" */},\n  /*::[*/0x02A9 /*::]*/: {/* n:\"BrtDValList\" */},\n  /*::[*/0x0400 /*::]*/: {/* n:\"BrtRwDescent\" */},\n  /*::[*/0x0401 /*::]*/: {/* n:\"BrtKnownFonts\" */},\n  /*::[*/0x0402 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSet\", */T: 1\n  },\n  /*::[*/0x0403 /*::]*/: {\n    /* n:\"BrtEndSXTupleSet\", */T: -1\n  },\n  /*::[*/0x0404 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSetHeader\", */T: 1\n  },\n  /*::[*/0x0405 /*::]*/: {\n    /* n:\"BrtEndSXTupleSetHeader\", */T: -1\n  },\n  /*::[*/0x0406 /*::]*/: {/* n:\"BrtSXTupleSetHeaderItem\" */},\n  /*::[*/0x0407 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSetData\", */T: 1\n  },\n  /*::[*/0x0408 /*::]*/: {\n    /* n:\"BrtEndSXTupleSetData\", */T: -1\n  },\n  /*::[*/0x0409 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSetRow\", */T: 1\n  },\n  /*::[*/0x040A /*::]*/: {\n    /* n:\"BrtEndSXTupleSetRow\", */T: -1\n  },\n  /*::[*/0x040B /*::]*/: {/* n:\"BrtSXTupleSetRowItem\" */},\n  /*::[*/0x040C /*::]*/: {/* n:\"BrtNameExt\" */},\n  /*::[*/0x040D /*::]*/: {/* n:\"BrtPCDH14\" */},\n  /*::[*/0x040E /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMem14\", */T: 1\n  },\n  /*::[*/0x040F /*::]*/: {\n    /* n:\"BrtEndPCDCalcMem14\", */T: -1\n  },\n  /*::[*/0x0410 /*::]*/: {/* n:\"BrtSXTH14\" */},\n  /*::[*/0x0411 /*::]*/: {\n    /* n:\"BrtBeginSparklineGroup\", */T: 1\n  },\n  /*::[*/0x0412 /*::]*/: {\n    /* n:\"BrtEndSparklineGroup\", */T: -1\n  },\n  /*::[*/0x0413 /*::]*/: {/* n:\"BrtSparkline\" */},\n  /*::[*/0x0414 /*::]*/: {/* n:\"BrtSXDI14\" */},\n  /*::[*/0x0415 /*::]*/: {/* n:\"BrtWsFmtInfoEx14\" */},\n  /*::[*/0x0416 /*::]*/: {\n    /* n:\"BrtBeginConditionalFormatting14\", */T: 1\n  },\n  /*::[*/0x0417 /*::]*/: {\n    /* n:\"BrtEndConditionalFormatting14\", */T: -1\n  },\n  /*::[*/0x0418 /*::]*/: {\n    /* n:\"BrtBeginCFRule14\", */T: 1\n  },\n  /*::[*/0x0419 /*::]*/: {\n    /* n:\"BrtEndCFRule14\", */T: -1\n  },\n  /*::[*/0x041A /*::]*/: {/* n:\"BrtCFVO14\" */},\n  /*::[*/0x041B /*::]*/: {\n    /* n:\"BrtBeginDatabar14\", */T: 1\n  },\n  /*::[*/0x041C /*::]*/: {\n    /* n:\"BrtBeginIconSet14\", */T: 1\n  },\n  /*::[*/0x041D /*::]*/: {\n    /* n:\"BrtDVal14\", */f: parse_BrtDVal14\n  },\n  /*::[*/0x041E /*::]*/: {\n    /* n:\"BrtBeginDVals14\", */T: 1\n  },\n  /*::[*/0x041F /*::]*/: {/* n:\"BrtColor14\" */},\n  /*::[*/0x0420 /*::]*/: {\n    /* n:\"BrtBeginSparklines\", */T: 1\n  },\n  /*::[*/0x0421 /*::]*/: {\n    /* n:\"BrtEndSparklines\", */T: -1\n  },\n  /*::[*/0x0422 /*::]*/: {\n    /* n:\"BrtBeginSparklineGroups\", */T: 1\n  },\n  /*::[*/0x0423 /*::]*/: {\n    /* n:\"BrtEndSparklineGroups\", */T: -1\n  },\n  /*::[*/0x0425 /*::]*/: {/* n:\"BrtSXVD14\" */},\n  /*::[*/0x0426 /*::]*/: {\n    /* n:\"BrtBeginSXView14\", */T: 1\n  },\n  /*::[*/0x0427 /*::]*/: {\n    /* n:\"BrtEndSXView14\", */T: -1\n  },\n  /*::[*/0x0428 /*::]*/: {\n    /* n:\"BrtBeginSXView16\", */T: 1\n  },\n  /*::[*/0x0429 /*::]*/: {\n    /* n:\"BrtEndSXView16\", */T: -1\n  },\n  /*::[*/0x042A /*::]*/: {\n    /* n:\"BrtBeginPCD14\", */T: 1\n  },\n  /*::[*/0x042B /*::]*/: {\n    /* n:\"BrtEndPCD14\", */T: -1\n  },\n  /*::[*/0x042C /*::]*/: {\n    /* n:\"BrtBeginExtConn14\", */T: 1\n  },\n  /*::[*/0x042D /*::]*/: {\n    /* n:\"BrtEndExtConn14\", */T: -1\n  },\n  /*::[*/0x042E /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheIDs\", */T: 1\n  },\n  /*::[*/0x042F /*::]*/: {\n    /* n:\"BrtEndSlicerCacheIDs\", */T: -1\n  },\n  /*::[*/0x0430 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheID\", */T: 1\n  },\n  /*::[*/0x0431 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheID\", */T: -1\n  },\n  /*::[*/0x0433 /*::]*/: {\n    /* n:\"BrtBeginSlicerCache\", */T: 1\n  },\n  /*::[*/0x0434 /*::]*/: {\n    /* n:\"BrtEndSlicerCache\", */T: -1\n  },\n  /*::[*/0x0435 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheDef\", */T: 1\n  },\n  /*::[*/0x0436 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheDef\", */T: -1\n  },\n  /*::[*/0x0437 /*::]*/: {\n    /* n:\"BrtBeginSlicersEx\", */T: 1\n  },\n  /*::[*/0x0438 /*::]*/: {\n    /* n:\"BrtEndSlicersEx\", */T: -1\n  },\n  /*::[*/0x0439 /*::]*/: {\n    /* n:\"BrtBeginSlicerEx\", */T: 1\n  },\n  /*::[*/0x043A /*::]*/: {\n    /* n:\"BrtEndSlicerEx\", */T: -1\n  },\n  /*::[*/0x043B /*::]*/: {\n    /* n:\"BrtBeginSlicer\", */T: 1\n  },\n  /*::[*/0x043C /*::]*/: {\n    /* n:\"BrtEndSlicer\", */T: -1\n  },\n  /*::[*/0x043D /*::]*/: {/* n:\"BrtSlicerCachePivotTables\" */},\n  /*::[*/0x043E /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheOlapImpl\", */T: 1\n  },\n  /*::[*/0x043F /*::]*/: {\n    /* n:\"BrtEndSlicerCacheOlapImpl\", */T: -1\n  },\n  /*::[*/0x0440 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheLevelsData\", */T: 1\n  },\n  /*::[*/0x0441 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheLevelsData\", */T: -1\n  },\n  /*::[*/0x0442 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheLevelData\", */T: 1\n  },\n  /*::[*/0x0443 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheLevelData\", */T: -1\n  },\n  /*::[*/0x0444 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheSiRanges\", */T: 1\n  },\n  /*::[*/0x0445 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheSiRanges\", */T: -1\n  },\n  /*::[*/0x0446 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheSiRange\", */T: 1\n  },\n  /*::[*/0x0447 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheSiRange\", */T: -1\n  },\n  /*::[*/0x0448 /*::]*/: {/* n:\"BrtSlicerCacheOlapItem\" */},\n  /*::[*/0x0449 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheSelections\", */T: 1\n  },\n  /*::[*/0x044A /*::]*/: {/* n:\"BrtSlicerCacheSelection\" */},\n  /*::[*/0x044B /*::]*/: {\n    /* n:\"BrtEndSlicerCacheSelections\", */T: -1\n  },\n  /*::[*/0x044C /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheNative\", */T: 1\n  },\n  /*::[*/0x044D /*::]*/: {\n    /* n:\"BrtEndSlicerCacheNative\", */T: -1\n  },\n  /*::[*/0x044E /*::]*/: {/* n:\"BrtSlicerCacheNativeItem\" */},\n  /*::[*/0x044F /*::]*/: {/* n:\"BrtRangeProtection14\" */},\n  /*::[*/0x0450 /*::]*/: {/* n:\"BrtRangeProtectionIso14\" */},\n  /*::[*/0x0451 /*::]*/: {/* n:\"BrtCellIgnoreEC14\" */},\n  /*::[*/0x0457 /*::]*/: {/* n:\"BrtList14\" */},\n  /*::[*/0x0458 /*::]*/: {/* n:\"BrtCFIcon\" */},\n  /*::[*/0x0459 /*::]*/: {\n    /* n:\"BrtBeginSlicerCachesPivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x045A /*::]*/: {\n    /* n:\"BrtEndSlicerCachesPivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x045B /*::]*/: {\n    /* n:\"BrtBeginSlicers\", */T: 1\n  },\n  /*::[*/0x045C /*::]*/: {\n    /* n:\"BrtEndSlicers\", */T: -1\n  },\n  /*::[*/0x045D /*::]*/: {/* n:\"BrtWbProp14\" */},\n  /*::[*/0x045E /*::]*/: {\n    /* n:\"BrtBeginSXEdit\", */T: 1\n  },\n  /*::[*/0x045F /*::]*/: {\n    /* n:\"BrtEndSXEdit\", */T: -1\n  },\n  /*::[*/0x0460 /*::]*/: {\n    /* n:\"BrtBeginSXEdits\", */T: 1\n  },\n  /*::[*/0x0461 /*::]*/: {\n    /* n:\"BrtEndSXEdits\", */T: -1\n  },\n  /*::[*/0x0462 /*::]*/: {\n    /* n:\"BrtBeginSXChange\", */T: 1\n  },\n  /*::[*/0x0463 /*::]*/: {\n    /* n:\"BrtEndSXChange\", */T: -1\n  },\n  /*::[*/0x0464 /*::]*/: {\n    /* n:\"BrtBeginSXChanges\", */T: 1\n  },\n  /*::[*/0x0465 /*::]*/: {\n    /* n:\"BrtEndSXChanges\", */T: -1\n  },\n  /*::[*/0x0466 /*::]*/: {/* n:\"BrtSXTupleItems\" */},\n  /*::[*/0x0468 /*::]*/: {\n    /* n:\"BrtBeginSlicerStyle\", */T: 1\n  },\n  /*::[*/0x0469 /*::]*/: {\n    /* n:\"BrtEndSlicerStyle\", */T: -1\n  },\n  /*::[*/0x046A /*::]*/: {/* n:\"BrtSlicerStyleElement\" */},\n  /*::[*/0x046B /*::]*/: {\n    /* n:\"BrtBeginStyleSheetExt14\", */T: 1\n  },\n  /*::[*/0x046C /*::]*/: {\n    /* n:\"BrtEndStyleSheetExt14\", */T: -1\n  },\n  /*::[*/0x046D /*::]*/: {\n    /* n:\"BrtBeginSlicerCachesPivotCacheID\", */T: 1\n  },\n  /*::[*/0x046E /*::]*/: {\n    /* n:\"BrtEndSlicerCachesPivotCacheID\", */T: -1\n  },\n  /*::[*/0x046F /*::]*/: {\n    /* n:\"BrtBeginConditionalFormattings\", */T: 1\n  },\n  /*::[*/0x0470 /*::]*/: {\n    /* n:\"BrtEndConditionalFormattings\", */T: -1\n  },\n  /*::[*/0x0471 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMemExt\", */T: 1\n  },\n  /*::[*/0x0472 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMemExt\", */T: -1\n  },\n  /*::[*/0x0473 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMemsExt\", */T: 1\n  },\n  /*::[*/0x0474 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMemsExt\", */T: -1\n  },\n  /*::[*/0x0475 /*::]*/: {/* n:\"BrtPCDField14\" */},\n  /*::[*/0x0476 /*::]*/: {\n    /* n:\"BrtBeginSlicerStyles\", */T: 1\n  },\n  /*::[*/0x0477 /*::]*/: {\n    /* n:\"BrtEndSlicerStyles\", */T: -1\n  },\n  /*::[*/0x0478 /*::]*/: {\n    /* n:\"BrtBeginSlicerStyleElements\", */T: 1\n  },\n  /*::[*/0x0479 /*::]*/: {\n    /* n:\"BrtEndSlicerStyleElements\", */T: -1\n  },\n  /*::[*/0x047A /*::]*/: {/* n:\"BrtCFRuleExt\" */},\n  /*::[*/0x047B /*::]*/: {\n    /* n:\"BrtBeginSXCondFmt14\", */T: 1\n  },\n  /*::[*/0x047C /*::]*/: {\n    /* n:\"BrtEndSXCondFmt14\", */T: -1\n  },\n  /*::[*/0x047D /*::]*/: {\n    /* n:\"BrtBeginSXCondFmts14\", */T: 1\n  },\n  /*::[*/0x047E /*::]*/: {\n    /* n:\"BrtEndSXCondFmts14\", */T: -1\n  },\n  /*::[*/0x0480 /*::]*/: {\n    /* n:\"BrtBeginSortCond14\", */T: 1\n  },\n  /*::[*/0x0481 /*::]*/: {\n    /* n:\"BrtEndSortCond14\", */T: -1\n  },\n  /*::[*/0x0482 /*::]*/: {\n    /* n:\"BrtEndDVals14\", */T: -1\n  },\n  /*::[*/0x0483 /*::]*/: {\n    /* n:\"BrtEndIconSet14\", */T: -1\n  },\n  /*::[*/0x0484 /*::]*/: {\n    /* n:\"BrtEndDatabar14\", */T: -1\n  },\n  /*::[*/0x0485 /*::]*/: {\n    /* n:\"BrtBeginColorScale14\", */T: 1\n  },\n  /*::[*/0x0486 /*::]*/: {\n    /* n:\"BrtEndColorScale14\", */T: -1\n  },\n  /*::[*/0x0487 /*::]*/: {\n    /* n:\"BrtBeginSxrules14\", */T: 1\n  },\n  /*::[*/0x0488 /*::]*/: {\n    /* n:\"BrtEndSxrules14\", */T: -1\n  },\n  /*::[*/0x0489 /*::]*/: {\n    /* n:\"BrtBeginPRule14\", */T: 1\n  },\n  /*::[*/0x048A /*::]*/: {\n    /* n:\"BrtEndPRule14\", */T: -1\n  },\n  /*::[*/0x048B /*::]*/: {\n    /* n:\"BrtBeginPRFilters14\", */T: 1\n  },\n  /*::[*/0x048C /*::]*/: {\n    /* n:\"BrtEndPRFilters14\", */T: -1\n  },\n  /*::[*/0x048D /*::]*/: {\n    /* n:\"BrtBeginPRFilter14\", */T: 1\n  },\n  /*::[*/0x048E /*::]*/: {\n    /* n:\"BrtEndPRFilter14\", */T: -1\n  },\n  /*::[*/0x048F /*::]*/: {\n    /* n:\"BrtBeginPRFItem14\", */T: 1\n  },\n  /*::[*/0x0490 /*::]*/: {\n    /* n:\"BrtEndPRFItem14\", */T: -1\n  },\n  /*::[*/0x0491 /*::]*/: {\n    /* n:\"BrtBeginCellIgnoreECs14\", */T: 1\n  },\n  /*::[*/0x0492 /*::]*/: {\n    /* n:\"BrtEndCellIgnoreECs14\", */T: -1\n  },\n  /*::[*/0x0493 /*::]*/: {/* n:\"BrtDxf14\" */},\n  /*::[*/0x0494 /*::]*/: {\n    /* n:\"BrtBeginDxF14s\", */T: 1\n  },\n  /*::[*/0x0495 /*::]*/: {\n    /* n:\"BrtEndDxf14s\", */T: -1\n  },\n  /*::[*/0x0499 /*::]*/: {/* n:\"BrtFilter14\" */},\n  /*::[*/0x049A /*::]*/: {\n    /* n:\"BrtBeginCustomFilters14\", */T: 1\n  },\n  /*::[*/0x049C /*::]*/: {/* n:\"BrtCustomFilter14\" */},\n  /*::[*/0x049D /*::]*/: {/* n:\"BrtIconFilter14\" */},\n  /*::[*/0x049E /*::]*/: {/* n:\"BrtPivotCacheConnectionName\" */},\n  /*::[*/0x0800 /*::]*/: {\n    /* n:\"BrtBeginDecoupledPivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x0801 /*::]*/: {\n    /* n:\"BrtEndDecoupledPivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x0802 /*::]*/: {/* n:\"BrtDecoupledPivotCacheID\" */},\n  /*::[*/0x0803 /*::]*/: {\n    /* n:\"BrtBeginPivotTableRefs\", */T: 1\n  },\n  /*::[*/0x0804 /*::]*/: {\n    /* n:\"BrtEndPivotTableRefs\", */T: -1\n  },\n  /*::[*/0x0805 /*::]*/: {/* n:\"BrtPivotTableRef\" */},\n  /*::[*/0x0806 /*::]*/: {/* n:\"BrtSlicerCacheBookPivotTables\" */},\n  /*::[*/0x0807 /*::]*/: {\n    /* n:\"BrtBeginSxvcells\", */T: 1\n  },\n  /*::[*/0x0808 /*::]*/: {\n    /* n:\"BrtEndSxvcells\", */T: -1\n  },\n  /*::[*/0x0809 /*::]*/: {\n    /* n:\"BrtBeginSxRow\", */T: 1\n  },\n  /*::[*/0x080A /*::]*/: {\n    /* n:\"BrtEndSxRow\", */T: -1\n  },\n  /*::[*/0x080C /*::]*/: {/* n:\"BrtPcdCalcMem15\" */},\n  /*::[*/0x0813 /*::]*/: {/* n:\"BrtQsi15\" */},\n  /*::[*/0x0814 /*::]*/: {\n    /* n:\"BrtBeginWebExtensions\", */T: 1\n  },\n  /*::[*/0x0815 /*::]*/: {\n    /* n:\"BrtEndWebExtensions\", */T: -1\n  },\n  /*::[*/0x0816 /*::]*/: {/* n:\"BrtWebExtension\" */},\n  /*::[*/0x0817 /*::]*/: {/* n:\"BrtAbsPath15\" */},\n  /*::[*/0x0818 /*::]*/: {\n    /* n:\"BrtBeginPivotTableUISettings\", */T: 1\n  },\n  /*::[*/0x0819 /*::]*/: {\n    /* n:\"BrtEndPivotTableUISettings\", */T: -1\n  },\n  /*::[*/0x081B /*::]*/: {/* n:\"BrtTableSlicerCacheIDs\" */},\n  /*::[*/0x081C /*::]*/: {/* n:\"BrtTableSlicerCacheID\" */},\n  /*::[*/0x081D /*::]*/: {\n    /* n:\"BrtBeginTableSlicerCache\", */T: 1\n  },\n  /*::[*/0x081E /*::]*/: {\n    /* n:\"BrtEndTableSlicerCache\", */T: -1\n  },\n  /*::[*/0x081F /*::]*/: {/* n:\"BrtSxFilter15\" */},\n  /*::[*/0x0820 /*::]*/: {\n    /* n:\"BrtBeginTimelineCachePivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x0821 /*::]*/: {\n    /* n:\"BrtEndTimelineCachePivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x0822 /*::]*/: {/* n:\"BrtTimelineCachePivotCacheID\" */},\n  /*::[*/0x0823 /*::]*/: {\n    /* n:\"BrtBeginTimelineCacheIDs\", */T: 1\n  },\n  /*::[*/0x0824 /*::]*/: {\n    /* n:\"BrtEndTimelineCacheIDs\", */T: -1\n  },\n  /*::[*/0x0825 /*::]*/: {\n    /* n:\"BrtBeginTimelineCacheID\", */T: 1\n  },\n  /*::[*/0x0826 /*::]*/: {\n    /* n:\"BrtEndTimelineCacheID\", */T: -1\n  },\n  /*::[*/0x0827 /*::]*/: {\n    /* n:\"BrtBeginTimelinesEx\", */T: 1\n  },\n  /*::[*/0x0828 /*::]*/: {\n    /* n:\"BrtEndTimelinesEx\", */T: -1\n  },\n  /*::[*/0x0829 /*::]*/: {\n    /* n:\"BrtBeginTimelineEx\", */T: 1\n  },\n  /*::[*/0x082A /*::]*/: {\n    /* n:\"BrtEndTimelineEx\", */T: -1\n  },\n  /*::[*/0x082B /*::]*/: {/* n:\"BrtWorkBookPr15\" */},\n  /*::[*/0x082C /*::]*/: {/* n:\"BrtPCDH15\" */},\n  /*::[*/0x082D /*::]*/: {\n    /* n:\"BrtBeginTimelineStyle\", */T: 1\n  },\n  /*::[*/0x082E /*::]*/: {\n    /* n:\"BrtEndTimelineStyle\", */T: -1\n  },\n  /*::[*/0x082F /*::]*/: {/* n:\"BrtTimelineStyleElement\" */},\n  /*::[*/0x0830 /*::]*/: {\n    /* n:\"BrtBeginTimelineStylesheetExt15\", */T: 1\n  },\n  /*::[*/0x0831 /*::]*/: {\n    /* n:\"BrtEndTimelineStylesheetExt15\", */T: -1\n  },\n  /*::[*/0x0832 /*::]*/: {\n    /* n:\"BrtBeginTimelineStyles\", */T: 1\n  },\n  /*::[*/0x0833 /*::]*/: {\n    /* n:\"BrtEndTimelineStyles\", */T: -1\n  },\n  /*::[*/0x0834 /*::]*/: {\n    /* n:\"BrtBeginTimelineStyleElements\", */T: 1\n  },\n  /*::[*/0x0835 /*::]*/: {\n    /* n:\"BrtEndTimelineStyleElements\", */T: -1\n  },\n  /*::[*/0x0836 /*::]*/: {/* n:\"BrtDxf15\" */},\n  /*::[*/0x0837 /*::]*/: {\n    /* n:\"BrtBeginDxfs15\", */T: 1\n  },\n  /*::[*/0x0838 /*::]*/: {\n    /* n:\"BrtEndDxfs15\", */T: -1\n  },\n  /*::[*/0x0839 /*::]*/: {/* n:\"BrtSlicerCacheHideItemsWithNoData\" */},\n  /*::[*/0x083A /*::]*/: {\n    /* n:\"BrtBeginItemUniqueNames\", */T: 1\n  },\n  /*::[*/0x083B /*::]*/: {\n    /* n:\"BrtEndItemUniqueNames\", */T: -1\n  },\n  /*::[*/0x083C /*::]*/: {/* n:\"BrtItemUniqueName\" */},\n  /*::[*/0x083D /*::]*/: {\n    /* n:\"BrtBeginExtConn15\", */T: 1\n  },\n  /*::[*/0x083E /*::]*/: {\n    /* n:\"BrtEndExtConn15\", */T: -1\n  },\n  /*::[*/0x083F /*::]*/: {\n    /* n:\"BrtBeginOledbPr15\", */T: 1\n  },\n  /*::[*/0x0840 /*::]*/: {\n    /* n:\"BrtEndOledbPr15\", */T: -1\n  },\n  /*::[*/0x0841 /*::]*/: {\n    /* n:\"BrtBeginDataFeedPr15\", */T: 1\n  },\n  /*::[*/0x0842 /*::]*/: {\n    /* n:\"BrtEndDataFeedPr15\", */T: -1\n  },\n  /*::[*/0x0843 /*::]*/: {/* n:\"BrtTextPr15\" */},\n  /*::[*/0x0844 /*::]*/: {/* n:\"BrtRangePr15\" */},\n  /*::[*/0x0845 /*::]*/: {/* n:\"BrtDbCommand15\" */},\n  /*::[*/0x0846 /*::]*/: {\n    /* n:\"BrtBeginDbTables15\", */T: 1\n  },\n  /*::[*/0x0847 /*::]*/: {\n    /* n:\"BrtEndDbTables15\", */T: -1\n  },\n  /*::[*/0x0848 /*::]*/: {/* n:\"BrtDbTable15\" */},\n  /*::[*/0x0849 /*::]*/: {\n    /* n:\"BrtBeginDataModel\", */T: 1\n  },\n  /*::[*/0x084A /*::]*/: {\n    /* n:\"BrtEndDataModel\", */T: -1\n  },\n  /*::[*/0x084B /*::]*/: {\n    /* n:\"BrtBeginModelTables\", */T: 1\n  },\n  /*::[*/0x084C /*::]*/: {\n    /* n:\"BrtEndModelTables\", */T: -1\n  },\n  /*::[*/0x084D /*::]*/: {/* n:\"BrtModelTable\" */},\n  /*::[*/0x084E /*::]*/: {\n    /* n:\"BrtBeginModelRelationships\", */T: 1\n  },\n  /*::[*/0x084F /*::]*/: {\n    /* n:\"BrtEndModelRelationships\", */T: -1\n  },\n  /*::[*/0x0850 /*::]*/: {/* n:\"BrtModelRelationship\" */},\n  /*::[*/0x0851 /*::]*/: {\n    /* n:\"BrtBeginECTxtWiz15\", */T: 1\n  },\n  /*::[*/0x0852 /*::]*/: {\n    /* n:\"BrtEndECTxtWiz15\", */T: -1\n  },\n  /*::[*/0x0853 /*::]*/: {\n    /* n:\"BrtBeginECTWFldInfoLst15\", */T: 1\n  },\n  /*::[*/0x0854 /*::]*/: {\n    /* n:\"BrtEndECTWFldInfoLst15\", */T: -1\n  },\n  /*::[*/0x0855 /*::]*/: {\n    /* n:\"BrtBeginECTWFldInfo15\", */T: 1\n  },\n  /*::[*/0x0856 /*::]*/: {/* n:\"BrtFieldListActiveItem\" */},\n  /*::[*/0x0857 /*::]*/: {/* n:\"BrtPivotCacheIdVersion\" */},\n  /*::[*/0x0858 /*::]*/: {/* n:\"BrtSXDI15\" */},\n  /*::[*/0x0859 /*::]*/: {\n    /* n:\"BrtBeginModelTimeGroupings\", */T: 1\n  },\n  /*::[*/0x085A /*::]*/: {\n    /* n:\"BrtEndModelTimeGroupings\", */T: -1\n  },\n  /*::[*/0x085B /*::]*/: {\n    /* n:\"BrtBeginModelTimeGrouping\", */T: 1\n  },\n  /*::[*/0x085C /*::]*/: {\n    /* n:\"BrtEndModelTimeGrouping\", */T: -1\n  },\n  /*::[*/0x085D /*::]*/: {/* n:\"BrtModelTimeGroupingCalcCol\" */},\n  /*::[*/0x0C00 /*::]*/: {/* n:\"BrtUid\" */},\n  /*::[*/0x0C01 /*::]*/: {/* n:\"BrtRevisionPtr\" */},\n  /*::[*/0x1000 /*::]*/: {\n    /* n:\"BrtBeginDynamicArrayPr\", */T: 1\n  },\n  /*::[*/0x1001 /*::]*/: {\n    /* n:\"BrtEndDynamicArrayPr\", */T: -1\n  },\n  /*::[*/0x138A /*::]*/: {\n    /* n:\"BrtBeginRichValueBlock\", */T: 1\n  },\n  /*::[*/0x138B /*::]*/: {\n    /* n:\"BrtEndRichValueBlock\", */T: -1\n  },\n  /*::[*/0x13D9 /*::]*/: {\n    /* n:\"BrtBeginRichFilters\", */T: 1\n  },\n  /*::[*/0x13DA /*::]*/: {\n    /* n:\"BrtEndRichFilters\", */T: -1\n  },\n  /*::[*/0x13DB /*::]*/: {/* n:\"BrtRichFilter\" */},\n  /*::[*/0x13DC /*::]*/: {\n    /* n:\"BrtBeginRichFilterColumn\", */T: 1\n  },\n  /*::[*/0x13DD /*::]*/: {\n    /* n:\"BrtEndRichFilterColumn\", */T: -1\n  },\n  /*::[*/0x13DE /*::]*/: {\n    /* n:\"BrtBeginCustomRichFilters\", */T: 1\n  },\n  /*::[*/0x13DF /*::]*/: {\n    /* n:\"BrtEndCustomRichFilters\", */T: -1\n  },\n  /*::[*/0x13E0 /*::]*/: {/* n:\"BrtCustomRichFilter\" */},\n  /*::[*/0x13E1 /*::]*/: {/* n:\"BrtTop10RichFilter\" */},\n  /*::[*/0x13E2 /*::]*/: {/* n:\"BrtDynamicRichFilter\" */},\n  /*::[*/0x13E4 /*::]*/: {\n    /* n:\"BrtBeginRichSortCondition\", */T: 1\n  },\n  /*::[*/0x13E5 /*::]*/: {\n    /* n:\"BrtEndRichSortCondition\", */T: -1\n  },\n  /*::[*/0x13E6 /*::]*/: {/* n:\"BrtRichFilterDateGroupItem\" */},\n  /*::[*/0x13E7 /*::]*/: {\n    /* n:\"BrtBeginCalcFeatures\", */T: 1\n  },\n  /*::[*/0x13E8 /*::]*/: {\n    /* n:\"BrtEndCalcFeatures\", */T: -1\n  },\n  /*::[*/0x13E9 /*::]*/: {/* n:\"BrtCalcFeature\" */},\n  /*::[*/0x13EB /*::]*/: {/* n:\"BrtExternalLinksPr\" */},\n  /*::[*/0xFFFF /*::]*/: {\n    n: \"\"\n  }\n};\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n  /* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n  /*::[*/0x0006 /*::]*/: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  /*::[*/0x000a /*::]*/: {\n    /* n:\"EOF\", */f: parsenoop2\n  },\n  /*::[*/0x000c /*::]*/: {\n    /* n:\"CalcCount\", */f: parseuint16\n  },\n  //\n  /*::[*/\n  0x000d /*::]*/: {\n    /* n:\"CalcMode\", */f: parseuint16\n  },\n  //\n  /*::[*/\n  0x000e /*::]*/: {\n    /* n:\"CalcPrecision\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x000f /*::]*/: {\n    /* n:\"CalcRefMode\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x0010 /*::]*/: {\n    /* n:\"CalcDelta\", */f: parse_Xnum\n  },\n  //\n  /*::[*/\n  0x0011 /*::]*/: {\n    /* n:\"CalcIter\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x0012 /*::]*/: {\n    /* n:\"Protect\", */f: parsebool\n  },\n  /*::[*/0x0013 /*::]*/: {\n    /* n:\"Password\", */f: parseuint16\n  },\n  /*::[*/0x0014 /*::]*/: {\n    /* n:\"Header\", */f: parse_XLHeaderFooter\n  },\n  /*::[*/0x0015 /*::]*/: {\n    /* n:\"Footer\", */f: parse_XLHeaderFooter\n  },\n  /*::[*/0x0017 /*::]*/: {\n    /* n:\"ExternSheet\", */f: parse_ExternSheet\n  },\n  /*::[*/0x0018 /*::]*/: {\n    /* n:\"Lbl\", */f: parse_Lbl\n  },\n  /*::[*/0x0019 /*::]*/: {\n    /* n:\"WinProtect\", */f: parsebool\n  },\n  /*::[*/0x001a /*::]*/: {/* n:\"VerticalPageBreaks\", */},\n  /*::[*/0x001b /*::]*/: {/* n:\"HorizontalPageBreaks\", */},\n  /*::[*/0x001c /*::]*/: {\n    /* n:\"Note\", */f: parse_Note\n  },\n  /*::[*/0x001d /*::]*/: {/* n:\"Selection\", */},\n  /*::[*/0x0022 /*::]*/: {\n    /* n:\"Date1904\", */f: parsebool\n  },\n  /*::[*/0x0023 /*::]*/: {\n    /* n:\"ExternName\", */f: parse_ExternName\n  },\n  /*::[*/0x0026 /*::]*/: {\n    /* n:\"LeftMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x0027 /*::]*/: {\n    /* n:\"RightMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x0028 /*::]*/: {\n    /* n:\"TopMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x0029 /*::]*/: {\n    /* n:\"BottomMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x002a /*::]*/: {\n    /* n:\"PrintRowCol\", */f: parsebool\n  },\n  /*::[*/0x002b /*::]*/: {\n    /* n:\"PrintGrid\", */f: parsebool\n  },\n  /*::[*/0x002f /*::]*/: {\n    /* n:\"FilePass\", */f: parse_FilePass\n  },\n  /*::[*/0x0031 /*::]*/: {\n    /* n:\"Font\", */f: parse_Font\n  },\n  /*::[*/0x0033 /*::]*/: {\n    /* n:\"PrintSize\", */f: parseuint16\n  },\n  /*::[*/0x003c /*::]*/: {/* n:\"Continue\", */},\n  /*::[*/0x003d /*::]*/: {\n    /* n:\"Window1\", */f: parse_Window1\n  },\n  /*::[*/0x0040 /*::]*/: {\n    /* n:\"Backup\", */f: parsebool\n  },\n  /*::[*/0x0041 /*::]*/: {\n    /* n:\"Pane\", */f: parse_Pane\n  },\n  /*::[*/0x0042 /*::]*/: {\n    /* n:\"CodePage\", */f: parseuint16\n  },\n  /*::[*/0x004d /*::]*/: {/* n:\"Pls\", */},\n  /*::[*/0x0050 /*::]*/: {/* n:\"DCon\", */},\n  /*::[*/0x0051 /*::]*/: {/* n:\"DConRef\", */},\n  /*::[*/0x0052 /*::]*/: {/* n:\"DConName\", */},\n  /*::[*/0x0055 /*::]*/: {\n    /* n:\"DefColWidth\", */f: parseuint16\n  },\n  /*::[*/0x0059 /*::]*/: {/* n:\"XCT\", */},\n  /*::[*/0x005a /*::]*/: {/* n:\"CRN\", */},\n  /*::[*/0x005b /*::]*/: {/* n:\"FileSharing\", */},\n  /*::[*/0x005c /*::]*/: {\n    /* n:\"WriteAccess\", */f: parse_WriteAccess\n  },\n  /*::[*/0x005d /*::]*/: {\n    /* n:\"Obj\", */f: parse_Obj\n  },\n  /*::[*/0x005e /*::]*/: {/* n:\"Uncalced\", */},\n  /*::[*/0x005f /*::]*/: {\n    /* n:\"CalcSaveRecalc\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x0060 /*::]*/: {/* n:\"Template\", */},\n  /*::[*/0x0061 /*::]*/: {/* n:\"Intl\", */},\n  /*::[*/0x0063 /*::]*/: {\n    /* n:\"ObjProtect\", */f: parsebool\n  },\n  /*::[*/0x007d /*::]*/: {\n    /* n:\"ColInfo\", */f: parse_ColInfo\n  },\n  /*::[*/0x0080 /*::]*/: {\n    /* n:\"Guts\", */f: parse_Guts\n  },\n  /*::[*/0x0081 /*::]*/: {\n    /* n:\"WsBool\", */f: parse_WsBool\n  },\n  /*::[*/0x0082 /*::]*/: {\n    /* n:\"GridSet\", */f: parseuint16\n  },\n  /*::[*/0x0083 /*::]*/: {\n    /* n:\"HCenter\", */f: parsebool\n  },\n  /*::[*/0x0084 /*::]*/: {\n    /* n:\"VCenter\", */f: parsebool\n  },\n  /*::[*/0x0085 /*::]*/: {\n    /* n:\"BoundSheet8\", */f: parse_BoundSheet8\n  },\n  /*::[*/0x0086 /*::]*/: {/* n:\"WriteProtect\", */},\n  /*::[*/0x008c /*::]*/: {\n    /* n:\"Country\", */f: parse_Country\n  },\n  /*::[*/0x008d /*::]*/: {\n    /* n:\"HideObj\", */f: parseuint16\n  },\n  /*::[*/0x0090 /*::]*/: {/* n:\"Sort\", */},\n  /*::[*/0x0092 /*::]*/: {\n    /* n:\"Palette\", */f: parse_Palette\n  },\n  /*::[*/0x0097 /*::]*/: {/* n:\"Sync\", */},\n  /*::[*/0x0098 /*::]*/: {/* n:\"LPr\", */},\n  /*::[*/0x0099 /*::]*/: {/* n:\"DxGCol\", */},\n  /*::[*/0x009a /*::]*/: {/* n:\"FnGroupName\", */},\n  /*::[*/0x009b /*::]*/: {/* n:\"FilterMode\", */},\n  /*::[*/0x009c /*::]*/: {\n    /* n:\"BuiltInFnGroupCount\", */f: parseuint16\n  },\n  /*::[*/0x009d /*::]*/: {/* n:\"AutoFilterInfo\", */},\n  /*::[*/0x009e /*::]*/: {/* n:\"AutoFilter\", */},\n  /*::[*/0x00a0 /*::]*/: {\n    /* n:\"Scl\", */f: parse_Scl\n  },\n  /*::[*/0x00a1 /*::]*/: {\n    /* n:\"Setup\", */f: parse_Setup\n  },\n  /*::[*/0x00ae /*::]*/: {/* n:\"ScenMan\", */},\n  /*::[*/0x00af /*::]*/: {/* n:\"SCENARIO\", */},\n  /*::[*/0x00b0 /*::]*/: {/* n:\"SxView\", */},\n  /*::[*/0x00b1 /*::]*/: {/* n:\"Sxvd\", */},\n  /*::[*/0x00b2 /*::]*/: {/* n:\"SXVI\", */},\n  /*::[*/0x00b4 /*::]*/: {/* n:\"SxIvd\", */},\n  /*::[*/0x00b5 /*::]*/: {/* n:\"SXLI\", */},\n  /*::[*/0x00b6 /*::]*/: {/* n:\"SXPI\", */},\n  /*::[*/0x00b8 /*::]*/: {/* n:\"DocRoute\", */},\n  /*::[*/0x00b9 /*::]*/: {/* n:\"RecipName\", */},\n  /*::[*/0x00bd /*::]*/: {\n    /* n:\"MulRk\", */f: parse_MulRk\n  },\n  /*::[*/0x00be /*::]*/: {\n    /* n:\"MulBlank\", */f: parse_MulBlank\n  },\n  /*::[*/0x00c1 /*::]*/: {\n    /* n:\"Mms\", */f: parsenoop2\n  },\n  /*::[*/0x00c5 /*::]*/: {/* n:\"SXDI\", */},\n  /*::[*/0x00c6 /*::]*/: {/* n:\"SXDB\", */},\n  /*::[*/0x00c7 /*::]*/: {/* n:\"SXFDB\", */},\n  /*::[*/0x00c8 /*::]*/: {/* n:\"SXDBB\", */},\n  /*::[*/0x00c9 /*::]*/: {/* n:\"SXNum\", */},\n  /*::[*/0x00ca /*::]*/: {\n    /* n:\"SxBool\", */f: parsebool\n  },\n  /*::[*/0x00cb /*::]*/: {/* n:\"SxErr\", */},\n  /*::[*/0x00cc /*::]*/: {/* n:\"SXInt\", */},\n  /*::[*/0x00cd /*::]*/: {/* n:\"SXString\", */},\n  /*::[*/0x00ce /*::]*/: {/* n:\"SXDtr\", */},\n  /*::[*/0x00cf /*::]*/: {/* n:\"SxNil\", */},\n  /*::[*/0x00d0 /*::]*/: {/* n:\"SXTbl\", */},\n  /*::[*/0x00d1 /*::]*/: {/* n:\"SXTBRGIITM\", */},\n  /*::[*/0x00d2 /*::]*/: {/* n:\"SxTbpg\", */},\n  /*::[*/0x00d3 /*::]*/: {/* n:\"ObProj\", */},\n  /*::[*/0x00d5 /*::]*/: {/* n:\"SXStreamID\", */},\n  /*::[*/0x00d7 /*::]*/: {/* n:\"DBCell\", */},\n  /*::[*/0x00d8 /*::]*/: {/* n:\"SXRng\", */},\n  /*::[*/0x00d9 /*::]*/: {/* n:\"SxIsxoper\", */},\n  /*::[*/0x00da /*::]*/: {\n    /* n:\"BookBool\", */f: parseuint16\n  },\n  /*::[*/0x00dc /*::]*/: {/* n:\"DbOrParamQry\", */},\n  /*::[*/0x00dd /*::]*/: {\n    /* n:\"ScenarioProtect\", */f: parsebool\n  },\n  /*::[*/0x00de /*::]*/: {/* n:\"OleObjectSize\", */},\n  /*::[*/0x00e0 /*::]*/: {\n    /* n:\"XF\", */f: parse_XF\n  },\n  /*::[*/0x00e1 /*::]*/: {\n    /* n:\"InterfaceHdr\", */f: parse_InterfaceHdr\n  },\n  /*::[*/0x00e2 /*::]*/: {\n    /* n:\"InterfaceEnd\", */f: parsenoop2\n  },\n  /*::[*/0x00e3 /*::]*/: {/* n:\"SXVS\", */},\n  /*::[*/0x00e5 /*::]*/: {\n    /* n:\"MergeCells\", */f: parse_MergeCells\n  },\n  /*::[*/0x00e9 /*::]*/: {/* n:\"BkHim\", */},\n  /*::[*/0x00eb /*::]*/: {/* n:\"MsoDrawingGroup\", */},\n  /*::[*/0x00ec /*::]*/: {/* n:\"MsoDrawing\", */},\n  /*::[*/0x00ed /*::]*/: {/* n:\"MsoDrawingSelection\", */},\n  /*::[*/0x00ef /*::]*/: {/* n:\"PhoneticInfo\", */},\n  /*::[*/0x00f0 /*::]*/: {/* n:\"SxRule\", */},\n  /*::[*/0x00f1 /*::]*/: {/* n:\"SXEx\", */},\n  /*::[*/0x00f2 /*::]*/: {/* n:\"SxFilt\", */},\n  /*::[*/0x00f4 /*::]*/: {/* n:\"SxDXF\", */},\n  /*::[*/0x00f5 /*::]*/: {/* n:\"SxItm\", */},\n  /*::[*/0x00f6 /*::]*/: {/* n:\"SxName\", */},\n  /*::[*/0x00f7 /*::]*/: {/* n:\"SxSelect\", */},\n  /*::[*/0x00f8 /*::]*/: {/* n:\"SXPair\", */},\n  /*::[*/0x00f9 /*::]*/: {/* n:\"SxFmla\", */},\n  /*::[*/0x00fb /*::]*/: {/* n:\"SxFormat\", */},\n  /*::[*/0x00fc /*::]*/: {\n    /* n:\"SST\", */f: parse_SST\n  },\n  /*::[*/0x00fd /*::]*/: {\n    /* n:\"LabelSst\", */f: parse_LabelSst\n  },\n  /*::[*/0x00ff /*::]*/: {\n    /* n:\"ExtSST\", */f: parse_ExtSST\n  },\n  /*::[*/0x0100 /*::]*/: {/* n:\"SXVDEx\", */},\n  /*::[*/0x0103 /*::]*/: {/* n:\"SXFormula\", */},\n  /*::[*/0x0122 /*::]*/: {/* n:\"SXDBEx\", */},\n  /*::[*/0x0137 /*::]*/: {/* n:\"RRDInsDel\", */},\n  /*::[*/0x0138 /*::]*/: {/* n:\"RRDHead\", */},\n  /*::[*/0x013b /*::]*/: {/* n:\"RRDChgCell\", */},\n  /*::[*/0x013d /*::]*/: {\n    /* n:\"RRTabId\", */f: parseuint16a\n  },\n  /*::[*/0x013e /*::]*/: {/* n:\"RRDRenSheet\", */},\n  /*::[*/0x013f /*::]*/: {/* n:\"RRSort\", */},\n  /*::[*/0x0140 /*::]*/: {/* n:\"RRDMove\", */},\n  /*::[*/0x014a /*::]*/: {/* n:\"RRFormat\", */},\n  /*::[*/0x014b /*::]*/: {/* n:\"RRAutoFmt\", */},\n  /*::[*/0x014d /*::]*/: {/* n:\"RRInsertSh\", */},\n  /*::[*/0x014e /*::]*/: {/* n:\"RRDMoveBegin\", */},\n  /*::[*/0x014f /*::]*/: {/* n:\"RRDMoveEnd\", */},\n  /*::[*/0x0150 /*::]*/: {/* n:\"RRDInsDelBegin\", */},\n  /*::[*/0x0151 /*::]*/: {/* n:\"RRDInsDelEnd\", */},\n  /*::[*/0x0152 /*::]*/: {/* n:\"RRDConflict\", */},\n  /*::[*/0x0153 /*::]*/: {/* n:\"RRDDefName\", */},\n  /*::[*/0x0154 /*::]*/: {/* n:\"RRDRstEtxp\", */},\n  /*::[*/0x015f /*::]*/: {/* n:\"LRng\", */},\n  /*::[*/0x0160 /*::]*/: {\n    /* n:\"UsesELFs\", */f: parsebool\n  },\n  /*::[*/0x0161 /*::]*/: {\n    /* n:\"DSF\", */f: parsenoop2\n  },\n  /*::[*/0x0191 /*::]*/: {/* n:\"CUsr\", */},\n  /*::[*/0x0192 /*::]*/: {/* n:\"CbUsr\", */},\n  /*::[*/0x0193 /*::]*/: {/* n:\"UsrInfo\", */},\n  /*::[*/0x0194 /*::]*/: {/* n:\"UsrExcl\", */},\n  /*::[*/0x0195 /*::]*/: {/* n:\"FileLock\", */},\n  /*::[*/0x0196 /*::]*/: {/* n:\"RRDInfo\", */},\n  /*::[*/0x0197 /*::]*/: {/* n:\"BCUsrs\", */},\n  /*::[*/0x0198 /*::]*/: {/* n:\"UsrChk\", */},\n  /*::[*/0x01a9 /*::]*/: {/* n:\"UserBView\", */},\n  /*::[*/0x01aa /*::]*/: {/* n:\"UserSViewBegin\", */},\n  /*::[*/0x01ab /*::]*/: {/* n:\"UserSViewEnd\", */},\n  /*::[*/0x01ac /*::]*/: {/* n:\"RRDUserView\", */},\n  /*::[*/0x01ad /*::]*/: {/* n:\"Qsi\", */},\n  /*::[*/0x01ae /*::]*/: {\n    /* n:\"SupBook\", */f: parse_SupBook\n  },\n  /*::[*/0x01af /*::]*/: {\n    /* n:\"Prot4Rev\", */f: parsebool\n  },\n  /*::[*/0x01b0 /*::]*/: {/* n:\"CondFmt\", */},\n  /*::[*/0x01b1 /*::]*/: {/* n:\"CF\", */},\n  /*::[*/0x01b2 /*::]*/: {/* n:\"DVal\", */},\n  /*::[*/0x01b5 /*::]*/: {/* n:\"DConBin\", */},\n  /*::[*/0x01b6 /*::]*/: {\n    /* n:\"TxO\", */f: parse_TxO\n  },\n  /*::[*/0x01b7 /*::]*/: {\n    /* n:\"RefreshAll\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x01b8 /*::]*/: {\n    /* n:\"HLink\", */f: parse_HLink\n  },\n  /*::[*/0x01b9 /*::]*/: {/* n:\"Lel\", */},\n  /*::[*/0x01ba /*::]*/: {\n    /* n:\"CodeName\", */f: parse_XLUnicodeString\n  },\n  /*::[*/0x01bb /*::]*/: {/* n:\"SXFDBType\", */},\n  /*::[*/0x01bc /*::]*/: {\n    /* n:\"Prot4RevPass\", */f: parseuint16\n  },\n  /*::[*/0x01bd /*::]*/: {/* n:\"ObNoMacros\", */},\n  /*::[*/0x01be /*::]*/: {/* n:\"Dv\", */},\n  /*::[*/0x01c0 /*::]*/: {\n    /* n:\"Excel9File\", */f: parsenoop2\n  },\n  /*::[*/0x01c1 /*::]*/: {\n    /* n:\"RecalcId\", */f: parse_RecalcId,\n    r: 2\n  },\n  /*::[*/0x01c2 /*::]*/: {\n    /* n:\"EntExU2\", */f: parsenoop2\n  },\n  /*::[*/0x0200 /*::]*/: {\n    /* n:\"Dimensions\", */f: parse_Dimensions\n  },\n  /*::[*/0x0201 /*::]*/: {\n    /* n:\"Blank\", */f: parse_Blank\n  },\n  /*::[*/0x0203 /*::]*/: {\n    /* n:\"Number\", */f: parse_Number\n  },\n  /*::[*/0x0204 /*::]*/: {\n    /* n:\"Label\", */f: parse_Label\n  },\n  /*::[*/0x0205 /*::]*/: {\n    /* n:\"BoolErr\", */f: parse_BoolErr\n  },\n  /*::[*/0x0207 /*::]*/: {\n    /* n:\"String\", */f: parse_String\n  },\n  /*::[*/0x0208 /*::]*/: {\n    /* n:\"Row\", */f: parse_Row\n  },\n  /*::[*/0x020b /*::]*/: {/* n:\"Index\", */},\n  /*::[*/0x0221 /*::]*/: {\n    /* n:\"Array\", */f: parse_Array\n  },\n  /*::[*/0x0225 /*::]*/: {\n    /* n:\"DefaultRowHeight\", */f: parse_DefaultRowHeight\n  },\n  /*::[*/0x0236 /*::]*/: {/* n:\"Table\", */},\n  /*::[*/0x023e /*::]*/: {\n    /* n:\"Window2\", */f: parse_Window2\n  },\n  /*::[*/0x027e /*::]*/: {\n    /* n:\"RK\", */f: parse_RK\n  },\n  /*::[*/0x0293 /*::]*/: {/* n:\"Style\", */},\n  /*::[*/0x0418 /*::]*/: {/* n:\"BigName\", */},\n  /*::[*/0x041e /*::]*/: {\n    /* n:\"Format\", */f: parse_Format\n  },\n  /*::[*/0x043c /*::]*/: {/* n:\"ContinueBigName\", */},\n  /*::[*/0x04bc /*::]*/: {\n    /* n:\"ShrFmla\", */f: parse_ShrFmla\n  },\n  /*::[*/0x0800 /*::]*/: {\n    /* n:\"HLinkTooltip\", */f: parse_HLinkTooltip\n  },\n  /*::[*/0x0801 /*::]*/: {/* n:\"WebPub\", */},\n  /*::[*/0x0802 /*::]*/: {/* n:\"QsiSXTag\", */},\n  /*::[*/0x0803 /*::]*/: {/* n:\"DBQueryExt\", */},\n  /*::[*/0x0804 /*::]*/: {/* n:\"ExtString\", */},\n  /*::[*/0x0805 /*::]*/: {/* n:\"TxtQry\", */},\n  /*::[*/0x0806 /*::]*/: {/* n:\"Qsir\", */},\n  /*::[*/0x0807 /*::]*/: {/* n:\"Qsif\", */},\n  /*::[*/0x0808 /*::]*/: {/* n:\"RRDTQSIF\", */},\n  /*::[*/0x0809 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x080a /*::]*/: {/* n:\"OleDbConn\", */},\n  /*::[*/0x080b /*::]*/: {/* n:\"WOpt\", */},\n  /*::[*/0x080c /*::]*/: {/* n:\"SXViewEx\", */},\n  /*::[*/0x080d /*::]*/: {/* n:\"SXTH\", */},\n  /*::[*/0x080e /*::]*/: {/* n:\"SXPIEx\", */},\n  /*::[*/0x080f /*::]*/: {/* n:\"SXVDTEx\", */},\n  /*::[*/0x0810 /*::]*/: {/* n:\"SXViewEx9\", */},\n  /*::[*/0x0812 /*::]*/: {/* n:\"ContinueFrt\", */},\n  /*::[*/0x0813 /*::]*/: {/* n:\"RealTimeData\", */},\n  /*::[*/0x0850 /*::]*/: {/* n:\"ChartFrtInfo\", */},\n  /*::[*/0x0851 /*::]*/: {/* n:\"FrtWrapper\", */},\n  /*::[*/0x0852 /*::]*/: {/* n:\"StartBlock\", */},\n  /*::[*/0x0853 /*::]*/: {/* n:\"EndBlock\", */},\n  /*::[*/0x0854 /*::]*/: {/* n:\"StartObject\", */},\n  /*::[*/0x0855 /*::]*/: {/* n:\"EndObject\", */},\n  /*::[*/0x0856 /*::]*/: {/* n:\"CatLab\", */},\n  /*::[*/0x0857 /*::]*/: {/* n:\"YMult\", */},\n  /*::[*/0x0858 /*::]*/: {/* n:\"SXViewLink\", */},\n  /*::[*/0x0859 /*::]*/: {/* n:\"PivotChartBits\", */},\n  /*::[*/0x085a /*::]*/: {/* n:\"FrtFontList\", */},\n  /*::[*/0x0862 /*::]*/: {/* n:\"SheetExt\", */},\n  /*::[*/0x0863 /*::]*/: {\n    /* n:\"BookExt\", */r: 12\n  },\n  /*::[*/0x0864 /*::]*/: {/* n:\"SXAddl\", */},\n  /*::[*/0x0865 /*::]*/: {/* n:\"CrErr\", */},\n  /*::[*/0x0866 /*::]*/: {/* n:\"HFPicture\", */},\n  /*::[*/0x0867 /*::]*/: {\n    /* n:\"FeatHdr\", */f: parsenoop2\n  },\n  /*::[*/0x0868 /*::]*/: {/* n:\"Feat\", */},\n  /*::[*/0x086a /*::]*/: {/* n:\"DataLabExt\", */},\n  /*::[*/0x086b /*::]*/: {/* n:\"DataLabExtContents\", */},\n  /*::[*/0x086c /*::]*/: {/* n:\"CellWatch\", */},\n  /*::[*/0x0871 /*::]*/: {/* n:\"FeatHdr11\", */},\n  /*::[*/0x0872 /*::]*/: {/* n:\"Feature11\", */},\n  /*::[*/0x0874 /*::]*/: {/* n:\"DropDownObjIds\", */},\n  /*::[*/0x0875 /*::]*/: {/* n:\"ContinueFrt11\", */},\n  /*::[*/0x0876 /*::]*/: {/* n:\"DConn\", */},\n  /*::[*/0x0877 /*::]*/: {/* n:\"List12\", */},\n  /*::[*/0x0878 /*::]*/: {/* n:\"Feature12\", */},\n  /*::[*/0x0879 /*::]*/: {/* n:\"CondFmt12\", */},\n  /*::[*/0x087a /*::]*/: {/* n:\"CF12\", */},\n  /*::[*/0x087b /*::]*/: {/* n:\"CFEx\", */},\n  /*::[*/0x087c /*::]*/: {\n    /* n:\"XFCRC\", */f: parse_XFCRC,\n    r: 12\n  },\n  /*::[*/0x087d /*::]*/: {\n    /* n:\"XFExt\", */f: parse_XFExt,\n    r: 12\n  },\n  /*::[*/0x087e /*::]*/: {/* n:\"AutoFilter12\", */},\n  /*::[*/0x087f /*::]*/: {/* n:\"ContinueFrt12\", */},\n  /*::[*/0x0884 /*::]*/: {/* n:\"MDTInfo\", */},\n  /*::[*/0x0885 /*::]*/: {/* n:\"MDXStr\", */},\n  /*::[*/0x0886 /*::]*/: {/* n:\"MDXTuple\", */},\n  /*::[*/0x0887 /*::]*/: {/* n:\"MDXSet\", */},\n  /*::[*/0x0888 /*::]*/: {/* n:\"MDXProp\", */},\n  /*::[*/0x0889 /*::]*/: {/* n:\"MDXKPI\", */},\n  /*::[*/0x088a /*::]*/: {/* n:\"MDB\", */},\n  /*::[*/0x088b /*::]*/: {/* n:\"PLV\", */},\n  /*::[*/0x088c /*::]*/: {\n    /* n:\"Compat12\", */f: parsebool,\n    r: 12\n  },\n  /*::[*/0x088d /*::]*/: {/* n:\"DXF\", */},\n  /*::[*/0x088e /*::]*/: {\n    /* n:\"TableStyles\", */r: 12\n  },\n  /*::[*/0x088f /*::]*/: {/* n:\"TableStyle\", */},\n  /*::[*/0x0890 /*::]*/: {/* n:\"TableStyleElement\", */},\n  /*::[*/0x0892 /*::]*/: {/* n:\"StyleExt\", */},\n  /*::[*/0x0893 /*::]*/: {/* n:\"NamePublish\", */},\n  /*::[*/0x0894 /*::]*/: {\n    /* n:\"NameCmt\", */f: parse_NameCmt,\n    r: 12\n  },\n  /*::[*/0x0895 /*::]*/: {/* n:\"SortData\", */},\n  /*::[*/0x0896 /*::]*/: {\n    /* n:\"Theme\", */f: parse_Theme,\n    r: 12\n  },\n  /*::[*/0x0897 /*::]*/: {/* n:\"GUIDTypeLib\", */},\n  /*::[*/0x0898 /*::]*/: {/* n:\"FnGrp12\", */},\n  /*::[*/0x0899 /*::]*/: {/* n:\"NameFnGrp12\", */},\n  /*::[*/0x089a /*::]*/: {\n    /* n:\"MTRSettings\", */f: parse_MTRSettings,\n    r: 12\n  },\n  /*::[*/0x089b /*::]*/: {\n    /* n:\"CompressPictures\", */f: parsenoop2\n  },\n  /*::[*/0x089c /*::]*/: {/* n:\"HeaderFooter\", */},\n  /*::[*/0x089d /*::]*/: {/* n:\"CrtLayout12\", */},\n  /*::[*/0x089e /*::]*/: {/* n:\"CrtMlFrt\", */},\n  /*::[*/0x089f /*::]*/: {/* n:\"CrtMlFrtContinue\", */},\n  /*::[*/0x08a3 /*::]*/: {\n    /* n:\"ForceFullCalculation\", */f: parse_ForceFullCalculation\n  },\n  /*::[*/0x08a4 /*::]*/: {/* n:\"ShapePropsStream\", */},\n  /*::[*/0x08a5 /*::]*/: {/* n:\"TextPropsStream\", */},\n  /*::[*/0x08a6 /*::]*/: {/* n:\"RichTextStream\", */},\n  /*::[*/0x08a7 /*::]*/: {/* n:\"CrtLayout12A\", */},\n  /*::[*/0x1001 /*::]*/: {/* n:\"Units\", */},\n  /*::[*/0x1002 /*::]*/: {/* n:\"Chart\", */},\n  /*::[*/0x1003 /*::]*/: {/* n:\"Series\", */},\n  /*::[*/0x1006 /*::]*/: {/* n:\"DataFormat\", */},\n  /*::[*/0x1007 /*::]*/: {/* n:\"LineFormat\", */},\n  /*::[*/0x1009 /*::]*/: {/* n:\"MarkerFormat\", */},\n  /*::[*/0x100a /*::]*/: {/* n:\"AreaFormat\", */},\n  /*::[*/0x100b /*::]*/: {/* n:\"PieFormat\", */},\n  /*::[*/0x100c /*::]*/: {/* n:\"AttachedLabel\", */},\n  /*::[*/0x100d /*::]*/: {/* n:\"SeriesText\", */},\n  /*::[*/0x1014 /*::]*/: {/* n:\"ChartFormat\", */},\n  /*::[*/0x1015 /*::]*/: {/* n:\"Legend\", */},\n  /*::[*/0x1016 /*::]*/: {/* n:\"SeriesList\", */},\n  /*::[*/0x1017 /*::]*/: {/* n:\"Bar\", */},\n  /*::[*/0x1018 /*::]*/: {/* n:\"Line\", */},\n  /*::[*/0x1019 /*::]*/: {/* n:\"Pie\", */},\n  /*::[*/0x101a /*::]*/: {/* n:\"Area\", */},\n  /*::[*/0x101b /*::]*/: {/* n:\"Scatter\", */},\n  /*::[*/0x101c /*::]*/: {/* n:\"CrtLine\", */},\n  /*::[*/0x101d /*::]*/: {/* n:\"Axis\", */},\n  /*::[*/0x101e /*::]*/: {/* n:\"Tick\", */},\n  /*::[*/0x101f /*::]*/: {/* n:\"ValueRange\", */},\n  /*::[*/0x1020 /*::]*/: {/* n:\"CatSerRange\", */},\n  /*::[*/0x1021 /*::]*/: {/* n:\"AxisLine\", */},\n  /*::[*/0x1022 /*::]*/: {/* n:\"CrtLink\", */},\n  /*::[*/0x1024 /*::]*/: {/* n:\"DefaultText\", */},\n  /*::[*/0x1025 /*::]*/: {/* n:\"Text\", */},\n  /*::[*/0x1026 /*::]*/: {\n    /* n:\"FontX\", */f: parseuint16\n  },\n  /*::[*/0x1027 /*::]*/: {/* n:\"ObjectLink\", */},\n  /*::[*/0x1032 /*::]*/: {/* n:\"Frame\", */},\n  /*::[*/0x1033 /*::]*/: {/* n:\"Begin\", */},\n  /*::[*/0x1034 /*::]*/: {/* n:\"End\", */},\n  /*::[*/0x1035 /*::]*/: {/* n:\"PlotArea\", */},\n  /*::[*/0x103a /*::]*/: {/* n:\"Chart3d\", */},\n  /*::[*/0x103c /*::]*/: {/* n:\"PicF\", */},\n  /*::[*/0x103d /*::]*/: {/* n:\"DropBar\", */},\n  /*::[*/0x103e /*::]*/: {/* n:\"Radar\", */},\n  /*::[*/0x103f /*::]*/: {/* n:\"Surf\", */},\n  /*::[*/0x1040 /*::]*/: {/* n:\"RadarArea\", */},\n  /*::[*/0x1041 /*::]*/: {/* n:\"AxisParent\", */},\n  /*::[*/0x1043 /*::]*/: {/* n:\"LegendException\", */},\n  /*::[*/0x1044 /*::]*/: {\n    /* n:\"ShtProps\", */f: parse_ShtProps\n  },\n  /*::[*/0x1045 /*::]*/: {/* n:\"SerToCrt\", */},\n  /*::[*/0x1046 /*::]*/: {/* n:\"AxesUsed\", */},\n  /*::[*/0x1048 /*::]*/: {/* n:\"SBaseRef\", */},\n  /*::[*/0x104a /*::]*/: {/* n:\"SerParent\", */},\n  /*::[*/0x104b /*::]*/: {/* n:\"SerAuxTrend\", */},\n  /*::[*/0x104e /*::]*/: {/* n:\"IFmtRecord\", */},\n  /*::[*/0x104f /*::]*/: {/* n:\"Pos\", */},\n  /*::[*/0x1050 /*::]*/: {/* n:\"AlRuns\", */},\n  /*::[*/0x1051 /*::]*/: {/* n:\"BRAI\", */},\n  /*::[*/0x105b /*::]*/: {/* n:\"SerAuxErrBar\", */},\n  /*::[*/0x105c /*::]*/: {\n    /* n:\"ClrtClient\", */f: parse_ClrtClient\n  },\n  /*::[*/0x105d /*::]*/: {/* n:\"SerFmt\", */},\n  /*::[*/0x105f /*::]*/: {/* n:\"Chart3DBarShape\", */},\n  /*::[*/0x1060 /*::]*/: {/* n:\"Fbi\", */},\n  /*::[*/0x1061 /*::]*/: {/* n:\"BopPop\", */},\n  /*::[*/0x1062 /*::]*/: {/* n:\"AxcExt\", */},\n  /*::[*/0x1063 /*::]*/: {/* n:\"Dat\", */},\n  /*::[*/0x1064 /*::]*/: {/* n:\"PlotGrowth\", */},\n  /*::[*/0x1065 /*::]*/: {/* n:\"SIIndex\", */},\n  /*::[*/0x1066 /*::]*/: {/* n:\"GelFrame\", */},\n  /*::[*/0x1067 /*::]*/: {/* n:\"BopPopCustom\", */},\n  /*::[*/0x1068 /*::]*/: {/* n:\"Fbi2\", */},\n  /*::[*/0x0000 /*::]*/: {\n    /* n:\"Dimensions\", */f: parse_Dimensions\n  },\n  /*::[*/0x0001 /*::]*/: {/* n:\"BIFF2BLANK\", */},\n  /*::[*/0x0002 /*::]*/: {\n    /* n:\"BIFF2INT\", */f: parse_BIFF2INT\n  },\n  /*::[*/0x0003 /*::]*/: {\n    /* n:\"BIFF2NUM\", */f: parse_BIFF2NUM\n  },\n  /*::[*/0x0004 /*::]*/: {\n    /* n:\"BIFF2STR\", */f: parse_BIFF2STR\n  },\n  /*::[*/0x0005 /*::]*/: {\n    /* n:\"BoolErr\", */f: parse_BoolErr\n  },\n  /*::[*/0x0007 /*::]*/: {\n    /* n:\"String\", */f: parse_BIFF2STRING\n  },\n  /*::[*/0x0008 /*::]*/: {/* n:\"BIFF2ROW\", */},\n  /*::[*/0x0009 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x000b /*::]*/: {/* n:\"Index\", */},\n  /*::[*/0x0016 /*::]*/: {\n    /* n:\"ExternCount\", */f: parseuint16\n  },\n  /*::[*/0x001e /*::]*/: {\n    /* n:\"BIFF2FORMAT\", */f: parse_BIFF2Format\n  },\n  /*::[*/0x001f /*::]*/: {/* n:\"BIFF2FMTCNT\", */},\n  /* 16-bit cnt of BIFF2FORMAT records */\n  /*::[*/0x0020 /*::]*/: {/* n:\"BIFF2COLINFO\", */},\n  /*::[*/0x0021 /*::]*/: {\n    /* n:\"Array\", */f: parse_Array\n  },\n  /*::[*/0x0024 /*::]*/: {/* n:\"COLWIDTH\", */},\n  /*::[*/0x0025 /*::]*/: {\n    /* n:\"DefaultRowHeight\", */f: parse_DefaultRowHeight\n  },\n  // 0x2c ??\n  // 0x2d ??\n  // 0x2e ??\n  // 0x30 FONTCOUNT: number of fonts\n  /*::[*/\n  0x0032 /*::]*/: {\n    /* n:\"BIFF2FONTXTRA\", */f: parse_BIFF2FONTXTRA\n  },\n  // 0x35: INFOOPTS\n  // 0x36: TABLE (BIFF2 only)\n  // 0x37: TABLE2 (BIFF2 only)\n  // 0x38: WNDESK\n  // 0x39 ??\n  // 0x3a: BEGINPREF\n  // 0x3b: ENDPREF\n  /*::[*/\n  0x003e /*::]*/: {/* n:\"BIFF2WINDOW2\", */},\n  // 0x3f ??\n  // 0x46: SHOWSCROLL\n  // 0x47: SHOWFORMULA\n  // 0x48: STATUSBAR\n  // 0x49: SHORTMENUS\n  // 0x4A:\n  // 0x4B:\n  // 0x4C:\n  // 0x4E:\n  // 0x4F:\n  // 0x58: TOOLBAR (BIFF3)\n\n  /* - - - */\n  /*::[*/\n  0x0034 /*::]*/: {/* n:\"DDEObjName\", */},\n  /*::[*/0x0043 /*::]*/: {/* n:\"BIFF2XF\", */},\n  /*::[*/0x0044 /*::]*/: {\n    /* n:\"BIFF2XFINDEX\", */f: parseuint16\n  },\n  /*::[*/0x0045 /*::]*/: {/* n:\"BIFF2FONTCLR\", */},\n  /*::[*/0x0056 /*::]*/: {/* n:\"BIFF4FMTCNT\", */},\n  /* 16-bit cnt, similar to BIFF2 */\n  /*::[*/0x007e /*::]*/: {/* n:\"RK\", */},\n  /* Not necessarily same as 0x027e */\n  /*::[*/0x007f /*::]*/: {\n    /* n:\"ImData\", */f: parse_ImData\n  },\n  /*::[*/0x0087 /*::]*/: {/* n:\"Addin\", */},\n  /*::[*/0x0088 /*::]*/: {/* n:\"Edg\", */},\n  /*::[*/0x0089 /*::]*/: {/* n:\"Pub\", */},\n  // 0x8A\n  // 0x8B LH: alternate menu key flag (BIFF3/4)\n  // 0x8E\n  // 0x8F\n  /*::[*/\n  0x0091 /*::]*/: {/* n:\"Sub\", */},\n  // 0x93 STYLE\n  /*::[*/\n  0x0094 /*::]*/: {/* n:\"LHRecord\", */},\n  /*::[*/0x0095 /*::]*/: {/* n:\"LHNGraph\", */},\n  /*::[*/0x0096 /*::]*/: {/* n:\"Sound\", */},\n  // 0xA2 FNPROTO: function prototypes (BIFF4)\n  // 0xA3\n  // 0xA8\n  /*::[*/\n  0x00a9 /*::]*/: {/* n:\"CoordList\", */},\n  /*::[*/0x00ab /*::]*/: {/* n:\"GCW\", */},\n  /*::[*/0x00bc /*::]*/: {/* n:\"ShrFmla\", */},\n  /* Not necessarily same as 0x04bc */\n  /*::[*/0x00bf /*::]*/: {/* n:\"ToolbarHdr\", */},\n  /*::[*/0x00c0 /*::]*/: {/* n:\"ToolbarEnd\", */},\n  /*::[*/0x00c2 /*::]*/: {/* n:\"AddMenu\", */},\n  /*::[*/0x00c3 /*::]*/: {/* n:\"DelMenu\", */},\n  /*::[*/0x00d6 /*::]*/: {\n    /* n:\"RString\", */f: parse_RString\n  },\n  /*::[*/0x00df /*::]*/: {/* n:\"UDDesc\", */},\n  /*::[*/0x00ea /*::]*/: {/* n:\"TabIdConf\", */},\n  /*::[*/0x0162 /*::]*/: {/* n:\"XL5Modify\", */},\n  /*::[*/0x01a5 /*::]*/: {/* n:\"FileSharing2\", */},\n  /*::[*/0x0206 /*::]*/: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  /*::[*/0x0209 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x0218 /*::]*/: {\n    /* n:\"Lbl\", */f: parse_Lbl\n  },\n  /*::[*/0x0223 /*::]*/: {\n    /* n:\"ExternName\", */f: parse_ExternName\n  },\n  /*::[*/0x0231 /*::]*/: {/* n:\"Font\", */},\n  /*::[*/0x0243 /*::]*/: {/* n:\"BIFF3XF\", */},\n  /*::[*/0x0406 /*::]*/: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  /*::[*/0x0409 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x0443 /*::]*/: {/* n:\"BIFF4XF\", */},\n  /*::[*/0x086d /*::]*/: {/* n:\"FeatInfo\", */},\n  /*::[*/0x0873 /*::]*/: {/* n:\"FeatInfo11\", */},\n  /*::[*/0x0881 /*::]*/: {/* n:\"SXAddl12\", */},\n  /*::[*/0x08c0 /*::]*/: {/* n:\"AutoWebPub\", */},\n  /*::[*/0x08c1 /*::]*/: {/* n:\"ListObj\", */},\n  /*::[*/0x08c2 /*::]*/: {/* n:\"ListField\", */},\n  /*::[*/0x08c3 /*::]*/: {/* n:\"ListDV\", */},\n  /*::[*/0x08c4 /*::]*/: {/* n:\"ListCondFmt\", */},\n  /*::[*/0x08c5 /*::]*/: {/* n:\"ListCF\", */},\n  /*::[*/0x08c6 /*::]*/: {/* n:\"FMQry\", */},\n  /*::[*/0x08c7 /*::]*/: {/* n:\"FMSQry\", */},\n  /*::[*/0x08c8 /*::]*/: {/* n:\"PLV\", */},\n  /*::[*/0x08c9 /*::]*/: {/* n:\"LnExt\", */},\n  /*::[*/0x08ca /*::]*/: {/* n:\"MkrExt\", */},\n  /*::[*/0x08cb /*::]*/: {/* n:\"CrtCoopt\", */},\n  /*::[*/0x08d6 /*::]*/: {\n    /* n:\"FRTArchId$\", */r: 12\n  },\n  /*::[*/0x7262 /*::]*/: {}\n};\nfunction write_biff_rec(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) /*:void*/{\n  var t /*:number*/ = type;\n  if (isNaN(t)) return;\n  var len = length || (payload || []).length || 0;\n  var o = ba.next(4);\n  o.write_shift(2, t);\n  o.write_shift(2, len);\n  if ( /*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\nfunction write_biff_continue(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) /*:void*/{\n  var len = length || (payload || []).length || 0;\n  if (len <= 8224) return write_biff_rec(ba, type, payload, len);\n  var t = type;\n  if (isNaN(t)) return;\n  var parts = payload.parts || [],\n    sidx = 0;\n  var i = 0,\n    w = 0;\n  while (w + (parts[sidx] || 8224) <= 8224) {\n    w += parts[sidx] || 8224;\n    sidx++;\n  }\n  var o = ba.next(4);\n  o.write_shift(2, t);\n  o.write_shift(2, w);\n  ba.push(payload.slice(i, i + w));\n  i += w;\n  while (i < len) {\n    o = ba.next(4);\n    o.write_shift(2, 0x3c); // TODO: figure out correct continue type\n    w = 0;\n    while (w + (parts[sidx] || 8224) <= 8224) {\n      w += parts[sidx] || 8224;\n      sidx++;\n    }\n    o.write_shift(2, w);\n    ba.push(payload.slice(i, i + w));\n    i += w;\n  }\n}\nfunction write_BIFF2Cell(out, r /*:number*/, c /*:number*/) {\n  if (!out) out = new_buf(7);\n  out.write_shift(2, r);\n  out.write_shift(2, c);\n  out.write_shift(2, 0);\n  out.write_shift(1, 0);\n  return out;\n}\nfunction write_BIFF2BERR(r /*:number*/, c /*:number*/, val, t /*:?string*/) {\n  var out = new_buf(9);\n  write_BIFF2Cell(out, r, c);\n  write_Bes(val, t || 'b', out);\n  return out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r /*:number*/, c /*:number*/, val) {\n  var out = new_buf(8 + 2 * val.length);\n  write_BIFF2Cell(out, r, c);\n  out.write_shift(1, val.length);\n  out.write_shift(val.length, val, 'sbcs');\n  return out.l < out.length ? out.slice(0, out.l) : out;\n}\nfunction write_ws_biff2_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/ /*::, opts*/) {\n  if (cell.v != null) switch (cell.t) {\n    case 'd':\n    case 'n':\n      var v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n      if (v == (v | 0) && v >= 0 && v < 65536) write_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));else write_biff_rec(ba, 0x0003, write_BIFF2NUM(R, C, v));\n      return;\n    case 'b':\n    case 'e':\n      write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t));\n      return;\n    /* TODO: codepage, sst */\n    case 's':\n    case 'str':\n      write_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, (cell.v || \"\").slice(0, 255)));\n      return;\n  }\n  write_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\nfunction write_ws_biff2(ba /*:BufArray*/, ws /*:Worksheet*/, idx /*:number*/, opts /*::, wb:Workbook*/) {\n  var dense = Array.isArray(ws);\n  var range = safe_decode_range(ws['!ref'] || \"A1\"),\n    ref /*:string*/,\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  if (range.e.c > 0xFF || range.e.r > 0x3FFF) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n    range.e.c = Math.min(range.e.c, 0xFF);\n    range.e.r = Math.min(range.e.c, 0x3FFF);\n    ref = encode_range(range);\n  }\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    rr = encode_row(R);\n    for (var C = range.s.c; C <= range.e.c; ++C) {\n      if (R === range.s.r) cols[C] = encode_col(C);\n      ref = cols[C] + rr;\n      var cell = dense ? (ws[R] || [])[C] : ws[ref];\n      if (!cell) continue;\n      /* write cell */\n      write_ws_biff2_cell(ba, cell, R, C, opts);\n    }\n  }\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  var o = opts || {};\n  if (DENSE != null && o.dense == null) o.dense = DENSE;\n  var ba = buf_array();\n  var idx = 0;\n  for (var i = 0; i < wb.SheetNames.length; ++i) if (wb.SheetNames[i] == o.sheet) idx = i;\n  if (idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n  write_biff_rec(ba, o.biff == 4 ? 0x0409 : o.biff == 3 ? 0x0209 : 0x0009, write_BOF(wb, 0x10, o));\n  /* ... */\n  write_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n  /* ... */\n  write_biff_rec(ba, 0x000A);\n  return ba.end();\n}\nfunction write_FONTS_biff8(ba, data, opts) {\n  write_biff_rec(ba, 0x0031 /* Font */, write_Font({\n    sz: 12,\n    color: {\n      theme: 1\n    },\n    name: \"Arial\",\n    family: 2,\n    scheme: \"minor\"\n  }, opts));\n}\nfunction write_FMTS_biff8(ba, NF /*:?SSFTable*/, opts) {\n  if (!NF) return;\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) write_biff_rec(ba, 0x041E /* Format */, write_Format(i, NF[i], opts));\n  });\n}\nfunction write_FEAT(ba, ws) {\n  /* [MS-XLS] 2.4.112 */\n  var o = new_buf(19);\n  o.write_shift(4, 0x867);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 3);\n  o.write_shift(1, 1);\n  o.write_shift(4, 0);\n  write_biff_rec(ba, 0x0867 /* FeatHdr */, o);\n  /* [MS-XLS] 2.4.111 */\n  o = new_buf(39);\n  o.write_shift(4, 0x868);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 3);\n  o.write_shift(1, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 1);\n  o.write_shift(4, 4);\n  o.write_shift(2, 0);\n  write_Ref8U(safe_decode_range(ws['!ref'] || \"A1\"), o);\n  o.write_shift(4, 4);\n  write_biff_rec(ba, 0x0868 /* Feat */, o);\n}\nfunction write_CELLXFS_biff8(ba, opts) {\n  for (var i = 0; i < 16; ++i) write_biff_rec(ba, 0x00e0 /* XF */, write_XF({\n    numFmtId: 0,\n    style: true\n  }, 0, opts));\n  opts.cellXfs.forEach(function (c) {\n    write_biff_rec(ba, 0x00e0 /* XF */, write_XF(c, 0, opts));\n  });\n}\nfunction write_ws_biff8_hlinks(ba /*:BufArray*/, ws) {\n  for (var R = 0; R < ws['!links'].length; ++R) {\n    var HL = ws['!links'][R];\n    write_biff_rec(ba, 0x01b8 /* HLink */, write_HLink(HL));\n    if (HL[1].Tooltip) write_biff_rec(ba, 0x0800 /* HLinkTooltip */, write_HLinkTooltip(HL));\n  }\n  delete ws['!links'];\n}\nfunction write_ws_cols_biff8(ba, cols) {\n  if (!cols) return;\n  var cnt = 0;\n  cols.forEach(function (col, idx) {\n    if (++cnt <= 256 && col) {\n      write_biff_rec(ba, 0x007d /* ColInfo */, write_ColInfo(col_obj_w(idx, col), idx));\n    }\n  });\n}\nfunction write_ws_biff8_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts) {\n  var os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n  if (cell.v == null && !cell.bf) {\n    write_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n    return;\n  }\n  if (cell.bf) write_biff_rec(ba, 0x0006 /* Formula */, write_Formula(cell, R, C, opts, os));else switch (cell.t) {\n    case 'd':\n    case 'n':\n      var v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n      /* TODO: emit RK as appropriate */\n      write_biff_rec(ba, 0x0203 /* Number */, write_Number(R, C, v, os, opts));\n      break;\n    case 'b':\n    case 'e':\n      write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n      break;\n    /* TODO: codepage, sst */\n    case 's':\n    case 'str':\n      if (opts.bookSST) {\n        var isst = get_sst_id(opts.Strings, cell.v, opts.revStrings);\n        write_biff_rec(ba, 0x00fd /* LabelSst */, write_LabelSst(R, C, isst, os, opts));\n      } else write_biff_rec(ba, 0x0204 /* Label */, write_Label(R, C, (cell.v || \"\").slice(0, 255), os, opts));\n      break;\n    default:\n      write_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n  }\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx /*:number*/, opts, wb /*:Workbook*/) {\n  var ba = buf_array();\n  var s = wb.SheetNames[idx],\n    ws = wb.Sheets[s] || {};\n  var _WB /*:WBWBProps*/ = (wb || {}).Workbook || {} /*:any*/;\n  var _sheet /*:WBWSProp*/ = (_WB.Sheets || [])[idx] || {} /*:any*/;\n  var dense = Array.isArray(ws);\n  var b8 = opts.biff == 8;\n  var ref /*:string*/,\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  var range = safe_decode_range(ws['!ref'] || \"A1\");\n  var MAX_ROWS = b8 ? 65536 : 16384;\n  if (range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n    range.e.c = Math.min(range.e.c, 0xFF);\n    range.e.r = Math.min(range.e.c, MAX_ROWS - 1);\n  }\n  write_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n  /* [Uncalced] Index */\n  write_biff_rec(ba, 0x000d /* CalcMode */, writeuint16(1));\n  write_biff_rec(ba, 0x000c /* CalcCount */, writeuint16(100));\n  write_biff_rec(ba, 0x000f /* CalcRefMode */, writebool(true));\n  write_biff_rec(ba, 0x0011 /* CalcIter */, writebool(false));\n  write_biff_rec(ba, 0x0010 /* CalcDelta */, write_Xnum(0.001));\n  write_biff_rec(ba, 0x005f /* CalcSaveRecalc */, writebool(true));\n  write_biff_rec(ba, 0x002a /* PrintRowCol */, writebool(false));\n  write_biff_rec(ba, 0x002b /* PrintGrid */, writebool(false));\n  write_biff_rec(ba, 0x0082 /* GridSet */, writeuint16(1));\n  write_biff_rec(ba, 0x0080 /* Guts */, write_Guts([0, 0]));\n  /* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n  /* Header (string) */\n  /* Footer (string) */\n  write_biff_rec(ba, 0x0083 /* HCenter */, writebool(false));\n  write_biff_rec(ba, 0x0084 /* VCenter */, writebool(false));\n  /* ... */\n  if (b8) write_ws_cols_biff8(ba, ws[\"!cols\"]);\n  /* ... */\n  write_biff_rec(ba, 0x200, write_Dimensions(range, opts));\n  /* ... */\n\n  if (b8) ws['!links'] = [];\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    rr = encode_row(R);\n    for (var C = range.s.c; C <= range.e.c; ++C) {\n      if (R === range.s.r) cols[C] = encode_col(C);\n      ref = cols[C] + rr;\n      var cell = dense ? (ws[R] || [])[C] : ws[ref];\n      if (!cell) continue;\n      /* write cell */\n      write_ws_biff8_cell(ba, cell, R, C, opts);\n      if (b8 && cell.l) ws['!links'].push([ref, cell.l]);\n    }\n  }\n  var cname /*:string*/ = _sheet.CodeName || _sheet.name || s;\n  /* ... */\n  if (b8) write_biff_rec(ba, 0x023e /* Window2 */, write_Window2((_WB.Views || [])[0]));\n  /* ... */\n  if (b8 && (ws['!merges'] || []).length) write_biff_rec(ba, 0x00e5 /* MergeCells */, write_MergeCells(ws['!merges']));\n  /* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n  if (b8) write_ws_biff8_hlinks(ba, ws);\n  /* [DVAL] */\n  write_biff_rec(ba, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n  /* *WebPub *CellWatch [SheetExt] */\n  if (b8) write_FEAT(ba, ws);\n  /* *FEAT11 *RECORD12 */\n  write_biff_rec(ba, 0x000a /* EOF */);\n  return ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb /*:Workbook*/, bufs, opts /*:WriteOpts*/) {\n  var A = buf_array();\n  var _WB /*:WBWBProps*/ = (wb || {}).Workbook || {} /*:any*/;\n  var _sheets /*:Array<WBWSProp>*/ = _WB.Sheets || [];\n  var _wb /*:WBProps*/ = /*::((*/_WB.WBProps || {/*::CodeName:\"ThisWorkbook\"*/} /*:: ):any)*/;\n  var b8 = opts.biff == 8,\n    b5 = opts.biff == 5;\n  write_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n  if (opts.bookType == \"xla\") write_biff_rec(A, 0x0087 /* Addin */);\n  write_biff_rec(A, 0x00e1 /* InterfaceHdr */, b8 ? writeuint16(0x04b0) : null);\n  write_biff_rec(A, 0x00c1 /* Mms */, writezeroes(2));\n  if (b5) write_biff_rec(A, 0x00bf /* ToolbarHdr */);\n  if (b5) write_biff_rec(A, 0x00c0 /* ToolbarEnd */);\n  write_biff_rec(A, 0x00e2 /* InterfaceEnd */);\n  write_biff_rec(A, 0x005c /* WriteAccess */, write_WriteAccess(\"SheetJS\", opts));\n  /* [FileSharing] */\n  write_biff_rec(A, 0x0042 /* CodePage */, writeuint16(b8 ? 0x04b0 : 0x04E4));\n  /* *2047 Lel */\n  if (b8) write_biff_rec(A, 0x0161 /* DSF */, writeuint16(0));\n  if (b8) write_biff_rec(A, 0x01c0 /* Excel9File */);\n  write_biff_rec(A, 0x013d /* RRTabId */, write_RRTabId(wb.SheetNames.length));\n  if (b8 && wb.vbaraw) write_biff_rec(A, 0x00d3 /* ObProj */);\n  /* [ObNoMacros] */\n  if (b8 && wb.vbaraw) {\n    var cname /*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n    write_biff_rec(A, 0x01ba /* CodeName */, write_XLUnicodeString(cname, opts));\n  }\n  write_biff_rec(A, 0x009c /* BuiltInFnGroupCount */, writeuint16(0x11));\n  /* *FnGroupName *FnGrp12 */\n  /* *Lbl */\n  /* [OleObjectSize] */\n  write_biff_rec(A, 0x0019 /* WinProtect */, writebool(false));\n  write_biff_rec(A, 0x0012 /* Protect */, writebool(false));\n  write_biff_rec(A, 0x0013 /* Password */, writeuint16(0));\n  if (b8) write_biff_rec(A, 0x01af /* Prot4Rev */, writebool(false));\n  if (b8) write_biff_rec(A, 0x01bc /* Prot4RevPass */, writeuint16(0));\n  write_biff_rec(A, 0x003d /* Window1 */, write_Window1(opts));\n  write_biff_rec(A, 0x0040 /* Backup */, writebool(false));\n  write_biff_rec(A, 0x008d /* HideObj */, writeuint16(0));\n  write_biff_rec(A, 0x0022 /* Date1904 */, writebool(safe1904(wb) == \"true\"));\n  write_biff_rec(A, 0x000e /* CalcPrecision */, writebool(true));\n  if (b8) write_biff_rec(A, 0x01b7 /* RefreshAll */, writebool(false));\n  write_biff_rec(A, 0x00DA /* BookBool */, writeuint16(0));\n  /* ... */\n  write_FONTS_biff8(A, wb, opts);\n  write_FMTS_biff8(A, wb.SSF, opts);\n  write_CELLXFS_biff8(A, opts);\n  /* ... */\n  if (b8) write_biff_rec(A, 0x0160 /* UsesELFs */, writebool(false));\n  var a = A.end();\n  var C = buf_array();\n  /* METADATA [MTRSettings] [ForceFullCalculation] */\n  if (b8) write_biff_rec(C, 0x008C, write_Country());\n  /* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture *MSODRAWINGGROUP */\n\n  /* BIFF8: [SST *Continue] ExtSST */\n  if (b8 && opts.Strings) write_biff_continue(C, 0x00FC, write_SST(opts.Strings, opts));\n\n  /* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n  write_biff_rec(C, 0x000A /* EOF */);\n  var c = C.end();\n  var B = buf_array();\n  var blen = 0,\n    j = 0;\n  for (j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n  var start = a.length + blen + c.length;\n  for (j = 0; j < wb.SheetNames.length; ++j) {\n    var _sheet /*:WBWSProp*/ = _sheets[j] || {} /*:any*/;\n    write_biff_rec(B, 0x0085 /* BoundSheet8 */, write_BoundSheet8({\n      pos: start,\n      hs: _sheet.Hidden || 0,\n      dt: 0,\n      name: wb.SheetNames[j]\n    }, opts));\n    start += bufs[j].length;\n  }\n  /* 1*BoundSheet8 */\n  var b = B.end();\n  if (blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n  var out = [];\n  if (a.length) out.push(a);\n  if (b.length) out.push(b);\n  if (c.length) out.push(c);\n  return bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  var o = opts || {};\n  var bufs = [];\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    o.revssf = evert_num(wb.SSF);\n    o.revssf[wb.SSF[65535]] = 0;\n    o.ssf = wb.SSF;\n  }\n  o.Strings = /*::((*/[] /*:: :any):SST)*/;\n  o.Strings.Count = 0;\n  o.Strings.Unique = 0;\n  fix_write_opts(o);\n  o.cellXfs = [];\n  get_cell_style(o.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  for (var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n  bufs.unshift(write_biff8_global(wb, bufs, o));\n  return bconcat(bufs);\n}\nfunction write_biff_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  for (var i = 0; i <= wb.SheetNames.length; ++i) {\n    var ws = wb.Sheets[wb.SheetNames[i]];\n    if (!ws || !ws[\"!ref\"]) continue;\n    var range = decode_range(ws[\"!ref\"]);\n    if (range.e.c > 255) {\n      // note: 255 is IV\n      if (typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n    }\n  }\n  var o = opts || {};\n  switch (o.biff || 2) {\n    case 8:\n    case 5:\n      return write_biff8_buf(wb, opts);\n    case 4:\n    case 3:\n    case 2:\n      return write_biff2_buf(wb, opts);\n  }\n  throw new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nfunction html_to_sheet(str /*:string*/, _opts) /*:Workbook*/{\n  var opts = _opts || {};\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n  var ws /*:Worksheet*/ = opts.dense ? [] /*:any*/ : {} /*:any*/;\n  str = str.replace(/<!--.*?-->/g, \"\");\n  var mtch /*:any*/ = str.match(/<table/i);\n  if (!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n  var mtch2 /*:any*/ = str.match(/<\\/table/i);\n  var i /*:number*/ = mtch.index,\n    j /*:number*/ = mtch2 && mtch2.index || str.length;\n  var rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n  var R = -1,\n    C = 0,\n    RS = 0,\n    CS = 0;\n  var range /*:Range*/ = {\n    s: {\n      r: 10000000,\n      c: 10000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var merges /*:Array<Range>*/ = [];\n  for (i = 0; i < rows.length; ++i) {\n    var row = rows[i].trim();\n    var hd = row.slice(0, 3).toLowerCase();\n    if (hd == \"<tr\") {\n      ++R;\n      if (opts.sheetRows && opts.sheetRows <= R) {\n        --R;\n        break;\n      }\n      C = 0;\n      continue;\n    }\n    if (hd != \"<td\" && hd != \"<th\") continue;\n    var cells = row.split(/<\\/t[dh]>/i);\n    for (j = 0; j < cells.length; ++j) {\n      var cell = cells[j].trim();\n      if (!cell.match(/<t[dh]/i)) continue;\n      var m = cell,\n        cc = 0;\n      /* TODO: parse styles etc */\n      while (m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc + 1);\n      for (var midx = 0; midx < merges.length; ++midx) {\n        var _merge /*:Range*/ = merges[midx];\n        if (_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) {\n          C = _merge.e.c + 1;\n          midx = -1;\n        }\n      }\n      var tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n      CS = tag.colspan ? +tag.colspan : 1;\n      if ((RS = +tag.rowspan) > 1 || CS > 1) merges.push({\n        s: {\n          r: R,\n          c: C\n        },\n        e: {\n          r: R + (RS || 1) - 1,\n          c: C + CS - 1\n        }\n      });\n      var _t /*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n      /* TODO: generate stub cells */\n      if (!m.length) {\n        C += CS;\n        continue;\n      }\n      m = htmldecode(m);\n      if (range.s.r > R) range.s.r = R;\n      if (range.e.r < R) range.e.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.c < C) range.e.c = C;\n      if (!m.length) {\n        C += CS;\n        continue;\n      }\n      var o /*:Cell*/ = {\n        t: 's',\n        v: m\n      };\n      if (opts.raw || !m.trim().length || _t == 's') {} else if (m === 'TRUE') o = {\n        t: 'b',\n        v: true\n      };else if (m === 'FALSE') o = {\n        t: 'b',\n        v: false\n      };else if (!isNaN(fuzzynum(m))) o = {\n        t: 'n',\n        v: fuzzynum(m)\n      };else if (!isNaN(fuzzydate(m).getDate())) {\n        o = {\n          t: 'd',\n          v: parseDate(m)\n        } /*:any*/;\n        if (!opts.cellDates) o = {\n          t: 'n',\n          v: datenum(o.v)\n        } /*:any*/;\n        o.z = opts.dateNF || table_fmt[14];\n      }\n      if (opts.dense) {\n        if (!ws[R]) ws[R] = [];\n        ws[R][C] = o;\n      } else ws[encode_cell({\n        r: R,\n        c: C\n      })] = o;\n      C += CS;\n    }\n  }\n  ws['!ref'] = encode_range(range);\n  if (merges.length) ws[\"!merges\"] = merges;\n  return ws;\n}\nfunction make_html_row(ws /*:Worksheet*/, r /*:Range*/, R /*:number*/, o /*:Sheet2HTMLOpts*/) /*:string*/{\n  var M /*:Array<Range>*/ = ws['!merges'] || [];\n  var oo /*:Array<string>*/ = [];\n  for (var C = r.s.c; C <= r.e.c; ++C) {\n    var RS = 0,\n      CS = 0;\n    for (var j = 0; j < M.length; ++j) {\n      if (M[j].s.r > R || M[j].s.c > C) continue;\n      if (M[j].e.r < R || M[j].e.c < C) continue;\n      if (M[j].s.r < R || M[j].s.c < C) {\n        RS = -1;\n        break;\n      }\n      RS = M[j].e.r - M[j].s.r + 1;\n      CS = M[j].e.c - M[j].s.c + 1;\n      break;\n    }\n    if (RS < 0) continue;\n    var coord = encode_cell({\n      r: R,\n      c: C\n    });\n    var cell = o.dense ? (ws[R] || [])[C] : ws[coord];\n    /* TODO: html entities */\n    var w = cell && cell.v != null && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n    var sp = {} /*:any*/;\n    if (RS > 1) sp.rowspan = RS;\n    if (CS > 1) sp.colspan = CS;\n    if (o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';else if (cell) {\n      sp[\"data-t\"] = cell && cell.t || 'z';\n      if (cell.v != null) sp[\"data-v\"] = cell.v;\n      if (cell.z != null) sp[\"data-z\"] = cell.z;\n      if (cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + cell.l.Target + '\">' + w + '</a>';\n    }\n    sp.id = (o.id || \"sjs\") + \"-\" + coord;\n    oo.push(writextag('td', w, sp));\n  }\n  var preamble = \"<tr>\";\n  return preamble + oo.join(\"\") + \"</tr>\";\n}\nvar HTML_BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\nvar HTML_END = '</body></html>';\nfunction html_to_workbook(str /*:string*/, opts) /*:Workbook*/{\n  var mtch = str.match(/<table[\\s\\S]*?>[\\s\\S]*?<\\/table>/gi);\n  if (!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n  if (mtch.length == 1) return sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n  var wb = book_new();\n  mtch.forEach(function (s, idx) {\n    book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx + 1));\n  });\n  return wb;\n}\nfunction make_html_preamble(ws /*:Worksheet*/, R /*:Range*/, o /*:Sheet2HTMLOpts*/) /*:string*/{\n  var out /*:Array<string>*/ = [];\n  return out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n}\nfunction sheet_to_html(ws /*:Worksheet*/, opts /*:?Sheet2HTMLOpts*/ /*, wb:?Workbook*/) /*:string*/{\n  var o = opts || {};\n  var header = o.header != null ? o.header : HTML_BEGIN;\n  var footer = o.footer != null ? o.footer : HTML_END;\n  var out /*:Array<string>*/ = [header];\n  var r = decode_range(ws['!ref']);\n  o.dense = Array.isArray(ws);\n  out.push(make_html_preamble(ws, r, o));\n  for (var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n  out.push(\"</table>\" + footer);\n  return out.join(\"\");\n}\nfunction sheet_add_dom(ws /*:Worksheet*/, table /*:HTMLElement*/, _opts /*:?any*/) /*:Worksheet*/{\n  var opts = _opts || {};\n  if (DENSE != null) opts.dense = DENSE;\n  var or_R = 0,\n    or_C = 0;\n  if (opts.origin != null) {\n    if (typeof opts.origin == 'number') or_R = opts.origin;else {\n      var _origin /*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n      or_R = _origin.r;\n      or_C = _origin.c;\n    }\n  }\n  var rows /*:HTMLCollection<HTMLTableRowElement>*/ = table.getElementsByTagName('tr');\n  var sheetRows = Math.min(opts.sheetRows || 10000000, rows.length);\n  var range /*:Range*/ = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: or_R,\n      c: or_C\n    }\n  };\n  if (ws[\"!ref\"]) {\n    var _range /*:Range*/ = decode_range(ws[\"!ref\"]);\n    range.s.r = Math.min(range.s.r, _range.s.r);\n    range.s.c = Math.min(range.s.c, _range.s.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    if (or_R == -1) range.e.r = or_R = _range.e.r + 1;\n  }\n  var merges /*:Array<Range>*/ = [],\n    midx = 0;\n  var rowinfo /*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n  var _R = 0,\n    R = 0,\n    _C = 0,\n    C = 0,\n    RS = 0,\n    CS = 0;\n  if (!ws[\"!cols\"]) ws['!cols'] = [];\n  for (; _R < rows.length && R < sheetRows; ++_R) {\n    var row /*:HTMLTableRowElement*/ = rows[_R];\n    if (is_dom_element_hidden(row)) {\n      if (opts.display) continue;\n      rowinfo[R] = {\n        hidden: true\n      };\n    }\n    var elts /*:HTMLCollection<HTMLTableCellElement>*/ = row.children /*:any*/;\n    for (_C = C = 0; _C < elts.length; ++_C) {\n      var elt /*:HTMLTableCellElement*/ = elts[_C];\n      if (opts.display && is_dom_element_hidden(elt)) continue;\n      var v /*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n      var z /*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n      for (midx = 0; midx < merges.length; ++midx) {\n        var m /*:Range*/ = merges[midx];\n        if (m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) {\n          C = m.e.c + 1 - or_C;\n          midx = -1;\n        }\n      }\n      /* TODO: figure out how to extract nonstandard mso- style */\n      CS = +elt.getAttribute(\"colspan\") || 1;\n      if ((RS = +elt.getAttribute(\"rowspan\") || 1) > 1 || CS > 1) merges.push({\n        s: {\n          r: R + or_R,\n          c: C + or_C\n        },\n        e: {\n          r: R + or_R + (RS || 1) - 1,\n          c: C + or_C + (CS || 1) - 1\n        }\n      });\n      var o /*:Cell*/ = {\n        t: 's',\n        v: v\n      };\n      var _t /*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n      if (v != null) {\n        if (v.length == 0) o.t = _t || 'z';else if (opts.raw || v.trim().length == 0 || _t == \"s\") {} else if (v === 'TRUE') o = {\n          t: 'b',\n          v: true\n        };else if (v === 'FALSE') o = {\n          t: 'b',\n          v: false\n        };else if (!isNaN(fuzzynum(v))) o = {\n          t: 'n',\n          v: fuzzynum(v)\n        };else if (!isNaN(fuzzydate(v).getDate())) {\n          o = {\n            t: 'd',\n            v: parseDate(v)\n          } /*:any*/;\n          if (!opts.cellDates) o = {\n            t: 'n',\n            v: datenum(o.v)\n          } /*:any*/;\n          o.z = opts.dateNF || table_fmt[14];\n        }\n      }\n      if (o.z === undefined && z != null) o.z = z;\n      /* The first link is used.  Links are assumed to be fully specified.\n       * TODO: The right way to process relative links is to make a new <a> */\n      var l = \"\",\n        Aelts = elt.getElementsByTagName(\"A\");\n      if (Aelts && Aelts.length) for (var Aelti = 0; Aelti < Aelts.length; ++Aelti) if (Aelts[Aelti].hasAttribute(\"href\")) {\n        l = Aelts[Aelti].getAttribute(\"href\");\n        if (l.charAt(0) != \"#\") break;\n      }\n      if (l && l.charAt(0) != \"#\") o.l = {\n        Target: l\n      };\n      if (opts.dense) {\n        if (!ws[R + or_R]) ws[R + or_R] = [];\n        ws[R + or_R][C + or_C] = o;\n      } else ws[encode_cell({\n        c: C + or_C,\n        r: R + or_R\n      })] = o;\n      if (range.e.c < C + or_C) range.e.c = C + or_C;\n      C += CS;\n    }\n    ++R;\n  }\n  if (merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n  range.e.r = Math.max(range.e.r, R - 1 + or_R);\n  ws['!ref'] = encode_range(range);\n  if (R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length - _R + R - 1 + or_R, range)); // We can count the real number of rows to parse but we don't to improve the performance\n  return ws;\n}\nfunction parse_dom_table(table /*:HTMLElement*/, _opts /*:?any*/) /*:Worksheet*/{\n  var opts = _opts || {};\n  var ws /*:Worksheet*/ = opts.dense ? [] /*:any*/ : {} /*:any*/;\n  return sheet_add_dom(ws, table, _opts);\n}\nfunction table_to_book(table /*:HTMLElement*/, opts /*:?any*/) /*:Workbook*/{\n  return sheet_to_workbook(parse_dom_table(table, opts), opts);\n}\nfunction is_dom_element_hidden(element /*:HTMLElement*/) /*:boolean*/{\n  var display /*:string*/ = '';\n  var get_computed_style /*:?function*/ = get_get_computed_style_function(element);\n  if (get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n  if (!display) display = element.style && element.style.display;\n  return display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element /*:HTMLElement*/) /*:?function*/{\n  // The proper getComputedStyle implementation is the one defined in the element window\n  if (element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n  // If it is not available, try to get one from the global namespace\n  if (typeof getComputedStyle === 'function') return getComputedStyle;\n  return null;\n}\n/* OpenDocument */\nfunction parse_text_p(text /*:string*/ /*::, tag*/) /*:Array<any>*/{\n  /* 6.1.2 White Space Characters */\n  var fixed = text.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \").replace(/<text:s\\/>/g, \" \").replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function ($$, $1) {\n    return Array(parseInt($1, 10) + 1).join(\" \");\n  }).replace(/<text:tab[^>]*\\/>/g, \"\\t\").replace(/<text:line-break\\/>/g, \"\\n\");\n  var v = unescapexml(fixed.replace(/<[^>]*>/g, \"\"));\n  return [v];\n}\nvar number_formats_ods = {\n  /* ods name: [short ssf fmt, long ssf fmt] */\n  day: [\"d\", \"dd\"],\n  month: [\"m\", \"mm\"],\n  year: [\"y\", \"yy\"],\n  hours: [\"h\", \"hh\"],\n  minutes: [\"m\", \"mm\"],\n  seconds: [\"s\", \"ss\"],\n  \"am-pm\": [\"A/P\", \"AM/PM\"],\n  \"day-of-week\": [\"ddd\", \"dddd\"],\n  era: [\"e\", \"ee\"],\n  /* there is no native representation of LO \"Q\" format */\n  quarter: [\"\\\\Qm\", \"m\\\\\\\"th quarter\\\"\"]\n};\nfunction parse_content_xml(d /*:string*/, _opts) /*:Workbook*/{\n  var opts = _opts || {};\n  if (DENSE != null && opts.dense == null) opts.dense = DENSE;\n  var str = xlml_normalize(d);\n  var state /*:Array<any>*/ = [],\n    tmp;\n  var tag /*:: = {}*/;\n  var NFtag = {\n      name: \"\"\n    },\n    NF = \"\",\n    pidx = 0;\n  var sheetag /*:: = {name:\"\", '名称':\"\"}*/;\n  var rowtag /*:: = {'行号':\"\"}*/;\n  var Sheets = {},\n    SheetNames /*:Array<string>*/ = [];\n  var ws = opts.dense ? [] /*:any*/ : {} /*:any*/;\n  var Rn, q /*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n  var ctag = {\n    value: \"\"\n  } /*:any*/;\n  var textp = \"\",\n    textpidx = 0,\n    textptag /*:: = {}*/;\n  var textR = [];\n  var R = -1,\n    C = -1,\n    range = {\n      s: {\n        r: 1000000,\n        c: 10000000\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n  var row_ol = 0;\n  var number_format_map = {};\n  var merges /*:Array<Range>*/ = [],\n    mrange = {},\n    mR = 0,\n    mC = 0;\n  var rowinfo /*:Array<RowInfo>*/ = [],\n    rowpeat = 1,\n    colpeat = 1;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var WB = {\n    Names: []\n  };\n  var atag = {} /*:any*/;\n  var _Ref /*:[string, string]*/ = [\"\", \"\"];\n  var comments /*:Array<Comment>*/ = [],\n    comment /*:Comment*/ = {} /*:any*/;\n  var creator = \"\",\n    creatoridx = 0;\n  var isstub = false,\n    intable = false;\n  var i = 0;\n  xlmlregex.lastIndex = 0;\n  str = str.replace(/<!--([\\s\\S]*?)-->/mg, \"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm, \"\");\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3] = Rn[3].replace(/_.*$/, \"\")) {\n    case 'table':\n    case '工作表':\n      // 9.1.2 <table:table>\n      if (Rn[1] === '/') {\n        if (range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);else ws['!ref'] = \"A1:A1\";\n        if (opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n          ws['!fullref'] = ws['!ref'];\n          range.e.r = opts.sheetRows - 1;\n          ws['!ref'] = encode_range(range);\n        }\n        if (merges.length) ws['!merges'] = merges;\n        if (rowinfo.length) ws[\"!rows\"] = rowinfo;\n        sheetag.name = sheetag['名称'] || sheetag.name;\n        if (typeof JSON !== 'undefined') JSON.stringify(sheetag);\n        SheetNames.push(sheetag.name);\n        Sheets[sheetag.name] = ws;\n        intable = false;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        sheetag = parsexmltag(Rn[0], false);\n        R = C = -1;\n        range.s.r = range.s.c = 10000000;\n        range.e.r = range.e.c = 0;\n        ws = opts.dense ? [] /*:any*/ : {} /*:any*/;\n        merges = [];\n        rowinfo = [];\n        intable = true;\n      }\n      break;\n    case 'table-row-group':\n      // 9.1.9 <table:table-row-group>\n      if (Rn[1] === \"/\") --row_ol;else ++row_ol;\n      break;\n    case 'table-row':\n    case '行':\n      // 9.1.3 <table:table-row>\n      if (Rn[1] === '/') {\n        R += rowpeat;\n        rowpeat = 1;\n        break;\n      }\n      rowtag = parsexmltag(Rn[0], false);\n      if (rowtag['行号']) R = rowtag['行号'] - 1;else if (R == -1) R = 0;\n      rowpeat = +rowtag['number-rows-repeated'] || 1;\n      /* TODO: remove magic */\n      if (rowpeat < 10) for (i = 0; i < rowpeat; ++i) if (row_ol > 0) rowinfo[R + i] = {\n        level: row_ol\n      };\n      C = -1;\n      break;\n    case 'covered-table-cell':\n      // 9.1.5 <table:covered-table-cell>\n      if (Rn[1] !== '/') ++C;\n      if (opts.sheetStubs) {\n        if (opts.dense) {\n          if (!ws[R]) ws[R] = [];\n          ws[R][C] = {\n            t: 'z'\n          };\n        } else ws[encode_cell({\n          r: R,\n          c: C\n        })] = {\n          t: 'z'\n        };\n      }\n      textp = \"\";\n      textR = [];\n      break;\n    /* stub */\n    case 'table-cell':\n    case '数据':\n      if (Rn[0].charAt(Rn[0].length - 2) === '/') {\n        ++C;\n        ctag = parsexmltag(Rn[0], false);\n        colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n        q = {\n          t: 'z',\n          v: null /*:: , z:null, w:\"\",c:[]*/\n        } /*:any*/;\n        if (ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n        if ((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n          q.t = \"s\";\n          q.v = unescapexml(ctag['string-value'] || \"\");\n          if (opts.dense) {\n            if (!ws[R]) ws[R] = [];\n            ws[R][C] = q;\n          } else {\n            ws[encode_cell({\n              r: R,\n              c: C\n            })] = q;\n          }\n        }\n        C += colpeat - 1;\n      } else if (Rn[1] !== '/') {\n        ++C;\n        textp = \"\";\n        textpidx = 0;\n        textR = [];\n        colpeat = 1;\n        var rptR = rowpeat ? R + rowpeat - 1 : R;\n        if (C > range.e.c) range.e.c = C;\n        if (C < range.s.c) range.s.c = C;\n        if (R < range.s.r) range.s.r = R;\n        if (rptR > range.e.r) range.e.r = rptR;\n        ctag = parsexmltag(Rn[0], false);\n        comments = [];\n        comment = {} /*:any*/;\n        q = {\n          t: ctag['数据类型'] || ctag['value-type'],\n          v: null /*:: , z:null, w:\"\",c:[]*/\n        } /*:any*/;\n        if (opts.cellFormula) {\n          if (ctag.formula) ctag.formula = unescapexml(ctag.formula);\n          if (ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n            mR = parseInt(ctag['number-matrix-rows-spanned'], 10) || 0;\n            mC = parseInt(ctag['number-matrix-columns-spanned'], 10) || 0;\n            mrange = {\n              s: {\n                r: R,\n                c: C\n              },\n              e: {\n                r: R + mR - 1,\n                c: C + mC - 1\n              }\n            };\n            q.F = encode_range(mrange);\n            arrayf.push([mrange, q.F]);\n          }\n          if (ctag.formula) q.f = ods_to_csf_formula(ctag.formula);else for (i = 0; i < arrayf.length; ++i) if (R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r) if (C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c) q.F = arrayf[i][1];\n        }\n        if (ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n          mR = parseInt(ctag['number-rows-spanned'], 10) || 0;\n          mC = parseInt(ctag['number-columns-spanned'], 10) || 0;\n          mrange = {\n            s: {\n              r: R,\n              c: C\n            },\n            e: {\n              r: R + mR - 1,\n              c: C + mC - 1\n            }\n          };\n          merges.push(mrange);\n        }\n\n        /* 19.675.2 table:number-columns-repeated */\n        if (ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n        /* 19.385 office:value-type */\n        switch (q.t) {\n          case 'boolean':\n            q.t = 'b';\n            q.v = parsexmlbool(ctag['boolean-value']);\n            break;\n          case 'float':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            break;\n          case 'percentage':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            break;\n          case 'currency':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            break;\n          case 'date':\n            q.t = 'd';\n            q.v = parseDate(ctag['date-value']);\n            if (!opts.cellDates) {\n              q.t = 'n';\n              q.v = datenum(q.v);\n            }\n            q.z = 'm/d/yy';\n            break;\n          case 'time':\n            q.t = 'n';\n            q.v = parse_isodur(ctag['time-value']) / 86400;\n            if (opts.cellDates) {\n              q.t = 'd';\n              q.v = numdate(q.v);\n            }\n            q.z = 'HH:MM:SS';\n            break;\n          case 'number':\n            q.t = 'n';\n            q.v = parseFloat(ctag['数据数值']);\n            break;\n          default:\n            if (q.t === 'string' || q.t === 'text' || !q.t) {\n              q.t = 's';\n              if (ctag['string-value'] != null) {\n                textp = unescapexml(ctag['string-value']);\n                textR = [];\n              }\n            } else throw new Error('Unsupported value type ' + q.t);\n        }\n      } else {\n        isstub = false;\n        if (q.t === 's') {\n          q.v = textp || '';\n          if (textR.length) q.R = textR;\n          isstub = textpidx == 0;\n        }\n        if (atag.Target) q.l = atag;\n        if (comments.length > 0) {\n          q.c = comments;\n          comments = [];\n        }\n        if (textp && opts.cellText !== false) q.w = textp;\n        if (isstub) {\n          q.t = \"z\";\n          delete q.v;\n        }\n        if (!isstub || opts.sheetStubs) {\n          if (!(opts.sheetRows && opts.sheetRows <= R)) {\n            for (var rpt = 0; rpt < rowpeat; ++rpt) {\n              colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n              if (opts.dense) {\n                if (!ws[R + rpt]) ws[R + rpt] = [];\n                ws[R + rpt][C] = rpt == 0 ? q : dup(q);\n                while (--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);\n              } else {\n                ws[encode_cell({\n                  r: R + rpt,\n                  c: C\n                })] = q;\n                while (--colpeat > 0) ws[encode_cell({\n                  r: R + rpt,\n                  c: C + colpeat\n                })] = dup(q);\n              }\n              if (range.e.c <= C) range.e.c = C;\n            }\n          }\n        }\n        colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n        C += colpeat - 1;\n        colpeat = 0;\n        q = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n        textp = \"\";\n        textR = [];\n      }\n      atag = {} /*:any*/;\n      break;\n    // 9.1.4 <table:table-cell>\n\n    /* pure state */\n    case 'document': // TODO: <office:document> is the root for FODS\n    case 'document-content':\n    case '电子表格文档': // 3.1.3.2 <office:document-content>\n    case 'spreadsheet':\n    case '主体': // 3.7 <office:spreadsheet>\n    case 'scripts': // 3.12 <office:scripts>\n    case 'styles': // TODO <office:styles>\n    case 'font-face-decls': // 3.14 <office:font-face-decls>\n    case 'master-styles':\n      // 3.15.4 <office:master-styles> -- relevant for FODS\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      break;\n    case 'annotation':\n      // 14.1 <office:annotation>\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n        comment.t = textp;\n        if (textR.length) /*::(*/comment /*:: :any)*/.R = textR;\n        comment.a = creator;\n        comments.push(comment);\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        state.push([Rn[3], false]);\n      }\n      creator = \"\";\n      creatoridx = 0;\n      textp = \"\";\n      textpidx = 0;\n      textR = [];\n      break;\n    case 'creator':\n      // 4.3.2.7 <dc:creator>\n      if (Rn[1] === '/') {\n        creator = str.slice(creatoridx, Rn.index);\n      } else creatoridx = Rn.index + Rn[0].length;\n      break;\n\n    /* ignore state */\n    case 'meta':\n    case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n    case 'settings': // TODO: <office:settings>\n    case 'config-item-set': // TODO: <office:config-item-set>\n    case 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n    case 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n    case 'config-item-map-named': // TODO: <office:config-item-map-entry>\n    case 'shapes': // 9.2.8 <table:shapes>\n    case 'frame': // 10.4.2 <draw:frame>\n    case 'text-box': // 10.4.3 <draw:text-box>\n    case 'image': // 10.4.4 <draw:image>\n    case 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n    case 'list-style': // 16.30 <text:list-style>\n    case 'form': // 13.13 <form:form>\n    case 'dde-links': // 9.8 <table:dde-links>\n    case 'event-listeners': // TODO\n    case 'chart':\n      // TODO\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], false]);\n      textp = \"\";\n      textpidx = 0;\n      textR = [];\n      break;\n    case 'scientific-number':\n      // TODO: <number:scientific-number>\n      break;\n    case 'currency-symbol':\n      // TODO: <number:currency-symbol>\n      break;\n    case 'currency-style':\n      // TODO: <number:currency-style>\n      break;\n    case 'number-style': // 16.27.2 <number:number-style>\n    case 'percentage-style': // 16.27.9 <number:percentage-style>\n    case 'date-style': // 16.27.10 <number:date-style>\n    case 'time-style':\n      // 16.27.18 <number:time-style>\n      if (Rn[1] === '/') {\n        number_format_map[NFtag.name] = NF;\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        NF = \"\";\n        NFtag = parsexmltag(Rn[0], false);\n        state.push([Rn[3], true]);\n      }\n      break;\n    case 'script':\n      break;\n    // 3.13 <office:script>\n    case 'libraries':\n      break;\n    // TODO: <ooo:libraries>\n    case 'automatic-styles':\n      break;\n    // 3.15.3 <office:automatic-styles>\n\n    case 'default-style': // TODO: <style:default-style>\n    case 'page-layout':\n      break;\n    // TODO: <style:page-layout>\n    case 'style':\n      // 16.2 <style:style>\n      break;\n    case 'map':\n      break;\n    // 16.3 <style:map>\n    case 'font-face':\n      break;\n    // 16.21 <style:font-face>\n\n    case 'paragraph-properties':\n      break;\n    // 17.6 <style:paragraph-properties>\n    case 'table-properties':\n      break;\n    // 17.15 <style:table-properties>\n    case 'table-column-properties':\n      break;\n    // 17.16 <style:table-column-properties>\n    case 'table-row-properties':\n      break;\n    // 17.17 <style:table-row-properties>\n    case 'table-cell-properties':\n      break;\n    // 17.18 <style:table-cell-properties>\n\n    case 'number':\n      // 16.27.3 <number:number>\n      switch (state[state.length - 1][0]) {\n        case 'time-style':\n        case 'date-style':\n          tag = parsexmltag(Rn[0], false);\n          NF += number_formats_ods[Rn[3]][tag.style === 'long' ? 1 : 0];\n          break;\n      }\n      break;\n    case 'fraction':\n      break;\n    // TODO 16.27.6 <number:fraction>\n\n    case 'day': // 16.27.11 <number:day>\n    case 'month': // 16.27.12 <number:month>\n    case 'year': // 16.27.13 <number:year>\n    case 'era': // 16.27.14 <number:era>\n    case 'day-of-week': // 16.27.15 <number:day-of-week>\n    case 'week-of-year': // 16.27.16 <number:week-of-year>\n    case 'quarter': // 16.27.17 <number:quarter>\n    case 'hours': // 16.27.19 <number:hours>\n    case 'minutes': // 16.27.20 <number:minutes>\n    case 'seconds': // 16.27.21 <number:seconds>\n    case 'am-pm':\n      // 16.27.22 <number:am-pm>\n      switch (state[state.length - 1][0]) {\n        case 'time-style':\n        case 'date-style':\n          tag = parsexmltag(Rn[0], false);\n          NF += number_formats_ods[Rn[3]][tag.style === 'long' ? 1 : 0];\n          break;\n      }\n      break;\n    case 'boolean-style':\n      break;\n    // 16.27.23 <number:boolean-style>\n    case 'boolean':\n      break;\n    // 16.27.24 <number:boolean>\n    case 'text-style':\n      break;\n    // 16.27.25 <number:text-style>\n    case 'text':\n      // 16.27.26 <number:text>\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") switch (state[state.length - 1][0]) {\n        case 'number-style':\n        case 'date-style':\n        case 'time-style':\n          NF += str.slice(pidx, Rn.index);\n          break;\n      } else pidx = Rn.index + Rn[0].length;\n      break;\n    case 'named-range':\n      // 9.4.12 <table:named-range>\n      tag = parsexmltag(Rn[0], false);\n      _Ref = ods_to_csf_3D(tag['cell-range-address']);\n      var nrange = {\n        Name: tag.name,\n        Ref: _Ref[0] + '!' + _Ref[1]\n      } /*:any*/;\n      if (intable) nrange.Sheet = SheetNames.length;\n      WB.Names.push(nrange);\n      break;\n    case 'text-content':\n      break;\n    // 16.27.27 <number:text-content>\n    case 'text-properties':\n      break;\n    // 16.27.27 <style:text-properties>\n    case 'embedded-text':\n      break;\n    // 16.27.4 <number:embedded-text>\n\n    case 'body':\n    case '电子表格':\n      break;\n    // 3.3 16.9.6 19.726.3\n\n    case 'forms':\n      break;\n    // 12.25.2 13.2\n    case 'table-column':\n      break;\n    // 9.1.6 <table:table-column>\n    case 'table-header-rows':\n      break;\n    // 9.1.7 <table:table-header-rows>\n    case 'table-rows':\n      break;\n    // 9.1.12 <table:table-rows>\n    /* TODO: outline levels */\n    case 'table-column-group':\n      break;\n    // 9.1.10 <table:table-column-group>\n    case 'table-header-columns':\n      break;\n    // 9.1.11 <table:table-header-columns>\n    case 'table-columns':\n      break;\n    // 9.1.12 <table:table-columns>\n\n    case 'null-date':\n      break;\n    // 9.4.2 <table:null-date> TODO: date1904\n\n    case 'graphic-properties':\n      break;\n    // 17.21 <style:graphic-properties>\n    case 'calculation-settings':\n      break;\n    // 9.4.1 <table:calculation-settings>\n    case 'named-expressions':\n      break;\n    // 9.4.11 <table:named-expressions>\n    case 'label-range':\n      break;\n    // 9.4.9 <table:label-range>\n    case 'label-ranges':\n      break;\n    // 9.4.10 <table:label-ranges>\n    case 'named-expression':\n      break;\n    // 9.4.13 <table:named-expression>\n    case 'sort':\n      break;\n    // 9.4.19 <table:sort>\n    case 'sort-by':\n      break;\n    // 9.4.20 <table:sort-by>\n    case 'sort-groups':\n      break;\n    // 9.4.22 <table:sort-groups>\n\n    case 'tab':\n      break;\n    // 6.1.4 <text:tab>\n    case 'line-break':\n      break;\n    // 6.1.5 <text:line-break>\n    case 'span':\n      break;\n    // 6.1.7 <text:span>\n    case 'p':\n    case '文本串':\n      // 5.1.3 <text:p>\n      if (['master-styles'].indexOf(state[state.length - 1][0]) > -1) break;\n      if (Rn[1] === '/' && (!ctag || !ctag['string-value'])) {\n        var ptp = parse_text_p(str.slice(textpidx, Rn.index), textptag);\n        textp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n      } else {\n        textptag = parsexmltag(Rn[0], false);\n        textpidx = Rn.index + Rn[0].length;\n      }\n      break;\n    // <text:p>\n    case 's':\n      break;\n    // <text:s>\n\n    case 'database-range':\n      // 9.4.15 <table:database-range>\n      if (Rn[1] === '/') break;\n      try {\n        _Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n        Sheets[_Ref[0]]['!autofilter'] = {\n          ref: _Ref[1]\n        };\n      } catch (e) {/* empty */}\n      break;\n    case 'date':\n      break;\n    // <*:date>\n\n    case 'object':\n      break;\n    // 10.4.6.2 <draw:object>\n    case 'title':\n    case '标题':\n      break;\n    // <*:title> OR <uof:标题>\n    case 'desc':\n      break;\n    // <*:desc>\n    case 'binary-data':\n      break;\n    // 10.4.5 TODO: b64 blob\n\n    /* 9.2 Advanced Tables */\n    case 'table-source':\n      break;\n    // 9.2.6\n    case 'scenario':\n      break;\n    // 9.2.6\n\n    case 'iteration':\n      break;\n    // 9.4.3 <table:iteration>\n    case 'content-validations':\n      break;\n    // 9.4.4 <table:\n    case 'content-validation':\n      break;\n    // 9.4.5 <table:\n    case 'help-message':\n      break;\n    // 9.4.6 <table:\n    case 'error-message':\n      break;\n    // 9.4.7 <table:\n    case 'database-ranges':\n      break;\n    // 9.4.14 <table:database-ranges>\n    case 'filter':\n      break;\n    // 9.5.2 <table:filter>\n    case 'filter-and':\n      break;\n    // 9.5.3 <table:filter-and>\n    case 'filter-or':\n      break;\n    // 9.5.4 <table:filter-or>\n    case 'filter-condition':\n      break;\n    // 9.5.5 <table:filter-condition>\n\n    case 'list-level-style-bullet':\n      break;\n    // 16.31 <text:\n    case 'list-level-style-number':\n      break;\n    // 16.32 <text:\n    case 'list-level-properties':\n      break;\n    // 17.19 <style:\n\n    /* 7.3 Document Fields */\n    case 'sender-firstname': // 7.3.6.2\n    case 'sender-lastname': // 7.3.6.3\n    case 'sender-initials': // 7.3.6.4\n    case 'sender-title': // 7.3.6.5\n    case 'sender-position': // 7.3.6.6\n    case 'sender-email': // 7.3.6.7\n    case 'sender-phone-private': // 7.3.6.8\n    case 'sender-fax': // 7.3.6.9\n    case 'sender-company': // 7.3.6.10\n    case 'sender-phone-work': // 7.3.6.11\n    case 'sender-street': // 7.3.6.12\n    case 'sender-city': // 7.3.6.13\n    case 'sender-postal-code': // 7.3.6.14\n    case 'sender-country': // 7.3.6.15\n    case 'sender-state-or-province': // 7.3.6.16\n    case 'author-name': // 7.3.7.1\n    case 'author-initials': // 7.3.7.2\n    case 'chapter': // 7.3.8\n    case 'file-name': // 7.3.9\n    case 'template-name': // 7.3.9\n    case 'sheet-name':\n      // 7.3.9\n      break;\n    case 'event-listener':\n      break;\n    /* TODO: FODS Properties */\n    case 'initial-creator':\n    case 'creation-date':\n    case 'print-date':\n    case 'generator':\n    case 'document-statistic':\n    case 'user-defined':\n    case 'editing-duration':\n    case 'editing-cycles':\n      break;\n\n    /* TODO: FODS Config */\n    case 'config-item':\n      break;\n\n    /* TODO: style tokens */\n    case 'page-number':\n      break;\n    // TODO <text:page-number>\n    case 'page-count':\n      break;\n    // TODO <text:page-count>\n    case 'time':\n      break;\n    // TODO <text:time>\n\n    /* 9.3 Advanced Table Cells */\n    case 'cell-range-source':\n      break;\n    // 9.3.1 <table:\n    case 'detective':\n      break;\n    // 9.3.2 <table:\n    case 'operation':\n      break;\n    // 9.3.3 <table:\n    case 'highlighted-range':\n      break;\n    // 9.3.4 <table:\n\n    /* 9.6 Data Pilot Tables <table: */\n    case 'data-pilot-table': // 9.6.3\n    case 'source-cell-range': // 9.6.5\n    case 'source-service': // 9.6.6\n    case 'data-pilot-field': // 9.6.7\n    case 'data-pilot-level': // 9.6.8\n    case 'data-pilot-subtotals': // 9.6.9\n    case 'data-pilot-subtotal': // 9.6.10\n    case 'data-pilot-members': // 9.6.11\n    case 'data-pilot-member': // 9.6.12\n    case 'data-pilot-display-info': // 9.6.13\n    case 'data-pilot-sort-info': // 9.6.14\n    case 'data-pilot-layout-info': // 9.6.15\n    case 'data-pilot-field-reference': // 9.6.16\n    case 'data-pilot-groups': // 9.6.17\n    case 'data-pilot-group': // 9.6.18\n    case 'data-pilot-group-member':\n      // 9.6.19\n      break;\n\n    /* 10.3 Drawing Shapes */\n    case 'rect':\n      // 10.3.2\n      break;\n\n    /* 14.6 DDE Connections */\n    case 'dde-connection-decls': // 14.6.2 <text:\n    case 'dde-connection-decl': // 14.6.3 <text:\n    case 'dde-link': // 14.6.4 <table:\n    case 'dde-source':\n      // 14.6.5 <office:\n      break;\n    case 'properties':\n      break;\n    // 13.7 <form:properties>\n    case 'property':\n      break;\n    // 13.8 <form:property>\n\n    case 'a':\n      // 6.1.8 hyperlink\n      if (Rn[1] !== '/') {\n        atag = parsexmltag(Rn[0], false);\n        if (!atag.href) break;\n        atag.Target = unescapexml(atag.href);\n        delete atag.href;\n        if (atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n          _Ref = ods_to_csf_3D(atag.Target.slice(1));\n          atag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n        } else if (atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n      }\n      break;\n\n    /* non-standard */\n    case 'table-protection':\n      break;\n    case 'data-pilot-grand-total':\n      break;\n    // <table:\n    case 'office-document-common-attrs':\n      break;\n    // bare\n    default:\n      switch (Rn[2]) {\n        case 'dc:': // TODO: properties\n        case 'calcext:': // ignore undocumented extensions\n        case 'loext:': // ignore undocumented extensions\n        case 'ooo:': // ignore undocumented extensions\n        case 'chartooo:': // ignore undocumented extensions\n        case 'draw:': // TODO: drawing\n        case 'style:': // TODO: styles\n        case 'chart:': // TODO: charts\n        case 'form:': // TODO: forms\n        case 'uof:': // TODO: uof\n        case '表:': // TODO: uof\n        case '字:':\n          // TODO: uof\n          break;\n        default:\n          if (opts.WTF) throw new Error(Rn);\n      }\n  }\n  var out /*:Workbook*/ = {\n    Sheets: Sheets,\n    SheetNames: SheetNames,\n    Workbook: WB\n  } /*:any*/;\n  if (opts.bookSheets) delete /*::(*/out /*:: :any)*/.Sheets;\n  return out;\n}\nfunction parse_ods(zip /*:ZIPFile*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  opts = opts || {} /*:any*/;\n  if (safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n  var content = getzipstr(zip, 'content.xml');\n  if (!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n  var wb = parse_content_xml(utf8read(content), opts);\n  if (safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n  return wb;\n}\nfunction parse_fods(data /*:string*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  return parse_content_xml(data, opts);\n}\n\n/* OpenDocument */\nvar write_styles_ods /*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */function () {\n  var master_styles = ['<office:master-styles>', '<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">', '<style:header/>', '<style:header-left style:display=\"false\"/>', '<style:footer/>', '<style:footer-left style:display=\"false\"/>', '</style:master-page>', '</office:master-styles>'].join(\"\");\n  var payload = '<office:document-styles ' + wxt_helper({\n    'xmlns:office': \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n    'xmlns:table': \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n    'xmlns:style': \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n    'xmlns:text': \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n    'xmlns:draw': \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n    'xmlns:fo': \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n    'xmlns:xlink': \"http://www.w3.org/1999/xlink\",\n    'xmlns:dc': \"http://purl.org/dc/elements/1.1/\",\n    'xmlns:number': \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n    'xmlns:svg': \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n    'xmlns:of': \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n    'office:version': \"1.2\"\n  }) + '>' + master_styles + '</office:document-styles>';\n  return function wso( /*::wb, opts*/\n  ) {\n    return XML_HEADER + payload;\n  };\n}();\nvar write_content_ods /*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */function () {\n  /* 6.1.2 White Space Characters */\n  var write_text_p = function (text /*:string*/) /*:string*/{\n    return escapexml(text).replace(/  +/g, function ($$) {\n      return '<text:s text:c=\"' + $$.length + '\"/>';\n    }).replace(/\\t/g, \"<text:tab/>\").replace(/\\n/g, \"</text:p><text:p>\").replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n  };\n  var null_cell_xml = '          <table:table-cell />\\n';\n  var covered_cell_xml = '          <table:covered-table-cell/>\\n';\n  var write_ws = function (ws, wb /*:Workbook*/, i /*:number*/ /*::, opts*/) /*:string*/{\n    /* Section 9 Tables */\n    var o /*:Array<string>*/ = [];\n    o.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n    var R = 0,\n      C = 0,\n      range = decode_range(ws['!ref'] || \"A1\");\n    var marr /*:Array<Range>*/ = ws['!merges'] || [],\n      mi = 0;\n    var dense = Array.isArray(ws);\n    if (ws[\"!cols\"]) {\n      for (C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n    }\n    var H = \"\",\n      ROWS = ws[\"!rows\"] || [];\n    for (R = 0; R < range.s.r; ++R) {\n      H = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n      o.push('        <table:table-row' + H + '></table:table-row>\\n');\n    }\n    for (; R <= range.e.r; ++R) {\n      H = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n      o.push('        <table:table-row' + H + '>\\n');\n      for (C = 0; C < range.s.c; ++C) o.push(null_cell_xml);\n      for (; C <= range.e.c; ++C) {\n        var skip = false,\n          ct = {},\n          textp = \"\";\n        for (mi = 0; mi != marr.length; ++mi) {\n          if (marr[mi].s.c > C) continue;\n          if (marr[mi].s.r > R) continue;\n          if (marr[mi].e.c < C) continue;\n          if (marr[mi].e.r < R) continue;\n          if (marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n          ct['table:number-columns-spanned'] = marr[mi].e.c - marr[mi].s.c + 1;\n          ct['table:number-rows-spanned'] = marr[mi].e.r - marr[mi].s.r + 1;\n          break;\n        }\n        if (skip) {\n          o.push(covered_cell_xml);\n          continue;\n        }\n        var ref = encode_cell({\n            r: R,\n            c: C\n          }),\n          cell = dense ? (ws[R] || [])[C] : ws[ref];\n        if (cell && cell.f) {\n          ct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n          if (cell.F) {\n            if (cell.F.slice(0, ref.length) == ref) {\n              var _Fref = decode_range(cell.F);\n              ct['table:number-matrix-columns-spanned'] = _Fref.e.c - _Fref.s.c + 1;\n              ct['table:number-matrix-rows-spanned'] = _Fref.e.r - _Fref.s.r + 1;\n            }\n          }\n        }\n        if (!cell) {\n          o.push(null_cell_xml);\n          continue;\n        }\n        switch (cell.t) {\n          case 'b':\n            textp = cell.v ? 'TRUE' : 'FALSE';\n            ct['office:value-type'] = \"boolean\";\n            ct['office:boolean-value'] = cell.v ? 'true' : 'false';\n            break;\n          case 'n':\n            textp = cell.w || String(cell.v || 0);\n            ct['office:value-type'] = \"float\";\n            ct['office:value'] = cell.v || 0;\n            break;\n          case 's':\n          case 'str':\n            textp = cell.v == null ? \"\" : cell.v;\n            ct['office:value-type'] = \"string\";\n            break;\n          case 'd':\n            textp = cell.w || parseDate(cell.v).toISOString();\n            ct['office:value-type'] = \"date\";\n            ct['office:date-value'] = parseDate(cell.v).toISOString();\n            ct['table:style-name'] = \"ce1\";\n            break;\n          //case 'e':\n          default:\n            o.push(null_cell_xml);\n            continue;\n        }\n        var text_p = write_text_p(textp);\n        if (cell.l && cell.l.Target) {\n          var _tgt = cell.l.Target;\n          _tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n          // TODO: choose correct parent path format based on link delimiters\n          if (_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n          text_p = writextag('text:a', text_p, {\n            'xlink:href': _tgt.replace(/&/g, \"&amp;\")\n          });\n        }\n        o.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\n      }\n      o.push('        </table:table-row>\\n');\n    }\n    o.push('      </table:table>\\n');\n    return o.join(\"\");\n  };\n  var write_automatic_styles_ods = function (o /*:Array<string>*/, wb) {\n    o.push(' <office:automatic-styles>\\n');\n    o.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n    o.push('   <number:month number:style=\"long\"/>\\n');\n    o.push('   <number:text>/</number:text>\\n');\n    o.push('   <number:day number:style=\"long\"/>\\n');\n    o.push('   <number:text>/</number:text>\\n');\n    o.push('   <number:year/>\\n');\n    o.push('  </number:date-style>\\n');\n\n    /* column styles */\n    var cidx = 0;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      if (ws[\"!cols\"]) {\n        for (var C = 0; C < ws[\"!cols\"].length; ++C) if (ws[\"!cols\"][C]) {\n          var colobj = ws[\"!cols\"][C];\n          if (colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n          process_col(colobj);\n          colobj.ods = cidx;\n          var w = ws[\"!cols\"][C].wpx + \"px\";\n          o.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n          o.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n          o.push('  </style:style>\\n');\n          ++cidx;\n        }\n      }\n    });\n\n    /* row styles */\n    var ridx = 0;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      if (ws[\"!rows\"]) {\n        for (var R = 0; R < ws[\"!rows\"].length; ++R) if (ws[\"!rows\"][R]) {\n          ws[\"!rows\"][R].ods = ridx;\n          var h = ws[\"!rows\"][R].hpx + \"px\";\n          o.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n          o.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n          o.push('  </style:style>\\n');\n          ++ridx;\n        }\n      }\n    });\n\n    /* table */\n    o.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n    o.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n    o.push('  </style:style>\\n');\n\n    /* table cells, text */\n    o.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n\n    /* page-layout */\n\n    o.push(' </office:automatic-styles>\\n');\n  };\n  return function wcx(wb, opts) {\n    var o = [XML_HEADER];\n    /* 3.1.3.2 */\n    var attr = wxt_helper({\n      'xmlns:office': \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n      'xmlns:table': \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n      'xmlns:style': \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n      'xmlns:text': \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n      'xmlns:draw': \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n      'xmlns:fo': \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n      'xmlns:xlink': \"http://www.w3.org/1999/xlink\",\n      'xmlns:dc': \"http://purl.org/dc/elements/1.1/\",\n      'xmlns:meta': \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n      'xmlns:number': \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n      'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n      'xmlns:svg': \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n      'xmlns:chart': \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n      'xmlns:dr3d': \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n      'xmlns:math': \"http://www.w3.org/1998/Math/MathML\",\n      'xmlns:form': \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n      'xmlns:script': \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n      'xmlns:ooo': \"http://openoffice.org/2004/office\",\n      'xmlns:ooow': \"http://openoffice.org/2004/writer\",\n      'xmlns:oooc': \"http://openoffice.org/2004/calc\",\n      'xmlns:dom': \"http://www.w3.org/2001/xml-events\",\n      'xmlns:xforms': \"http://www.w3.org/2002/xforms\",\n      'xmlns:xsd': \"http://www.w3.org/2001/XMLSchema\",\n      'xmlns:xsi': \"http://www.w3.org/2001/XMLSchema-instance\",\n      'xmlns:sheet': \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n      'xmlns:rpt': \"http://openoffice.org/2005/report\",\n      'xmlns:of': \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n      'xmlns:xhtml': \"http://www.w3.org/1999/xhtml\",\n      'xmlns:grddl': \"http://www.w3.org/2003/g/data-view#\",\n      'xmlns:tableooo': \"http://openoffice.org/2009/table\",\n      'xmlns:drawooo': \"http://openoffice.org/2010/draw\",\n      'xmlns:calcext': \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n      'xmlns:loext': \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n      'xmlns:field': \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n      'xmlns:formx': \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n      'xmlns:css3t': \"http://www.w3.org/TR/css3-text/\",\n      'office:version': \"1.2\"\n    });\n    var fods = wxt_helper({\n      'xmlns:config': \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n      'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n    });\n    if (opts.bookType == \"fods\") {\n      o.push('<office:document' + attr + fods + '>\\n');\n      o.push(write_meta_ods().replace(/office:document-meta/g, \"office:meta\"));\n      // TODO: settings (equiv of settings.xml for ODS)\n    } else o.push('<office:document-content' + attr + '>\\n');\n    // o.push('  <office:scripts/>\\n');\n    write_automatic_styles_ods(o, wb);\n    o.push('  <office:body>\\n');\n    o.push('    <office:spreadsheet>\\n');\n    for (var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts));\n    o.push('    </office:spreadsheet>\\n');\n    o.push('  </office:body>\\n');\n    if (opts.bookType == \"fods\") o.push('</office:document>');else o.push('</office:document-content>');\n    return o.join(\"\");\n  };\n}();\nfunction write_ods(wb /*:any*/, opts /*:any*/) {\n  if (opts.bookType == \"fods\") return write_content_ods(wb, opts);\n  var zip = zip_new();\n  var f = \"\";\n  var manifest /*:Array<Array<string> >*/ = [];\n  var rdf /*:Array<[string, string]>*/ = [];\n\n  /* Part 3 Section 3.3 MIME Media Type */\n  f = \"mimetype\";\n  zip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n  /* Part 1 Section 2.2 Documents */\n  f = \"content.xml\";\n  zip_add_file(zip, f, write_content_ods(wb, opts));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"ContentFile\"]);\n\n  /* TODO: these are hard-coded styles to satiate excel */\n  f = \"styles.xml\";\n  zip_add_file(zip, f, write_styles_ods(wb, opts));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"StylesFile\"]);\n\n  /* TODO: this is hard-coded to satiate excel */\n  f = \"meta.xml\";\n  zip_add_file(zip, f, XML_HEADER + write_meta_ods( /*::wb, opts*/));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"MetadataFile\"]);\n\n  /* Part 3 Section 6 Metadata Manifest File */\n  f = \"manifest.rdf\";\n  zip_add_file(zip, f, write_rdf(rdf /*, opts*/));\n  manifest.push([f, \"application/rdf+xml\"]);\n\n  /* Part 3 Section 4 Manifest File */\n  f = \"META-INF/manifest.xml\";\n  zip_add_file(zip, f, write_manifest(manifest /*, opts*/));\n  return zip;\n}\n\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nfunction u8_to_dataview(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nfunction u8str(u8) {\n  return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n}\nfunction stru8(str) {\n  return typeof TextEncoder != \"undefined\" ? new TextEncoder().encode(str) : s2a(utf8write(str));\n}\nfunction u8contains(body, search) {\n  outer: for (var L = 0; L <= body.length - search.length; ++L) {\n    for (var j = 0; j < search.length; ++j) if (body[L + j] != search[j]) continue outer;\n    return true;\n  }\n  return false;\n}\nfunction u8concat(u8a) {\n  var len = u8a.reduce(function (acc, x) {\n    return acc + x.length;\n  }, 0);\n  var out = new Uint8Array(len);\n  var off = 0;\n  u8a.forEach(function (u8) {\n    out.set(u8, off);\n    off += u8.length;\n  });\n  return out;\n}\nfunction popcnt(x) {\n  x -= x >> 1 & 1431655765;\n  x = (x & 858993459) + (x >> 2 & 858993459);\n  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n}\nfunction readDecimal128LE(buf, offset) {\n  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n  var mantissa = buf[offset + 14] & 1;\n  for (var j = offset + 13; j >= offset; --j) mantissa = mantissa * 256 + buf[j];\n  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n}\nfunction writeDecimal128LE(buf, offset, value) {\n  var exp = Math.floor(value == 0 ? 0 : Math.LOG10E * Math.log(Math.abs(value))) + 6176 - 20;\n  var mantissa = value / Math.pow(10, exp - 6176);\n  buf[offset + 15] |= exp >> 7;\n  buf[offset + 14] |= (exp & 127) << 1;\n  for (var i = 0; mantissa >= 1; ++i, mantissa /= 256) buf[offset + i] = mantissa & 255;\n  buf[offset + 15] |= value >= 0 ? 0 : 128;\n}\nfunction parse_varint49(buf, ptr) {\n  var l = ptr ? ptr[0] : 0;\n  var usz = buf[l] & 127;\n  varint: if (buf[l++] >= 128) {\n    usz |= (buf[l] & 127) << 7;\n    if (buf[l++] < 128) break varint;\n    usz |= (buf[l] & 127) << 14;\n    if (buf[l++] < 128) break varint;\n    usz |= (buf[l] & 127) << 21;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 28);\n    ++l;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 35);\n    ++l;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 42);\n    ++l;\n    if (buf[l++] < 128) break varint;\n  }\n  if (ptr) ptr[0] = l;\n  return usz;\n}\nfunction write_varint49(v) {\n  var usz = new Uint8Array(7);\n  usz[0] = v & 127;\n  var L = 1;\n  sz: if (v > 127) {\n    usz[L - 1] |= 128;\n    usz[L] = v >> 7 & 127;\n    ++L;\n    if (v <= 16383) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v >> 14 & 127;\n    ++L;\n    if (v <= 2097151) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v >> 21 & 127;\n    ++L;\n    if (v <= 268435455) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 256 >>> 21 & 127;\n    ++L;\n    if (v <= 34359738367) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 65536 >>> 21 & 127;\n    ++L;\n    if (v <= 4398046511103) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 16777216 >>> 21 & 127;\n    ++L;\n  }\n  return usz.slice(0, L);\n}\nfunction varint_to_i32(buf) {\n  var l = 0,\n    i32 = buf[l] & 127;\n  varint: if (buf[l++] >= 128) {\n    i32 |= (buf[l] & 127) << 7;\n    if (buf[l++] < 128) break varint;\n    i32 |= (buf[l] & 127) << 14;\n    if (buf[l++] < 128) break varint;\n    i32 |= (buf[l] & 127) << 21;\n    if (buf[l++] < 128) break varint;\n    i32 |= (buf[l] & 127) << 28;\n  }\n  return i32;\n}\nfunction parse_shallow(buf) {\n  var out = [],\n    ptr = [0];\n  while (ptr[0] < buf.length) {\n    var off = ptr[0];\n    var num = parse_varint49(buf, ptr);\n    var type = num & 7;\n    num = Math.floor(num / 8);\n    var len = 0;\n    var res;\n    if (num == 0) break;\n    switch (type) {\n      case 0:\n        {\n          var l = ptr[0];\n          while (buf[ptr[0]++] >= 128);\n          res = buf.slice(l, ptr[0]);\n        }\n        break;\n      case 5:\n        len = 4;\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 1:\n        len = 8;\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 2:\n        len = parse_varint49(buf, ptr);\n        res = buf.slice(ptr[0], ptr[0] + len);\n        ptr[0] += len;\n        break;\n      case 3:\n      case 4:\n      default:\n        throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n    }\n    var v = {\n      data: res,\n      type: type\n    };\n    if (out[num] == null) out[num] = [v];else out[num].push(v);\n  }\n  return out;\n}\nfunction write_shallow(proto) {\n  var out = [];\n  proto.forEach(function (field, idx) {\n    field.forEach(function (item) {\n      if (!item.data) return;\n      out.push(write_varint49(idx * 8 + item.type));\n      if (item.type == 2) out.push(write_varint49(item.data.length));\n      out.push(item.data);\n    });\n  });\n  return u8concat(out);\n}\nfunction mappa(data, cb) {\n  return (data == null ? void 0 : data.map(function (d) {\n    return cb(d.data);\n  })) || [];\n}\nfunction parse_iwa_file(buf) {\n  var _a;\n  var out = [],\n    ptr = [0];\n  while (ptr[0] < buf.length) {\n    var len = parse_varint49(buf, ptr);\n    var ai = parse_shallow(buf.slice(ptr[0], ptr[0] + len));\n    ptr[0] += len;\n    var res = {\n      id: varint_to_i32(ai[1][0].data),\n      messages: []\n    };\n    ai[2].forEach(function (b) {\n      var mi = parse_shallow(b.data);\n      var fl = varint_to_i32(mi[3][0].data);\n      res.messages.push({\n        meta: mi,\n        data: buf.slice(ptr[0], ptr[0] + fl)\n      });\n      ptr[0] += fl;\n    });\n    if ((_a = ai[3]) == null ? void 0 : _a[0]) res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;\n    out.push(res);\n  }\n  return out;\n}\nfunction write_iwa_file(ias) {\n  var bufs = [];\n  ias.forEach(function (ia) {\n    var ai = [];\n    ai[1] = [{\n      data: write_varint49(ia.id),\n      type: 0\n    }];\n    ai[2] = [];\n    if (ia.merge != null) ai[3] = [{\n      data: write_varint49(+!!ia.merge),\n      type: 0\n    }];\n    var midata = [];\n    ia.messages.forEach(function (mi) {\n      midata.push(mi.data);\n      mi.meta[3] = [{\n        type: 0,\n        data: write_varint49(mi.data.length)\n      }];\n      ai[2].push({\n        data: write_shallow(mi.meta),\n        type: 2\n      });\n    });\n    var aipayload = write_shallow(ai);\n    bufs.push(write_varint49(aipayload.length));\n    bufs.push(aipayload);\n    midata.forEach(function (mid) {\n      return bufs.push(mid);\n    });\n  });\n  return u8concat(bufs);\n}\nfunction parse_snappy_chunk(type, buf) {\n  if (type != 0) throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n  var ptr = [0];\n  var usz = parse_varint49(buf, ptr);\n  var chunks = [];\n  while (ptr[0] < buf.length) {\n    var tag = buf[ptr[0]] & 3;\n    if (tag == 0) {\n      var len = buf[ptr[0]++] >> 2;\n      if (len < 60) ++len;else {\n        var c = len - 59;\n        len = buf[ptr[0]];\n        if (c > 1) len |= buf[ptr[0] + 1] << 8;\n        if (c > 2) len |= buf[ptr[0] + 2] << 16;\n        if (c > 3) len |= buf[ptr[0] + 3] << 24;\n        len >>>= 0;\n        len++;\n        ptr[0] += c;\n      }\n      chunks.push(buf.slice(ptr[0], ptr[0] + len));\n      ptr[0] += len;\n      continue;\n    } else {\n      var offset = 0,\n        length = 0;\n      if (tag == 1) {\n        length = (buf[ptr[0]] >> 2 & 7) + 4;\n        offset = (buf[ptr[0]++] & 224) << 3;\n        offset |= buf[ptr[0]++];\n      } else {\n        length = (buf[ptr[0]++] >> 2) + 1;\n        if (tag == 2) {\n          offset = buf[ptr[0]] | buf[ptr[0] + 1] << 8;\n          ptr[0] += 2;\n        } else {\n          offset = (buf[ptr[0]] | buf[ptr[0] + 1] << 8 | buf[ptr[0] + 2] << 16 | buf[ptr[0] + 3] << 24) >>> 0;\n          ptr[0] += 4;\n        }\n      }\n      chunks = [u8concat(chunks)];\n      if (offset == 0) throw new Error(\"Invalid offset 0\");\n      if (offset > chunks[0].length) throw new Error(\"Invalid offset beyond length\");\n      if (length >= offset) {\n        chunks.push(chunks[0].slice(-offset));\n        length -= offset;\n        while (length >= chunks[chunks.length - 1].length) {\n          chunks.push(chunks[chunks.length - 1]);\n          length -= chunks[chunks.length - 1].length;\n        }\n      }\n      chunks.push(chunks[0].slice(-offset, -offset + length));\n    }\n  }\n  var o = u8concat(chunks);\n  if (o.length != usz) throw new Error(\"Unexpected length: \".concat(o.length, \" != \").concat(usz));\n  return o;\n}\nfunction decompress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var t = buf[l++];\n    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n    l += 3;\n    out.push(parse_snappy_chunk(t, buf.slice(l, l + len)));\n    l += len;\n  }\n  if (l !== buf.length) throw new Error(\"data is not a valid framed stream!\");\n  return u8concat(out);\n}\nfunction compress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var c = Math.min(buf.length - l, 268435455);\n    var frame = new Uint8Array(4);\n    out.push(frame);\n    var usz = write_varint49(c);\n    var L = usz.length;\n    out.push(usz);\n    if (c <= 60) {\n      L++;\n      out.push(new Uint8Array([c - 1 << 2]));\n    } else if (c <= 256) {\n      L += 2;\n      out.push(new Uint8Array([240, c - 1 & 255]));\n    } else if (c <= 65536) {\n      L += 3;\n      out.push(new Uint8Array([244, c - 1 & 255, c - 1 >> 8 & 255]));\n    } else if (c <= 16777216) {\n      L += 4;\n      out.push(new Uint8Array([248, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255]));\n    } else if (c <= 4294967296) {\n      L += 5;\n      out.push(new Uint8Array([252, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255, c - 1 >>> 24 & 255]));\n    }\n    out.push(buf.slice(l, l + c));\n    L += c;\n    frame[0] = 0;\n    frame[1] = L & 255;\n    frame[2] = L >> 8 & 255;\n    frame[3] = L >> 16 & 255;\n    l += c;\n  }\n  return u8concat(out);\n}\nfunction parse_old_storage(buf, sst, rsst, v) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var data_offset = (v > 1 ? 12 : 8) + popcnt(flags & (v > 1 ? 3470 : 398)) * 4;\n  var ridx = -1,\n    sidx = -1,\n    ieee = NaN,\n    dt = new Date(2001, 0, 1);\n  if (flags & 512) {\n    ridx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  data_offset += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;\n  if (flags & 16) {\n    sidx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  if (flags & 32) {\n    ieee = dv.getFloat64(data_offset, true);\n    data_offset += 8;\n  }\n  if (flags & 64) {\n    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n    data_offset += 8;\n  }\n  var ret;\n  switch (buf[2]) {\n    case 0:\n      break;\n    case 2:\n      ret = {\n        t: \"n\",\n        v: ieee\n      };\n      break;\n    case 3:\n      ret = {\n        t: \"s\",\n        v: sst[sidx]\n      };\n      break;\n    case 5:\n      ret = {\n        t: \"d\",\n        v: dt\n      };\n      break;\n    case 6:\n      ret = {\n        t: \"b\",\n        v: ieee > 0\n      };\n      break;\n    case 7:\n      ret = {\n        t: \"n\",\n        v: ieee / 86400\n      };\n      break;\n    case 8:\n      ret = {\n        t: \"e\",\n        v: 0\n      };\n      break;\n    case 9:\n      {\n        if (ridx > -1) ret = {\n          t: \"s\",\n          v: rsst[ridx]\n        };else if (sidx > -1) ret = {\n          t: \"s\",\n          v: sst[sidx]\n        };else if (!isNaN(ieee)) ret = {\n          t: \"n\",\n          v: ieee\n        };else throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n      }\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf.slice(0, 4)));\n  }\n  return ret;\n}\nfunction parse_new_storage(buf, sst, rsst) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(8, true);\n  var data_offset = 12;\n  var ridx = -1,\n    sidx = -1,\n    d128 = NaN,\n    ieee = NaN,\n    dt = new Date(2001, 0, 1);\n  if (flags & 1) {\n    d128 = readDecimal128LE(buf, data_offset);\n    data_offset += 16;\n  }\n  if (flags & 2) {\n    ieee = dv.getFloat64(data_offset, true);\n    data_offset += 8;\n  }\n  if (flags & 4) {\n    dt.setTime(dt.getTime() + dv.getFloat64(data_offset, true) * 1e3);\n    data_offset += 8;\n  }\n  if (flags & 8) {\n    sidx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  if (flags & 16) {\n    ridx = dv.getUint32(data_offset, true);\n    data_offset += 4;\n  }\n  var ret;\n  switch (buf[1]) {\n    case 0:\n      break;\n    case 2:\n      ret = {\n        t: \"n\",\n        v: d128\n      };\n      break;\n    case 3:\n      ret = {\n        t: \"s\",\n        v: sst[sidx]\n      };\n      break;\n    case 5:\n      ret = {\n        t: \"d\",\n        v: dt\n      };\n      break;\n    case 6:\n      ret = {\n        t: \"b\",\n        v: ieee > 0\n      };\n      break;\n    case 7:\n      ret = {\n        t: \"n\",\n        v: ieee / 86400\n      };\n      break;\n    case 8:\n      ret = {\n        t: \"e\",\n        v: 0\n      };\n      break;\n    case 9:\n      {\n        if (ridx > -1) ret = {\n          t: \"s\",\n          v: rsst[ridx]\n        };else throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n      }\n      break;\n    case 10:\n      ret = {\n        t: \"n\",\n        v: d128\n      };\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(flags & 31, \" : \").concat(buf.slice(0, 4)));\n  }\n  return ret;\n}\nfunction write_new_storage(cell, sst) {\n  var out = new Uint8Array(32),\n    dv = u8_to_dataview(out),\n    l = 12,\n    flags = 0;\n  out[0] = 5;\n  switch (cell.t) {\n    case \"n\":\n      out[1] = 2;\n      writeDecimal128LE(out, l, cell.v);\n      flags |= 1;\n      l += 16;\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 2;\n      l += 8;\n      break;\n    case \"s\":\n      if (sst.indexOf(cell.v) == -1) throw new Error(\"Value \".concat(cell.v, \" missing from SST!\"));\n      out[1] = 3;\n      dv.setUint32(l, sst.indexOf(cell.v), true);\n      flags |= 8;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, flags, true);\n  return out.slice(0, l);\n}\nfunction write_old_storage(cell, sst) {\n  var out = new Uint8Array(32),\n    dv = u8_to_dataview(out),\n    l = 12,\n    flags = 0;\n  out[0] = 3;\n  switch (cell.t) {\n    case \"n\":\n      out[2] = 2;\n      dv.setFloat64(l, cell.v, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"b\":\n      out[2] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      flags |= 32;\n      l += 8;\n      break;\n    case \"s\":\n      if (sst.indexOf(cell.v) == -1) throw new Error(\"Value \".concat(cell.v, \" missing from SST!\"));\n      out[2] = 3;\n      dv.setUint32(l, sst.indexOf(cell.v), true);\n      flags |= 16;\n      l += 4;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(4, flags, true);\n  return out.slice(0, l);\n}\nfunction parse_cell_storage(buf, sst, rsst) {\n  switch (buf[0]) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n      return parse_old_storage(buf, sst, rsst, buf[0]);\n    case 5:\n      return parse_new_storage(buf, sst, rsst);\n    default:\n      throw new Error(\"Unsupported payload version \".concat(buf[0]));\n  }\n}\nfunction parse_TSP_Reference(buf) {\n  var pb = parse_shallow(buf);\n  return parse_varint49(pb[1][0].data);\n}\nfunction write_TSP_Reference(idx) {\n  var out = [];\n  out[1] = [{\n    type: 0,\n    data: write_varint49(idx)\n  }];\n  return write_shallow(out);\n}\nfunction parse_TST_TableDataList(M, root) {\n  var pb = parse_shallow(root.data);\n  var type = varint_to_i32(pb[1][0].data);\n  var entries = pb[3];\n  var data = [];\n  (entries || []).forEach(function (entry) {\n    var le = parse_shallow(entry.data);\n    var key = varint_to_i32(le[1][0].data) >>> 0;\n    switch (type) {\n      case 1:\n        data[key] = u8str(le[3][0].data);\n        break;\n      case 8:\n        {\n          var rt = M[parse_TSP_Reference(le[9][0].data)][0];\n          var rtp = parse_shallow(rt.data);\n          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];\n          var mtype = varint_to_i32(rtpref.meta[1][0].data);\n          if (mtype != 2001) throw new Error(\"2000 unexpected reference to \".concat(mtype));\n          var tswpsa = parse_shallow(rtpref.data);\n          data[key] = tswpsa[3].map(function (x) {\n            return u8str(x.data);\n          }).join(\"\");\n        }\n        break;\n    }\n  });\n  return data;\n}\nfunction parse_TST_TileRowInfo(u8, type) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  var pb = parse_shallow(u8);\n  var R = varint_to_i32(pb[1][0].data) >>> 0;\n  var cnt = varint_to_i32(pb[2][0].data) >>> 0;\n  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n  var used_storage_u8, used_storage;\n  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {\n    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;\n  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {\n    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;\n    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;\n  } else throw \"NUMBERS Tile missing \".concat(type, \" cell storage\");\n  var width = wide_offsets ? 4 : 1;\n  var used_storage_offsets = u8_to_dataview(used_storage_u8);\n  var offsets = [];\n  for (var C = 0; C < used_storage_u8.length / 2; ++C) {\n    var off = used_storage_offsets.getUint16(C * 2, true);\n    if (off < 65535) offsets.push([C, off]);\n  }\n  if (offsets.length != cnt) throw \"Expected \".concat(cnt, \" cells, found \").concat(offsets.length);\n  var cells = [];\n  for (C = 0; C < offsets.length - 1; ++C) cells[offsets[C][0]] = used_storage.subarray(offsets[C][1] * width, offsets[C + 1][1] * width);\n  if (offsets.length >= 1) cells[offsets[offsets.length - 1][0]] = used_storage.subarray(offsets[offsets.length - 1][1] * width);\n  return {\n    R: R,\n    cells: cells\n  };\n}\nfunction parse_TST_Tile(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var storage = ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) ? varint_to_i32(pb[7][0].data) >>> 0 > 0 ? 1 : 0 : -1;\n  var ri = mappa(pb[5], function (u8) {\n    return parse_TST_TileRowInfo(u8, storage);\n  });\n  return {\n    nrows: varint_to_i32(pb[4][0].data) >>> 0,\n    data: ri.reduce(function (acc, x) {\n      if (!acc[x.R]) acc[x.R] = [];\n      x.cells.forEach(function (cell, C) {\n        if (acc[x.R][C]) throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, [])\n  };\n}\nfunction parse_TST_TableModelArchive(M, root, ws) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var range = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n  if (range.e.r < 0) throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n  if (range.e.c < 0) throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n  ws[\"!ref\"] = encode_range(range);\n  var store = parse_shallow(pb[4][0].data);\n  var sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);\n  var rsst = ((_a = store[17]) == null ? void 0 : _a[0]) ? parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]) : [];\n  var tile = parse_shallow(store[3][0].data);\n  var _R = 0;\n  tile[1].forEach(function (t) {\n    var tl = parse_shallow(t.data);\n    var ref = M[parse_TSP_Reference(tl[2][0].data)][0];\n    var mtype = varint_to_i32(ref.meta[1][0].data);\n    if (mtype != 6002) throw new Error(\"6001 unexpected reference to \".concat(mtype));\n    var _tile = parse_TST_Tile(M, ref);\n    _tile.data.forEach(function (row, R) {\n      row.forEach(function (buf, C) {\n        var addr = encode_cell({\n          r: _R + R,\n          c: C\n        });\n        var res = parse_cell_storage(buf, sst, rsst);\n        if (res) ws[addr] = res;\n      });\n    });\n    _R += _tile.nrows;\n  });\n}\nfunction parse_TST_TableInfoArchive(M, root) {\n  var pb = parse_shallow(root.data);\n  var out = {\n    \"!ref\": \"A1\"\n  };\n  var tableref = M[parse_TSP_Reference(pb[2][0].data)];\n  var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n  if (mtype != 6001) throw new Error(\"6000 unexpected reference to \".concat(mtype));\n  parse_TST_TableModelArchive(M, tableref[0], out);\n  return out;\n}\nfunction parse_TN_SheetArchive(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var out = {\n    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n    sheets: []\n  };\n  var shapeoffs = mappa(pb[2], parse_TSP_Reference);\n  shapeoffs.forEach(function (off) {\n    M[off].forEach(function (m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 6e3) out.sheets.push(parse_TST_TableInfoArchive(M, m));\n    });\n  });\n  return out;\n}\nfunction parse_TN_DocumentArchive(M, root) {\n  var out = book_new();\n  var pb = parse_shallow(root.data);\n  var sheetoffs = mappa(pb[1], parse_TSP_Reference);\n  sheetoffs.forEach(function (off) {\n    M[off].forEach(function (m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 2) {\n        var root2 = parse_TN_SheetArchive(M, m);\n        root2.sheets.forEach(function (sheet, idx) {\n          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + \"_\" + idx, true);\n        });\n      }\n    });\n  });\n  if (out.SheetNames.length == 0) throw new Error(\"Empty NUMBERS file\");\n  return out;\n}\nfunction parse_numbers_iwa(cfb) {\n  var _a, _b, _c, _d;\n  var M = {},\n    indices = [];\n  cfb.FullPaths.forEach(function (p) {\n    if (p.match(/\\.iwpv2/)) throw new Error(\"Unsupported password protection\");\n  });\n  cfb.FileIndex.forEach(function (s) {\n    if (!s.name.match(/\\.iwa$/)) return;\n    var o;\n    try {\n      o = decompress_iwa_file(s.content);\n    } catch (e) {\n      return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n    }\n    var packets;\n    try {\n      packets = parse_iwa_file(o);\n    } catch (e) {\n      return console.log(\"## \" + (e.message || e));\n    }\n    packets.forEach(function (packet) {\n      M[packet.id] = packet.messages;\n      indices.push(packet.id);\n    });\n  });\n  if (!indices.length) throw new Error(\"File has no messages\");\n  var docroot = ((_d = (_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0]) == null ? void 0 : _b.meta) == null ? void 0 : _c[1]) == null ? void 0 : _d[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];\n  if (!docroot) indices.forEach(function (idx) {\n    M[idx].forEach(function (iwam) {\n      var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n      if (mtype == 1) {\n        if (!docroot) docroot = iwam;else throw new Error(\"Document has multiple roots\");\n      }\n    });\n  });\n  if (!docroot) throw new Error(\"Cannot find Document root\");\n  return parse_TN_DocumentArchive(M, docroot);\n}\nfunction write_tile_row(tri, data, SST) {\n  var _a, _b, _c, _d;\n  if (!((_a = tri[6]) == null ? void 0 : _a[0]) || !((_b = tri[7]) == null ? void 0 : _b[0])) throw \"Mutation only works on post-BNC storages!\";\n  var wide_offsets = ((_d = (_c = tri[8]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && varint_to_i32(tri[8][0].data) > 0 || false;\n  if (wide_offsets) throw \"Math only works with normal offsets\";\n  var cnt = 0;\n  var dv = u8_to_dataview(tri[7][0].data),\n    last_offset = 0,\n    cell_storage = [];\n  var _dv = u8_to_dataview(tri[4][0].data),\n    _last_offset = 0,\n    _cell_storage = [];\n  for (var C = 0; C < data.length; ++C) {\n    if (data[C] == null) {\n      dv.setUint16(C * 2, 65535, true);\n      _dv.setUint16(C * 2, 65535);\n      continue;\n    }\n    dv.setUint16(C * 2, last_offset, true);\n    _dv.setUint16(C * 2, _last_offset, true);\n    var celload, _celload;\n    switch (typeof data[C]) {\n      case \"string\":\n        celload = write_new_storage({\n          t: \"s\",\n          v: data[C]\n        }, SST);\n        _celload = write_old_storage({\n          t: \"s\",\n          v: data[C]\n        }, SST);\n        break;\n      case \"number\":\n        celload = write_new_storage({\n          t: \"n\",\n          v: data[C]\n        }, SST);\n        _celload = write_old_storage({\n          t: \"n\",\n          v: data[C]\n        }, SST);\n        break;\n      case \"boolean\":\n        celload = write_new_storage({\n          t: \"b\",\n          v: data[C]\n        }, SST);\n        _celload = write_old_storage({\n          t: \"b\",\n          v: data[C]\n        }, SST);\n        break;\n      default:\n        throw new Error(\"Unsupported value \" + data[C]);\n    }\n    cell_storage.push(celload);\n    last_offset += celload.length;\n    _cell_storage.push(_celload);\n    _last_offset += _celload.length;\n    ++cnt;\n  }\n  tri[2][0].data = write_varint49(cnt);\n  for (; C < tri[7][0].data.length / 2; ++C) {\n    dv.setUint16(C * 2, 65535, true);\n    _dv.setUint16(C * 2, 65535, true);\n  }\n  tri[6][0].data = u8concat(cell_storage);\n  tri[3][0].data = u8concat(_cell_storage);\n  return cnt;\n}\nfunction write_numbers_iwa(wb, opts) {\n  if (!opts || !opts.numbers) throw new Error(\"Must pass a `numbers` option -- check the README\");\n  var ws = wb.Sheets[wb.SheetNames[0]];\n  if (wb.SheetNames.length > 1) console.error(\"The Numbers writer currently writes only the first table\");\n  var range = decode_range(ws[\"!ref\"]);\n  range.s.r = range.s.c = 0;\n  var trunc = false;\n  if (range.e.c > 9) {\n    trunc = true;\n    range.e.c = 9;\n  }\n  if (range.e.r > 49) {\n    trunc = true;\n    range.e.r = 49;\n  }\n  if (trunc) console.error(\"The Numbers writer is currently limited to \".concat(encode_range(range)));\n  var data = sheet_to_json(ws, {\n    range: range,\n    header: 1\n  });\n  var SST = [\"~Sh33tJ5~\"];\n  data.forEach(function (row) {\n    return row.forEach(function (cell) {\n      if (typeof cell == \"string\") SST.push(cell);\n    });\n  });\n  var dependents = {};\n  var indices = [];\n  var cfb = CFB.read(opts.numbers, {\n    type: \"base64\"\n  });\n  cfb.FileIndex.map(function (fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function (row) {\n    var fi = row[0],\n      fp = row[1];\n    if (fi.type != 2) return;\n    if (!fi.name.match(/\\.iwa/)) return;\n    var old_content = fi.content;\n    var raw1 = decompress_iwa_file(old_content);\n    var x2 = parse_iwa_file(raw1);\n    x2.forEach(function (packet2) {\n      indices.push(packet2.id);\n      dependents[packet2.id] = {\n        deps: [],\n        location: fp,\n        type: varint_to_i32(packet2.messages[0].meta[1][0].data)\n      };\n    });\n  });\n  indices.sort(function (x2, y2) {\n    return x2 - y2;\n  });\n  var indices_varint = indices.filter(function (x2) {\n    return x2 > 1;\n  }).map(function (x2) {\n    return [x2, write_varint49(x2)];\n  });\n  cfb.FileIndex.map(function (fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function (row) {\n    var fi = row[0],\n      fp = row[1];\n    if (!fi.name.match(/\\.iwa/)) return;\n    var x2 = parse_iwa_file(decompress_iwa_file(fi.content));\n    x2.forEach(function (ia) {\n      ia.messages.forEach(function (m) {\n        indices_varint.forEach(function (ivi) {\n          if (ia.messages.some(function (mess) {\n            return varint_to_i32(mess.meta[1][0].data) != 11006 && u8contains(mess.data, ivi[1]);\n          })) {\n            dependents[ivi[0]].deps.push(ia.id);\n          }\n        });\n      });\n    });\n  });\n  function get_unique_msgid() {\n    for (var i = 927262; i < 2e6; ++i) if (!dependents[i]) return i;\n    throw new Error(\"Too many messages\");\n  }\n  var entry = CFB.find(cfb, dependents[1].location);\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var docroot;\n  for (var xi = 0; xi < x.length; ++xi) {\n    var packet = x[xi];\n    if (packet.id == 1) docroot = packet;\n  }\n  var sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[1][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref) docroot = packet;\n  }\n  sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[2][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref) docroot = packet;\n  }\n  sheetrootref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[2][0].data);\n  entry = CFB.find(cfb, dependents[sheetrootref].location);\n  x = parse_iwa_file(decompress_iwa_file(entry.content));\n  for (xi = 0; xi < x.length; ++xi) {\n    packet = x[xi];\n    if (packet.id == sheetrootref) docroot = packet;\n  }\n  var pb = parse_shallow(docroot.messages[0].data);\n  {\n    pb[6][0].data = write_varint49(range.e.r + 1);\n    pb[7][0].data = write_varint49(range.e.c + 1);\n    var cruidsref = parse_TSP_Reference(pb[46][0].data);\n    var oldbucket = CFB.find(cfb, dependents[cruidsref].location);\n    var _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n    {\n      for (var j = 0; j < _x.length; ++j) {\n        if (_x[j].id == cruidsref) break;\n      }\n      if (_x[j].id != cruidsref) throw \"Bad ColumnRowUIDMapArchive\";\n      var cruids = parse_shallow(_x[j].messages[0].data);\n      cruids[1] = [];\n      cruids[2] = [], cruids[3] = [];\n      for (var C = 0; C <= range.e.c; ++C) {\n        var uuid = [];\n        uuid[1] = uuid[2] = [{\n          type: 0,\n          data: write_varint49(C + 420690)\n        }];\n        cruids[1].push({\n          type: 2,\n          data: write_shallow(uuid)\n        });\n        cruids[2].push({\n          type: 0,\n          data: write_varint49(C)\n        });\n        cruids[3].push({\n          type: 0,\n          data: write_varint49(C)\n        });\n      }\n      cruids[4] = [];\n      cruids[5] = [], cruids[6] = [];\n      for (var R = 0; R <= range.e.r; ++R) {\n        uuid = [];\n        uuid[1] = uuid[2] = [{\n          type: 0,\n          data: write_varint49(R + 726270)\n        }];\n        cruids[4].push({\n          type: 2,\n          data: write_shallow(uuid)\n        });\n        cruids[5].push({\n          type: 0,\n          data: write_varint49(R)\n        });\n        cruids[6].push({\n          type: 0,\n          data: write_varint49(R)\n        });\n      }\n      _x[j].messages[0].data = write_shallow(cruids);\n    }\n    oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n    oldbucket.size = oldbucket.content.length;\n    delete pb[46];\n    var store = parse_shallow(pb[4][0].data);\n    {\n      store[7][0].data = write_varint49(range.e.r + 1);\n      var row_headers = parse_shallow(store[1][0].data);\n      var row_header_ref = parse_TSP_Reference(row_headers[2][0].data);\n      oldbucket = CFB.find(cfb, dependents[row_header_ref].location);\n      _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n      {\n        if (_x[0].id != row_header_ref) throw \"Bad HeaderStorageBucket\";\n        var base_bucket = parse_shallow(_x[0].messages[0].data);\n        for (R = 0; R < data.length; ++R) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(R);\n          _bucket[4][0].data = write_varint49(data[R].length);\n          base_bucket[2][R] = {\n            type: base_bucket[2][0].type,\n            data: write_shallow(_bucket)\n          };\n        }\n        _x[0].messages[0].data = write_shallow(base_bucket);\n      }\n      oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n      oldbucket.size = oldbucket.content.length;\n      var col_header_ref = parse_TSP_Reference(store[2][0].data);\n      oldbucket = CFB.find(cfb, dependents[col_header_ref].location);\n      _x = parse_iwa_file(decompress_iwa_file(oldbucket.content));\n      {\n        if (_x[0].id != col_header_ref) throw \"Bad HeaderStorageBucket\";\n        base_bucket = parse_shallow(_x[0].messages[0].data);\n        for (C = 0; C <= range.e.c; ++C) {\n          _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(C);\n          _bucket[4][0].data = write_varint49(range.e.r + 1);\n          base_bucket[2][C] = {\n            type: base_bucket[2][0].type,\n            data: write_shallow(_bucket)\n          };\n        }\n        _x[0].messages[0].data = write_shallow(base_bucket);\n      }\n      oldbucket.content = compress_iwa_file(write_iwa_file(_x));\n      oldbucket.size = oldbucket.content.length;\n      var sstref = parse_TSP_Reference(store[4][0].data);\n      (function () {\n        var sentry = CFB.find(cfb, dependents[sstref].location);\n        var sx = parse_iwa_file(decompress_iwa_file(sentry.content));\n        var sstroot;\n        for (var sxi = 0; sxi < sx.length; ++sxi) {\n          var packet2 = sx[sxi];\n          if (packet2.id == sstref) sstroot = packet2;\n        }\n        var sstdata = parse_shallow(sstroot.messages[0].data);\n        {\n          sstdata[3] = [];\n          var newsst = [];\n          SST.forEach(function (str, i) {\n            newsst[1] = [{\n              type: 0,\n              data: write_varint49(i)\n            }];\n            newsst[2] = [{\n              type: 0,\n              data: write_varint49(1)\n            }];\n            newsst[3] = [{\n              type: 2,\n              data: stru8(str)\n            }];\n            sstdata[3].push({\n              type: 2,\n              data: write_shallow(newsst)\n            });\n          });\n        }\n        sstroot.messages[0].data = write_shallow(sstdata);\n        var sy = write_iwa_file(sx);\n        var raw32 = compress_iwa_file(sy);\n        sentry.content = raw32;\n        sentry.size = sentry.content.length;\n      })();\n      var tile = parse_shallow(store[3][0].data);\n      {\n        var t = tile[1][0];\n        delete tile[2];\n        var tl = parse_shallow(t.data);\n        {\n          var tileref = parse_TSP_Reference(tl[2][0].data);\n          (function () {\n            var tentry = CFB.find(cfb, dependents[tileref].location);\n            var tx = parse_iwa_file(decompress_iwa_file(tentry.content));\n            var tileroot;\n            for (var sxi = 0; sxi < tx.length; ++sxi) {\n              var packet2 = tx[sxi];\n              if (packet2.id == tileref) tileroot = packet2;\n            }\n            var tiledata = parse_shallow(tileroot.messages[0].data);\n            {\n              delete tiledata[6];\n              delete tile[7];\n              var rowload = new Uint8Array(tiledata[5][0].data);\n              tiledata[5] = [];\n              var cnt = 0;\n              for (var R2 = 0; R2 <= range.e.r; ++R2) {\n                var tilerow = parse_shallow(rowload);\n                cnt += write_tile_row(tilerow, data[R2], SST);\n                tilerow[1][0].data = write_varint49(R2);\n                tiledata[5].push({\n                  data: write_shallow(tilerow),\n                  type: 2\n                });\n              }\n              tiledata[1] = [{\n                type: 0,\n                data: write_varint49(range.e.c + 1)\n              }];\n              tiledata[2] = [{\n                type: 0,\n                data: write_varint49(range.e.r + 1)\n              }];\n              tiledata[3] = [{\n                type: 0,\n                data: write_varint49(cnt)\n              }];\n              tiledata[4] = [{\n                type: 0,\n                data: write_varint49(range.e.r + 1)\n              }];\n            }\n            tileroot.messages[0].data = write_shallow(tiledata);\n            var ty = write_iwa_file(tx);\n            var raw32 = compress_iwa_file(ty);\n            tentry.content = raw32;\n            tentry.size = tentry.content.length;\n          })();\n        }\n        t.data = write_shallow(tl);\n      }\n      store[3][0].data = write_shallow(tile);\n    }\n    pb[4][0].data = write_shallow(store);\n  }\n  docroot.messages[0].data = write_shallow(pb);\n  var y = write_iwa_file(x);\n  var raw3 = compress_iwa_file(y);\n  entry.content = raw3;\n  entry.size = entry.content.length;\n  return cfb;\n}\nfunction fix_opts_func(defaults /*:Array<Array<any> >*/) /*:{(o:any):void}*/{\n  return function fix_opts(opts) {\n    for (var i = 0; i != defaults.length; ++i) {\n      var d = defaults[i];\n      if (opts[d[0]] === undefined) opts[d[0]] = d[1];\n      if (d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n    }\n  };\n}\nfunction fix_read_opts(opts) {\n  fix_opts_func([['cellNF', false], /* emit cell number format string as .z */\n  ['cellHTML', true], /* emit html string as .h */\n  ['cellFormula', true], /* emit formulae as .f */\n  ['cellStyles', false], /* emits style/theme as .s */\n  ['cellText', true], /* emit formatted text as .w */\n  ['cellDates', false], /* emit date cells with type `d` */\n\n  ['sheetStubs', false], /* emit empty cells */\n  ['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n  ['bookDeps', false], /* parse calculation chains */\n  ['bookSheets', false], /* only try to get sheet names (no Sheets) */\n  ['bookProps', false], /* only try to get properties (no Sheets) */\n  ['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n  ['bookVBA', false], /* include vba raw data (vbaraw) */\n\n  ['password', ''], /* password */\n  ['WTF', false] /* WTF mode (throws errors) */])(opts);\n}\nfunction fix_write_opts(opts) {\n  fix_opts_func([['cellDates', false], /* write date cells with type `d` */\n\n  ['bookSST', false], /* Generate Shared String Table */\n\n  ['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n  ['compression', false], /* Use file compression */\n\n  ['WTF', false] /* WTF mode (throws errors) */])(opts);\n}\nfunction get_sheet_type(n /*:string*/) /*:string*/{\n  if (RELS.WS.indexOf(n) > -1) return \"sheet\";\n  if (RELS.CS && n == RELS.CS) return \"chart\";\n  if (RELS.DS && n == RELS.DS) return \"dialog\";\n  if (RELS.MS && n == RELS.MS) return \"macro\";\n  return n && n.length ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n  if (!wbrels) return 0;\n  try {\n    wbrels = sheets.map(function pwbr(w) {\n      if (!w.id) w.id = w.strRelID;\n      return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)];\n    });\n  } catch (e) {\n    return null;\n  }\n  return !wbrels || wbrels.length === 0 ? null : wbrels;\n}\nfunction safe_parse_sheet(zip, path /*:string*/, relsPath /*:string*/, sheet, idx /*:number*/, sheetRels, sheets, stype /*:string*/, opts, wb, themes, styles) {\n  try {\n    sheetRels[sheet] = parse_rels(getzipstr(zip, relsPath, true), path);\n    var data = getzipdata(zip, path);\n    var _ws;\n    switch (stype) {\n      case 'sheet':\n        _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      case 'chart':\n        _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        if (!_ws || !_ws['!drawel']) break;\n        var dfile = resolve_path(_ws['!drawel'].Target, path);\n        var drelsp = get_rels_path(dfile);\n        var draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n        var chartp = resolve_path(draw, dfile);\n        var crelsp = get_rels_path(chartp);\n        _ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n        break;\n      case 'macro':\n        _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      case 'dialog':\n        _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      default:\n        throw new Error(\"Unrecognized sheet type \" + stype);\n    }\n    sheets[sheet] = _ws;\n\n    /* scan rels for comments and threaded comments */\n    var tcomments = [];\n    if (sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function (n) {\n      var dfile = \"\";\n      if (sheetRels[sheet][n].Type == RELS.CMNT) {\n        dfile = resolve_path(sheetRels[sheet][n].Target, path);\n        var comments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n        if (!comments || !comments.length) return;\n        sheet_insert_comments(_ws, comments, false);\n      }\n      if (sheetRels[sheet][n].Type == RELS.TCMNT) {\n        dfile = resolve_path(sheetRels[sheet][n].Target, path);\n        tcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));\n      }\n    });\n    if (tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n}\nfunction strip_front_slash(x /*:string*/) /*:string*/{\n  return x.charAt(0) == '/' ? x.slice(1) : x;\n}\nfunction parse_zip(zip /*:ZIP*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  make_ssf();\n  opts = opts || {};\n  fix_read_opts(opts);\n\n  /* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n  if (safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n  /* UOC */\n  if (safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n  /* Numbers */\n  if (safegetzipfile(zip, 'Index/Document.iwa')) {\n    if (typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n    if (typeof parse_numbers_iwa != \"undefined\") {\n      if (zip.FileIndex) return parse_numbers_iwa(zip);\n      var _zip = CFB.utils.cfb_new();\n      zipentries(zip).forEach(function (e) {\n        zip_add_file(_zip, e, getzipbin(zip, e));\n      });\n      return parse_numbers_iwa(_zip);\n    }\n    throw new Error('Unsupported NUMBERS file');\n  }\n  if (!safegetzipfile(zip, '[Content_Types].xml')) {\n    if (safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n    if (safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n    throw new Error('Unsupported ZIP file');\n  }\n  var entries = zipentries(zip);\n  var dir = parse_ct(getzipstr(zip, '[Content_Types].xml') /*:?any*/);\n  var xlsb = false;\n  var sheets, binname;\n  if (dir.workbooks.length === 0) {\n    binname = \"xl/workbook.xml\";\n    if (getzipdata(zip, binname, true)) dir.workbooks.push(binname);\n  }\n  if (dir.workbooks.length === 0) {\n    binname = \"xl/workbook.bin\";\n    if (!getzipdata(zip, binname, true)) throw new Error(\"Could not find workbook\");\n    dir.workbooks.push(binname);\n    xlsb = true;\n  }\n  if (dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n  var themes = {} /*:any*/;\n  var styles = {} /*:any*/;\n  if (!opts.bookSheets && !opts.bookProps) {\n    strs = [];\n    if (dir.sst) try {\n      strs = parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts);\n    } catch (e) {\n      if (opts.WTF) throw e;\n    }\n    if (opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\\//, ''), true) || \"\", dir.themes[0], opts);\n    if (dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n  }\n\n  /*var externbooks = */\n  dir.links.map(function (link) {\n    try {\n      var rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n      return parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n    } catch (e) {}\n  });\n  var wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n  var props = {},\n    propdata = \"\";\n  if (dir.coreprops.length) {\n    propdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n    if (propdata) props = parse_core_props(propdata);\n    if (dir.extprops.length !== 0) {\n      propdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n      if (propdata) parse_ext_props(propdata, props, opts);\n    }\n  }\n  var custprops = {};\n  if (!opts.bookSheets || opts.bookProps) {\n    if (dir.custprops.length !== 0) {\n      propdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n      if (propdata) custprops = parse_cust_props(propdata, opts);\n    }\n  }\n  var out = {} /*:any*/;\n  if (opts.bookSheets || opts.bookProps) {\n    if (wb.Sheets) sheets = wb.Sheets.map(function pluck(x) {\n      return x.name;\n    });else if (props.Worksheets && props.SheetNames.length > 0) sheets = props.SheetNames;\n    if (opts.bookProps) {\n      out.Props = props;\n      out.Custprops = custprops;\n    }\n    if (opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n    if (opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n  }\n  sheets = {};\n  var deps = {};\n  if (opts.bookDeps && dir.calcchain) deps = parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)), dir.calcchain, opts);\n  var i = 0;\n  var sheetRels = {} /*:any*/;\n  var path, relsPath;\n  {\n    var wbsheets = wb.Sheets;\n    props.Worksheets = wbsheets.length;\n    props.SheetNames = [];\n    for (var j = 0; j != wbsheets.length; ++j) {\n      props.SheetNames[j] = wbsheets[j].name;\n    }\n  }\n  var wbext = xlsb ? \"bin\" : \"xml\";\n  var wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n  var wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi + 1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi + 1) + \".rels\").replace(/^\\//, \"\");\n  if (!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n  var wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n  if ((dir.metadata || []).length >= 1) {\n    /* TODO: MDX and other types of metadata */\n    opts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])), dir.metadata[0], opts);\n  }\n  if ((dir.people || []).length >= 1) {\n    opts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])), opts);\n  }\n  if (wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n  /* Numbers iOS hack */\n  var nmode = getzipdata(zip, \"xl/worksheets/sheet.xml\", true) ? 1 : 0;\n  wsloop: for (i = 0; i != props.Worksheets; ++i) {\n    var stype = \"sheet\";\n    if (wbrels && wbrels[i]) {\n      path = 'xl/' + wbrels[i][1].replace(/[\\/]?xl\\//, \"\");\n      if (!safegetzipfile(zip, path)) path = wbrels[i][1];\n      if (!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/, \"\") + wbrels[i][1];\n      stype = wbrels[i][2];\n    } else {\n      path = 'xl/worksheets/sheet' + (i + 1 - nmode) + \".\" + wbext;\n      path = path.replace(/sheet0\\./, \"sheet.\");\n    }\n    relsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n    if (opts && opts.sheets != null) switch (typeof opts.sheets) {\n      case \"number\":\n        if (i != opts.sheets) continue wsloop;\n        break;\n      case \"string\":\n        if (props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop;\n        break;\n      default:\n        if (Array.isArray && Array.isArray(opts.sheets)) {\n          var snjseen = false;\n          for (var snj = 0; snj != opts.sheets.length; ++snj) {\n            if (typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen = 1;\n            if (typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n          }\n          if (!snjseen) continue wsloop;\n        }\n    }\n    safe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n  }\n  out = {\n    Directory: dir,\n    Workbook: wb,\n    Props: props,\n    Custprops: custprops,\n    Deps: deps,\n    Sheets: sheets,\n    SheetNames: props.SheetNames,\n    Strings: strs,\n    Styles: styles,\n    Themes: themes,\n    SSF: dup(table_fmt)\n  } /*:any*/;\n  if (opts && opts.bookFiles) {\n    if (zip.files) {\n      out.keys = entries;\n      out.files = zip.files;\n    } else {\n      out.keys = [];\n      out.files = {};\n      zip.FullPaths.forEach(function (p, idx) {\n        p = p.replace(/^Root Entry[\\/]/, \"\");\n        out.keys.push(p);\n        out.files[p] = zip.FileIndex[idx];\n      });\n    }\n  }\n  if (opts && opts.bookVBA) {\n    if (dir.vba.length > 0) out.vbaraw = getzipdata(zip, strip_front_slash(dir.vba[0]), true);else if (dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin', true);\n  }\n  return out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts /*:?ParseOpts*/) /*:Workbook*/{\n  var opts = _opts || {};\n  var f = 'Workbook',\n    data = CFB.find(cfb, f);\n  try {\n    f = '/!DataSpaces/Version';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    /*var version = */\n    parse_DataSpaceVersionInfo(data.content);\n\n    /* 2.3.4.1 */\n    f = '/!DataSpaces/DataSpaceMap';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    var dsm = parse_DataSpaceMap(data.content);\n    if (dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\") throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n    /* 2.3.4.2 */\n    f = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    var seds = parse_DataSpaceDefinition(data.content);\n    if (seds.length != 1 || seds[0] != \"StrongEncryptionTransform\") throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n    /* 2.3.4.3 */\n    f = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    /*var hdr = */\n    parse_Primary(data.content);\n  } catch (e) {}\n  f = '/EncryptionInfo';\n  data = CFB.find(cfb, f);\n  if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n  var einfo = parse_EncryptionInfo(data.content);\n\n  /* 2.3.4.4 */\n  f = '/EncryptedPackage';\n  data = CFB.find(cfb, f);\n  if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n  /*global decrypt_agile */\n  /*:: declare var decrypt_agile:any; */\n  if (einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n  /*global decrypt_std76 */\n  /*:: declare var decrypt_std76:any; */\n  if (einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n  throw new Error(\"File is password-protected\");\n}\nfunction write_zip(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  if (opts.bookType == \"ods\") return write_ods(wb, opts);\n  if (opts.bookType == \"numbers\") return write_numbers_iwa(wb, opts);\n  if (opts.bookType == \"xlsb\") return write_zip_xlsxb(wb, opts);\n  return write_zip_xlsx(wb, opts);\n}\n\n/* XLSX and XLSB writing are very similar.  Originally they were unified in one\n   export function.  This is horrible for tree shaking in the common case (most\n   applications need to export files in one format) so this function supports\n   both formats while write_zip_xlsx only handles XLSX */\nfunction write_zip_xlsxb(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  _shapeid = 1024;\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n  }\n  opts.rels = {};\n  opts.wbrels = {};\n  opts.Strings = /*::((*/[] /*:: :any):SST)*/;\n  opts.Strings.Count = 0;\n  opts.Strings.Unique = 0;\n  if (browser_has_Map) opts.revStrings = new Map();else {\n    opts.revStrings = {};\n    opts.revStrings.foo = [];\n    delete opts.revStrings.foo;\n  }\n  var wbext = opts.bookType == \"xlsb\" ? \"bin\" : \"xml\";\n  var vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n  var ct = new_ct();\n  fix_write_opts(opts = opts || {});\n  var zip = zip_new();\n  var f = \"\",\n    rId = 0;\n  opts.cellXfs = [];\n  get_cell_style(opts.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  f = \"docProps/core.xml\";\n  zip_add_file(zip, f, write_core_props(wb.Props, opts));\n  ct.coreprops.push(f);\n  add_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n  /*::if(!wb.Props) throw \"unreachable\"; */\n  f = \"docProps/app.xml\";\n  if (wb.Props && wb.Props.SheetNames) {/* empty */} else if (!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;else {\n    var _sn = [];\n    for (var _i = 0; _i < wb.SheetNames.length; ++_i) if ((wb.Workbook.Sheets[_i] || {}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n    wb.Props.SheetNames = _sn;\n  }\n  wb.Props.Worksheets = wb.Props.SheetNames.length;\n  zip_add_file(zip, f, write_ext_props(wb.Props, opts));\n  ct.extprops.push(f);\n  add_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n  if (wb.Custprops !== wb.Props && keys(wb.Custprops || {}).length > 0) {\n    f = \"docProps/custom.xml\";\n    zip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n    ct.custprops.push(f);\n    add_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n  }\n  for (rId = 1; rId <= wb.SheetNames.length; ++rId) {\n    var wsrels = {\n      '!id': {}\n    };\n    var ws = wb.Sheets[wb.SheetNames[rId - 1]];\n    var _type = (ws || {})[\"!type\"] || \"sheet\";\n    switch (_type) {\n      case \"chart\":\n      /* falls through */\n      default:\n        f = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n        zip_add_file(zip, f, write_ws(rId - 1, f, opts, wb, wsrels));\n        ct.sheets.push(f);\n        add_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n    }\n    if (ws) {\n      var comments = ws['!comments'];\n      var need_vml = false;\n      var cf = \"\";\n      if (comments && comments.length > 0) {\n        cf = \"xl/comments\" + rId + \".\" + wbext;\n        zip_add_file(zip, cf, write_cmnt(comments, cf, opts));\n        ct.comments.push(cf);\n        add_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n        need_vml = true;\n      }\n      if (ws['!legacy']) {\n        if (need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + rId + \".vml\", write_comments_vml(rId, ws['!comments']));\n      }\n      delete ws['!comments'];\n      delete ws['!legacy'];\n    }\n    if (wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n  }\n  if (opts.Strings != null && opts.Strings.length > 0) {\n    f = \"xl/sharedStrings.\" + wbext;\n    zip_add_file(zip, f, write_sst(opts.Strings, f, opts));\n    ct.strs.push(f);\n    add_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n  }\n  f = \"xl/workbook.\" + wbext;\n  zip_add_file(zip, f, write_wb(wb, f, opts));\n  ct.workbooks.push(f);\n  add_rels(opts.rels, 1, f, RELS.WB);\n\n  /* TODO: something more intelligent with themes */\n\n  f = \"xl/theme/theme1.xml\";\n  zip_add_file(zip, f, write_theme(wb.Themes, opts));\n  ct.themes.push(f);\n  add_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n  /* TODO: something more intelligent with styles */\n\n  f = \"xl/styles.\" + wbext;\n  zip_add_file(zip, f, write_sty(wb, f, opts));\n  ct.styles.push(f);\n  add_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n  if (wb.vbaraw && vbafmt) {\n    f = \"xl/vbaProject.bin\";\n    zip_add_file(zip, f, wb.vbaraw);\n    ct.vba.push(f);\n    add_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n  }\n  f = \"xl/metadata.\" + wbext;\n  zip_add_file(zip, f, write_xlmeta(f));\n  ct.metadata.push(f);\n  add_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n  zip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n  zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n  zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n  delete opts.revssf;\n  delete opts.ssf;\n  return zip;\n}\nfunction write_zip_xlsx(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  _shapeid = 1024;\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n  }\n  opts.rels = {};\n  opts.wbrels = {};\n  opts.Strings = /*::((*/[] /*:: :any):SST)*/;\n  opts.Strings.Count = 0;\n  opts.Strings.Unique = 0;\n  if (browser_has_Map) opts.revStrings = new Map();else {\n    opts.revStrings = {};\n    opts.revStrings.foo = [];\n    delete opts.revStrings.foo;\n  }\n  var wbext = \"xml\";\n  var vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n  var ct = new_ct();\n  fix_write_opts(opts = opts || {});\n  var zip = zip_new();\n  var f = \"\",\n    rId = 0;\n  opts.cellXfs = [];\n  get_cell_style(opts.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  f = \"docProps/core.xml\";\n  zip_add_file(zip, f, write_core_props(wb.Props, opts));\n  ct.coreprops.push(f);\n  add_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n  /*::if(!wb.Props) throw \"unreachable\"; */\n  f = \"docProps/app.xml\";\n  if (wb.Props && wb.Props.SheetNames) {/* empty */} else if (!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;else {\n    var _sn = [];\n    for (var _i = 0; _i < wb.SheetNames.length; ++_i) if ((wb.Workbook.Sheets[_i] || {}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n    wb.Props.SheetNames = _sn;\n  }\n  wb.Props.Worksheets = wb.Props.SheetNames.length;\n  zip_add_file(zip, f, write_ext_props(wb.Props, opts));\n  ct.extprops.push(f);\n  add_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n  if (wb.Custprops !== wb.Props && keys(wb.Custprops || {}).length > 0) {\n    f = \"docProps/custom.xml\";\n    zip_add_file(zip, f, write_cust_props(wb.Custprops, opts));\n    ct.custprops.push(f);\n    add_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n  }\n  var people = [\"SheetJ5\"];\n  opts.tcid = 0;\n  for (rId = 1; rId <= wb.SheetNames.length; ++rId) {\n    var wsrels = {\n      '!id': {}\n    };\n    var ws = wb.Sheets[wb.SheetNames[rId - 1]];\n    var _type = (ws || {})[\"!type\"] || \"sheet\";\n    switch (_type) {\n      case \"chart\":\n      /* falls through */\n      default:\n        f = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n        zip_add_file(zip, f, write_ws_xml(rId - 1, opts, wb, wsrels));\n        ct.sheets.push(f);\n        add_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n    }\n    if (ws) {\n      var comments = ws['!comments'];\n      var need_vml = false;\n      var cf = \"\";\n      if (comments && comments.length > 0) {\n        var needtc = false;\n        comments.forEach(function (carr) {\n          carr[1].forEach(function (c) {\n            if (c.T == true) needtc = true;\n          });\n        });\n        if (needtc) {\n          cf = \"xl/threadedComments/threadedComment\" + rId + \".\" + wbext;\n          zip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n          ct.threadedcomments.push(cf);\n          add_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".\" + wbext, RELS.TCMNT);\n        }\n        cf = \"xl/comments\" + rId + \".\" + wbext;\n        zip_add_file(zip, cf, write_comments_xml(comments, opts));\n        ct.comments.push(cf);\n        add_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n        need_vml = true;\n      }\n      if (ws['!legacy']) {\n        if (need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + rId + \".vml\", write_comments_vml(rId, ws['!comments']));\n      }\n      delete ws['!comments'];\n      delete ws['!legacy'];\n    }\n    if (wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n  }\n  if (opts.Strings != null && opts.Strings.length > 0) {\n    f = \"xl/sharedStrings.\" + wbext;\n    zip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n    ct.strs.push(f);\n    add_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n  }\n  f = \"xl/workbook.\" + wbext;\n  zip_add_file(zip, f, write_wb_xml(wb, opts));\n  ct.workbooks.push(f);\n  add_rels(opts.rels, 1, f, RELS.WB);\n\n  /* TODO: something more intelligent with themes */\n\n  f = \"xl/theme/theme1.xml\";\n  zip_add_file(zip, f, write_theme(wb.Themes, opts));\n  ct.themes.push(f);\n  add_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n  /* TODO: something more intelligent with styles */\n\n  f = \"xl/styles.\" + wbext;\n  zip_add_file(zip, f, write_sty_xml(wb, opts));\n  ct.styles.push(f);\n  add_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n  if (wb.vbaraw && vbafmt) {\n    f = \"xl/vbaProject.bin\";\n    zip_add_file(zip, f, wb.vbaraw);\n    ct.vba.push(f);\n    add_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n  }\n  f = \"xl/metadata.\" + wbext;\n  zip_add_file(zip, f, write_xlmeta_xml());\n  ct.metadata.push(f);\n  add_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n  if (people.length > 1) {\n    f = \"xl/persons/person.xml\";\n    zip_add_file(zip, f, write_people_xml(people, opts));\n    ct.people.push(f);\n    add_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n  }\n  zip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n  zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n  zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n  delete opts.revssf;\n  delete opts.ssf;\n  return zip;\n}\nfunction firstbyte(f /*:RawData*/, o /*:?TypeOpts*/) /*:Array<number>*/{\n  var x = \"\";\n  switch ((o || {}).type || \"base64\") {\n    case 'buffer':\n      return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n    case 'base64':\n      x = Base64_decode(f.slice(0, 12));\n      break;\n    case 'binary':\n      x = f;\n      break;\n    case 'array':\n      return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n    default:\n      throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n  }\n  return [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\nfunction read_cfb(cfb /*:CFBContainer*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  if (CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n  return parse_xlscfb(cfb, opts);\n}\nfunction read_zip(data /*:RawData*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  var zip,\n    d = data;\n  var o = opts || {};\n  if (!o.type) o.type = has_buf && Buffer.isBuffer(data) ? \"buffer\" : \"base64\";\n  zip = zip_read(d, o);\n  return parse_zip(zip, o);\n}\nfunction read_plaintext(data /*:string*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var i = 0;\n  main: while (i < data.length) switch (data.charCodeAt(i)) {\n    case 0x0A:\n    case 0x0D:\n    case 0x20:\n      ++i;\n      break;\n    case 0x3C:\n      return parse_xlml(data.slice(i), o);\n    default:\n      break main;\n  }\n  return PRN.to_workbook(data, o);\n}\nfunction read_plaintext_raw(data /*:RawData*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var str = \"\",\n    bytes = firstbyte(data, o);\n  switch (o.type) {\n    case 'base64':\n      str = Base64_decode(data);\n      break;\n    case 'binary':\n      str = data;\n      break;\n    case 'buffer':\n      str = data.toString('binary');\n      break;\n    case 'array':\n      str = cc2str(data);\n      break;\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  if (bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n  o.type = \"binary\";\n  return read_plaintext(str, o);\n}\nfunction read_utf16(data /*:RawData*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var d = data;\n  if (o.type == 'base64') d = Base64_decode(d);\n  d = $cptable.utils.decode(1200, d.slice(2), 'str');\n  o.type = \"binary\";\n  return read_plaintext(d, o);\n}\nfunction bstrify(data /*:string*/) /*:string*/{\n  return !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\nfunction read_prn(data, d, o, str) {\n  if (str) {\n    o.type = \"string\";\n    return PRN.to_workbook(data, o);\n  }\n  return PRN.to_workbook(d, o);\n}\nfunction readSync(data /*:RawData*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  reset_cp();\n  var o = opts || {};\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n  if (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n  var d = data,\n    n = [0, 0, 0, 0],\n    str = false;\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  _ssfopts = {};\n  if (o.dateNF) _ssfopts.dateNF = o.dateNF;\n  if (!o.type) o.type = has_buf && Buffer.isBuffer(data) ? \"buffer\" : \"base64\";\n  if (o.type == \"file\") {\n    o.type = has_buf ? \"buffer\" : \"binary\";\n    d = read_binary(data);\n    if (typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\";\n  }\n  if (o.type == \"string\") {\n    str = true;\n    o.type = \"binary\";\n    o.codepage = 65001;\n    d = bstrify(data);\n  }\n  if (o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n    // $FlowIgnore\n    var ab = new ArrayBuffer(3),\n      vu = new Uint8Array(ab);\n    vu.foo = \"bar\";\n    // $FlowIgnore\n    if (!vu.foo) {\n      o = dup(o);\n      o.type = 'array';\n      return readSync(ab2a(d), o);\n    }\n  }\n  switch ((n = firstbyte(d, o))[0]) {\n    case 0xD0:\n      if (n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o);\n      break;\n    case 0x09:\n      if (n[1] <= 0x08) return parse_xlscfb(d, o);\n      break;\n    case 0x3C:\n      return parse_xlml(d, o);\n    case 0x49:\n      if (n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n      if (n[1] === 0x44) return read_wb_ID(d, o);\n      break;\n    case 0x54:\n      if (n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o);\n      break;\n    case 0x50:\n      return n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09 ? read_zip(d, o) : read_prn(data, d, o, str);\n    case 0xEF:\n      return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n    case 0xFF:\n      if (n[1] === 0xFE) {\n        return read_utf16(d, o);\n      } else if (n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n      break;\n    case 0x00:\n      if (n[1] === 0x00) {\n        if (n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n        if (n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n      }\n      break;\n    case 0x03:\n    case 0x83:\n    case 0x8B:\n    case 0x8C:\n      return DBF.to_workbook(d, o);\n    case 0x7B:\n      if (n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o);\n      break;\n    case 0x0A:\n    case 0x0D:\n    case 0x20:\n      return read_plaintext_raw(d, o);\n    case 0x89:\n      if (n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\");\n      break;\n  }\n  if (DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n  return read_prn(data, d, o, str);\n}\nfunction readFileSync(filename /*:string*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  var o = opts || {};\n  o.type = 'file';\n  return readSync(filename, o);\n}\nfunction write_cfb_ctr(cfb /*:CFBContainer*/, o /*:WriteOpts*/) /*:any*/{\n  switch (o.type) {\n    case \"base64\":\n    case \"binary\":\n      break;\n    case \"buffer\":\n    case \"array\":\n      o.type = \"\";\n      break;\n    case \"file\":\n      return write_dl(o.file, CFB.write(cfb, {\n        type: has_buf ? 'buffer' : \"\"\n      }));\n    case \"string\":\n      throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  return CFB.write(cfb, o);\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = dup(opts || {});\n  var z = write_zip(wb, o);\n  return write_zip_denouement(z, o);\n}\nfunction write_zip_typeXLSX(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = dup(opts || {});\n  var z = write_zip_xlsx(wb, o);\n  return write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z /*:any*/, o /*:?WriteOpts*/) /*:any*/{\n  var oopts = {};\n  var ftype = has_buf ? \"nodebuffer\" : typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\";\n  if (o.compression) oopts.compression = 'DEFLATE';\n  if (o.password) oopts.type = ftype;else switch (o.type) {\n    case \"base64\":\n      oopts.type = \"base64\";\n      break;\n    case \"binary\":\n      oopts.type = \"string\";\n      break;\n    case \"string\":\n      throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n    case \"buffer\":\n    case \"file\":\n      oopts.type = ftype;\n      break;\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  var out = z.FullPaths ? CFB.write(z, {\n    fileType: \"zip\",\n    type: /*::(*/{\n      \"nodebuffer\": \"buffer\",\n      \"string\": \"binary\"\n    } /*:: :any)*/[oopts.type] || oopts.type,\n    compression: !!o.compression\n  }) : z.generate(oopts);\n  if (typeof Deno !== \"undefined\") {\n    if (typeof out == \"string\") {\n      if (o.type == \"binary\" || o.type == \"base64\") return out;\n      out = new Uint8Array(s2ab(out));\n    }\n  }\n  /*jshint -W083 */\n  if (o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n  /*jshint +W083 */\n  if (o.type === \"file\") return write_dl(o.file, out);\n  return o.type == \"string\" ? utf8read( /*::(*/out /*:: :any)*/) : out;\n}\nfunction write_cfb_type(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = opts || {};\n  var cfb /*:CFBContainer*/ = write_xlscfb(wb, o);\n  return write_cfb_ctr(cfb, o);\n}\nfunction write_string_type(out /*:string*/, opts /*:WriteOpts*/, bom /*:?string*/) /*:any*/{\n  if (!bom) bom = \"\";\n  var o = bom + out;\n  switch (opts.type) {\n    case \"base64\":\n      return Base64_encode(utf8write(o));\n    case \"binary\":\n      return utf8write(o);\n    case \"string\":\n      return out;\n    case \"file\":\n      return write_dl(opts.file, o, 'utf8');\n    case \"buffer\":\n      {\n        if (has_buf) return Buffer_from(o, 'utf8');else if (typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);else return write_string_type(o, {\n          type: 'binary'\n        }).split(\"\").map(function (c) {\n          return c.charCodeAt(0);\n        });\n      }\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\nfunction write_stxt_type(out /*:string*/, opts /*:WriteOpts*/) /*:any*/{\n  switch (opts.type) {\n    case \"base64\":\n      return Base64_encode(out);\n    case \"binary\":\n      return out;\n    case \"string\":\n      return out;\n    /* override in sheet_to_txt */\n    case \"file\":\n      return write_dl(opts.file, out, 'binary');\n    case \"buffer\":\n      {\n        if (has_buf) return Buffer_from(out, 'binary');else return out.split(\"\").map(function (c) {\n          return c.charCodeAt(0);\n        });\n      }\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts /*:WriteOpts*/) /*:any*/{\n  switch (opts.type) {\n    case \"string\":\n    case \"base64\":\n    case \"binary\":\n      var bstr = \"\";\n      // $FlowIgnore\n      for (var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n      return opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n    case \"file\":\n      return write_dl(opts.file, out);\n    case \"buffer\":\n      return out;\n    default:\n      throw new Error(\"Unrecognized type \" + opts.type);\n  }\n}\nfunction writeSyncXLSX(wb /*:Workbook*/, opts /*:?WriteOpts*/) {\n  reset_cp();\n  check_wb(wb);\n  var o = dup(opts || {});\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  if (o.type == \"array\") {\n    o.type = \"binary\";\n    var out /*:string*/ = writeSyncXLSX(wb, o) /*:any*/;\n    o.type = \"array\";\n    return s2ab(out);\n  }\n  return write_zip_typeXLSX(wb, o);\n}\nfunction writeSync(wb /*:Workbook*/, opts /*:?WriteOpts*/) {\n  reset_cp();\n  check_wb(wb);\n  var o = dup(opts || {});\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  if (o.type == \"array\") {\n    o.type = \"binary\";\n    var out /*:string*/ = writeSync(wb, o) /*:any*/;\n    o.type = \"array\";\n    return s2ab(out);\n  }\n  var idx = 0;\n  if (o.sheet) {\n    if (typeof o.sheet == \"number\") idx = o.sheet;else idx = wb.SheetNames.indexOf(o.sheet);\n    if (!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + typeof o.sheet);\n  }\n  switch (o.bookType || 'xlsb') {\n    case 'xml':\n    case 'xlml':\n      return write_string_type(write_xlml(wb, o), o);\n    case 'slk':\n    case 'sylk':\n      return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'htm':\n    case 'html':\n      return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'txt':\n      return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'csv':\n      return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, \"\\ufeff\");\n    case 'dif':\n      return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'dbf':\n      return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'prn':\n      return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'rtf':\n      return write_string_type(RTF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'eth':\n      return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'fods':\n      return write_string_type(write_ods(wb, o), o);\n    case 'wk1':\n      return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'wk3':\n      return write_binary_type(WK_.book_to_wk3(wb, o), o);\n    case 'biff2':\n      if (!o.biff) o.biff = 2;\n    /* falls through */\n    case 'biff3':\n      if (!o.biff) o.biff = 3;\n    /* falls through */\n    case 'biff4':\n      if (!o.biff) o.biff = 4;\n      return write_binary_type(write_biff_buf(wb, o), o);\n    case 'biff5':\n      if (!o.biff) o.biff = 5;\n    /* falls through */\n    case 'biff8':\n    case 'xla':\n    case 'xls':\n      if (!o.biff) o.biff = 8;\n      return write_cfb_type(wb, o);\n    case 'xlsx':\n    case 'xlsm':\n    case 'xlam':\n    case 'xlsb':\n    case 'numbers':\n    case 'ods':\n      return write_zip_type(wb, o);\n    default:\n      throw new Error(\"Unrecognized bookType |\" + o.bookType + \"|\");\n  }\n}\nfunction resolve_book_type(o /*:WriteFileOpts*/) {\n  if (o.bookType) return;\n  var _BT = {\n    \"xls\": \"biff8\",\n    \"htm\": \"html\",\n    \"slk\": \"sylk\",\n    \"socialcalc\": \"eth\",\n    \"Sh33tJS\": \"WTF\"\n  };\n  var ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n  if (ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n  o.bookType = _BT[o.bookType] || o.bookType;\n}\nfunction writeFileSync(wb /*:Workbook*/, filename /*:string*/, opts /*:?WriteFileOpts*/) {\n  var o = opts || {};\n  o.type = 'file';\n  o.file = filename;\n  resolve_book_type(o);\n  return writeSync(wb, o);\n}\nfunction writeFileSyncXLSX(wb /*:Workbook*/, filename /*:string*/, opts /*:?WriteFileOpts*/) {\n  var o = opts || {};\n  o.type = 'file';\n  o.file = filename;\n  resolve_book_type(o);\n  return writeSyncXLSX(wb, o);\n}\nfunction writeFileAsync(filename /*:string*/, wb /*:Workbook*/, opts /*:?WriteFileOpts*/, cb /*:?(e?:ErrnoError)=>void*/) {\n  var o = opts || {};\n  o.type = 'file';\n  o.file = filename;\n  resolve_book_type(o);\n  o.type = 'buffer';\n  var _cb = cb;\n  if (!(_cb instanceof Function)) _cb = opts /*:any*/;\n  return _fs.writeFile(filename, writeSync(wb, o), _cb);\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet /*:Worksheet*/, r /*:Range*/, R /*:number*/, cols /*:Array<string>*/, header /*:number*/, hdr /*:Array<any>*/, dense /*:boolean*/, o /*:Sheet2JSONOpts*/) /*:MJRObject*/{\n  var rr = encode_row(R);\n  var defval = o.defval,\n    raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n  var isempty = true;\n  var row /*:any*/ = header === 1 ? [] : {};\n  if (header !== 1) {\n    if (Object.defineProperty) try {\n      Object.defineProperty(row, '__rowNum__', {\n        value: R,\n        enumerable: false\n      });\n    } catch (e) {\n      row.__rowNum__ = R;\n    } else row.__rowNum__ = R;\n  }\n  if (!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n    var val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n    if (val === undefined || val.t === undefined) {\n      if (defval === undefined) continue;\n      if (hdr[C] != null) {\n        row[hdr[C]] = defval;\n      }\n      continue;\n    }\n    var v = val.v;\n    switch (val.t) {\n      case 'z':\n        if (v == null) break;\n        continue;\n      case 'e':\n        v = v == 0 ? null : void 0;\n        break;\n      case 's':\n      case 'd':\n      case 'b':\n      case 'n':\n        break;\n      default:\n        throw new Error('unrecognized type ' + val.t);\n    }\n    if (hdr[C] != null) {\n      if (v == null) {\n        if (val.t == \"e\" && v === null) row[hdr[C]] = null;else if (defval !== undefined) row[hdr[C]] = defval;else if (raw && v === null) row[hdr[C]] = null;else continue;\n      } else {\n        row[hdr[C]] = raw && (val.t !== \"n\" || val.t === \"n\" && o.rawNumbers !== false) ? v : format_cell(val, v, o);\n      }\n      if (v != null) isempty = false;\n    }\n  }\n  return {\n    row: row,\n    isempty: isempty\n  };\n}\nfunction sheet_to_json(sheet /*:Worksheet*/, opts /*:?Sheet2JSONOpts*/) {\n  if (sheet == null || sheet[\"!ref\"] == null) return [];\n  var val = {\n      t: 'n',\n      v: 0\n    },\n    header = 0,\n    offset = 1,\n    hdr /*:Array<any>*/ = [],\n    v = 0,\n    vv = \"\";\n  var r = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var o = opts || {};\n  var range = o.range != null ? o.range : sheet[\"!ref\"];\n  if (o.header === 1) header = 1;else if (o.header === \"A\") header = 2;else if (Array.isArray(o.header)) header = 3;else if (o.header == null) header = 0;\n  switch (typeof range) {\n    case 'string':\n      r = safe_decode_range(range);\n      break;\n    case 'number':\n      r = safe_decode_range(sheet[\"!ref\"]);\n      r.s.r = range;\n      break;\n    default:\n      r = range;\n  }\n  if (header > 0) offset = 0;\n  var rr = encode_row(r.s.r);\n  var cols /*:Array<string>*/ = [];\n  var out /*:Array<any>*/ = [];\n  var outi = 0,\n    counter = 0;\n  var dense = Array.isArray(sheet);\n  var R = r.s.r,\n    C = 0;\n  var header_cnt = {};\n  if (dense && !sheet[R]) sheet[R] = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (C = r.s.c; C <= r.e.c; ++C) {\n    if ((colinfo[C] || {}).hidden) continue;\n    cols[C] = encode_col(C);\n    val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n    switch (header) {\n      case 1:\n        hdr[C] = C - r.s.c;\n        break;\n      case 2:\n        hdr[C] = cols[C];\n        break;\n      case 3:\n        hdr[C] = o.header[C - r.s.c];\n        break;\n      default:\n        if (val == null) val = {\n          w: \"__EMPTY\",\n          t: \"s\"\n        };\n        vv = v = format_cell(val, null, o);\n        counter = header_cnt[v] || 0;\n        if (!counter) header_cnt[v] = 1;else {\n          do {\n            vv = v + \"_\" + counter++;\n          } while (header_cnt[vv]);\n          header_cnt[v] = counter;\n          header_cnt[vv] = 1;\n        }\n        hdr[C] = vv;\n    }\n  }\n  for (R = r.s.r + offset; R <= r.e.r; ++R) {\n    if ((rowinfo[R] || {}).hidden) continue;\n    var row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n    if (row.isempty === false || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n  }\n  out.length = outi;\n  return out;\n}\nvar qreg = /\"/g;\nfunction make_csv_row(sheet /*:Worksheet*/, r /*:Range*/, R /*:number*/, cols /*:Array<string>*/, fs /*:number*/, rs /*:number*/, FS /*:string*/, o /*:Sheet2CSVOpts*/) /*:?string*/{\n  var isempty = true;\n  var row /*:Array<string>*/ = [],\n    txt = \"\",\n    rr = encode_row(R);\n  for (var C = r.s.c; C <= r.e.c; ++C) {\n    if (!cols[C]) continue;\n    var val = o.dense ? (sheet[R] || [])[C] : sheet[cols[C] + rr];\n    if (val == null) txt = \"\";else if (val.v != null) {\n      isempty = false;\n      txt = '' + (o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n      for (var i = 0, cc = 0; i !== txt.length; ++i) if ((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {\n        txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\";\n        break;\n      }\n      if (txt == \"ID\") txt = '\"ID\"';\n    } else if (val.f != null && !val.F) {\n      isempty = false;\n      txt = '=' + val.f;\n      if (txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n    } else txt = \"\";\n    /* NOTE: Excel CSV does not support array formulae */\n    row.push(txt);\n  }\n  if (o.blankrows === false && isempty) return null;\n  return row.join(FS);\n}\nfunction sheet_to_csv(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) /*:string*/{\n  var out /*:Array<string>*/ = [];\n  var o = opts == null ? {} : opts;\n  if (sheet == null || sheet[\"!ref\"] == null) return \"\";\n  var r = safe_decode_range(sheet[\"!ref\"]);\n  var FS = o.FS !== undefined ? o.FS : \",\",\n    fs = FS.charCodeAt(0);\n  var RS = o.RS !== undefined ? o.RS : \"\\n\",\n    rs = RS.charCodeAt(0);\n  var endregex = new RegExp((FS == \"|\" ? \"\\\\|\" : FS) + \"+$\");\n  var row = \"\",\n    cols /*:Array<string>*/ = [];\n  o.dense = Array.isArray(sheet);\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (var C = r.s.c; C <= r.e.c; ++C) if (!(colinfo[C] || {}).hidden) cols[C] = encode_col(C);\n  var w = 0;\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    if ((rowinfo[R] || {}).hidden) continue;\n    row = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n    if (row == null) {\n      continue;\n    }\n    if (o.strip) row = row.replace(endregex, \"\");\n    if (row || o.blankrows !== false) out.push((w++ ? RS : \"\") + row);\n  }\n  delete o.dense;\n  return out.join(\"\");\n}\nfunction sheet_to_txt(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) {\n  if (!opts) opts = {};\n  opts.FS = \"\\t\";\n  opts.RS = \"\\n\";\n  var s = sheet_to_csv(sheet, opts);\n  if (typeof $cptable == 'undefined' || opts.type == 'string') return s;\n  var o = $cptable.utils.encode(1200, s, 'str');\n  return String.fromCharCode(255) + String.fromCharCode(254) + o;\n}\nfunction sheet_to_formulae(sheet /*:Worksheet*/) /*:Array<string>*/{\n  var y = \"\",\n    x,\n    val = \"\";\n  if (sheet == null || sheet[\"!ref\"] == null) return [];\n  var r = safe_decode_range(sheet['!ref']),\n    rr = \"\",\n    cols /*:Array<string>*/ = [],\n    C;\n  var cmds /*:Array<string>*/ = [];\n  var dense = Array.isArray(sheet);\n  for (C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    rr = encode_row(R);\n    for (C = r.s.c; C <= r.e.c; ++C) {\n      y = cols[C] + rr;\n      x = dense ? (sheet[R] || [])[C] : sheet[y];\n      val = \"\";\n      if (x === undefined) continue;else if (x.F != null) {\n        y = x.F;\n        if (!x.f) continue;\n        val = x.f;\n        if (y.indexOf(\":\") == -1) y = y + \":\" + y;\n      }\n      if (x.f != null) val = x.f;else if (x.t == 'z') continue;else if (x.t == 'n' && x.v != null) val = \"\" + x.v;else if (x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";else if (x.w !== undefined) val = \"'\" + x.w;else if (x.v === undefined) continue;else if (x.t == 's') val = \"'\" + x.v;else val = \"\" + x.v;\n      cmds[cmds.length] = y + \"=\" + val;\n    }\n  }\n  return cmds;\n}\nfunction sheet_add_json(_ws /*:?Worksheet*/, js /*:Array<any>*/, opts) /*:Worksheet*/{\n  var o = opts || {};\n  var offset = +!o.skipHeader;\n  var ws /*:Worksheet*/ = _ws || {} /*:any*/;\n  var _R = 0,\n    _C = 0;\n  if (ws && o.origin != null) {\n    if (typeof o.origin == 'number') _R = o.origin;else {\n      var _origin /*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n      _R = _origin.r;\n      _C = _origin.c;\n    }\n  }\n  var cell /*:Cell*/;\n  var range /*:Range*/ = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: _C,\n      r: _R + js.length - 1 + offset\n    }\n  } /*:any*/;\n  if (ws['!ref']) {\n    var _range = safe_decode_range(ws['!ref']);\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    if (_R == -1) {\n      _R = _range.e.r + 1;\n      range.e.r = _R + js.length - 1 + offset;\n    }\n  } else {\n    if (_R == -1) {\n      _R = 0;\n      range.e.r = js.length - 1 + offset;\n    }\n  }\n  var hdr /*:Array<string>*/ = o.header || [],\n    C = 0;\n  js.forEach(function (JS, R /*:number*/) {\n    keys(JS).forEach(function (k) {\n      if ((C = hdr.indexOf(k)) == -1) hdr[C = hdr.length] = k;\n      var v = JS[k];\n      var t = 'z';\n      var z = \"\";\n      var ref = encode_cell({\n        c: _C + C,\n        r: _R + R + offset\n      });\n      cell = ws_get_cell_stub(ws, ref);\n      if (v && typeof v === 'object' && !(v instanceof Date)) {\n        ws[ref] = v;\n      } else {\n        if (typeof v == 'number') t = 'n';else if (typeof v == 'boolean') t = 'b';else if (typeof v == 'string') t = 's';else if (v instanceof Date) {\n          t = 'd';\n          if (!o.cellDates) {\n            t = 'n';\n            v = datenum(v);\n          }\n          z = o.dateNF || table_fmt[14];\n        } else if (v === null && o.nullError) {\n          t = 'e';\n          v = 0;\n        }\n        if (!cell) ws[ref] = cell = {\n          t: t,\n          v: v\n        } /*:any*/;else {\n          cell.t = t;\n          cell.v = v;\n          delete cell.w;\n          delete cell.R;\n          if (z) cell.z = z;\n        }\n        if (z) cell.z = z;\n      }\n    });\n  });\n  range.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n  var __R = encode_row(_R);\n  if (offset) for (C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {\n    t: 's',\n    v: hdr[C]\n  };\n  ws['!ref'] = encode_range(range);\n  return ws;\n}\nfunction json_to_sheet(js /*:Array<any>*/, opts) /*:Worksheet*/{\n  return sheet_add_json(null, js, opts);\n}\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws /*:Worksheet*/, R, C /*:?number*/) /*:Cell*/{\n  /* A1 cell address */\n  if (typeof R == \"string\") {\n    /* dense */\n    if (Array.isArray(ws)) {\n      var RC = decode_cell(R);\n      if (!ws[RC.r]) ws[RC.r] = [];\n      return ws[RC.r][RC.c] || (ws[RC.r][RC.c] = {\n        t: 'z'\n      });\n    }\n    return ws[R] || (ws[R] = {\n      t: 'z'\n    });\n  }\n  /* cell address object */\n  if (typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n  /* R and C are 0-based indices */\n  return ws_get_cell_stub(ws, encode_cell({\n    r: R,\n    c: C || 0\n  }));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb /*:Workbook*/, sh /*:number|string*/) {\n  if (typeof sh == \"number\") {\n    if (sh >= 0 && wb.SheetNames.length > sh) return sh;\n    throw new Error(\"Cannot find sheet # \" + sh);\n  } else if (typeof sh == \"string\") {\n    var idx = wb.SheetNames.indexOf(sh);\n    if (idx > -1) return idx;\n    throw new Error(\"Cannot find sheet name |\" + sh + \"|\");\n  } else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank workbook object */\nfunction book_new() /*:Workbook*/{\n  return {\n    SheetNames: [],\n    Sheets: {}\n  };\n}\n\n/* add a worksheet to the end of a given workbook */\nfunction book_append_sheet(wb /*:Workbook*/, ws /*:Worksheet*/, name /*:?string*/, roll /*:?boolean*/) /*:string*/{\n  var i = 1;\n  if (!name) for (; i <= 0xFFFF; ++i, name = undefined) if (wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n  if (!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n  if (roll && wb.SheetNames.indexOf(name) >= 0) {\n    var m = name.match(/(^.*?)(\\d+)$/);\n    i = m && +m[2] || 0;\n    var root = m && m[1] || name;\n    for (++i; i <= 0xFFFF; ++i) if (wb.SheetNames.indexOf(name = root + i) == -1) break;\n  }\n  check_ws_name(name);\n  if (wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n  wb.SheetNames.push(name);\n  wb.Sheets[name] = ws;\n  return name;\n}\n\n/* set sheet visibility (visible/hidden/very hidden) */\nfunction book_set_sheet_visibility(wb /*:Workbook*/, sh /*:number|string*/, vis /*:number*/) {\n  if (!wb.Workbook) wb.Workbook = {};\n  if (!wb.Workbook.Sheets) wb.Workbook.Sheets = [];\n  var idx = wb_sheet_idx(wb, sh);\n  // $FlowIgnore\n  if (!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};\n  switch (vis) {\n    case 0:\n    case 1:\n    case 2:\n      break;\n    default:\n      throw new Error(\"Bad sheet visibility setting \" + vis);\n  }\n  // $FlowIgnore\n  wb.Workbook.Sheets[idx].Hidden = vis;\n}\n\n/* set number format */\nfunction cell_set_number_format(cell /*:Cell*/, fmt /*:string|number*/) {\n  cell.z = fmt;\n  return cell;\n}\n\n/* set cell hyperlink */\nfunction cell_set_hyperlink(cell /*:Cell*/, target /*:string*/, tooltip /*:?string*/) {\n  if (!target) {\n    delete cell.l;\n  } else {\n    cell.l = {\n      Target: target\n    } /*:Hyperlink*/;\n    if (tooltip) cell.l.Tooltip = tooltip;\n  }\n  return cell;\n}\nfunction cell_set_internal_link(cell /*:Cell*/, range /*:string*/, tooltip /*:?string*/) {\n  return cell_set_hyperlink(cell, \"#\" + range, tooltip);\n}\n\n/* add to cell comments */\nfunction cell_add_comment(cell /*:Cell*/, text /*:string*/, author /*:?string*/) {\n  if (!cell.c) cell.c = [];\n  cell.c.push({\n    t: text,\n    a: author || \"SheetJS\"\n  });\n}\n\n/* set array formula and flush related cells */\nfunction sheet_set_array_formula(ws /*:Worksheet*/, range, formula /*:string*/, dynamic /*:boolean*/) {\n  var rng = typeof range != \"string\" ? range : safe_decode_range(range);\n  var rngstr = typeof range == \"string\" ? range : encode_range(range);\n  for (var R = rng.s.r; R <= rng.e.r; ++R) for (var C = rng.s.c; C <= rng.e.c; ++C) {\n    var cell = ws_get_cell_stub(ws, R, C);\n    cell.t = 'n';\n    cell.F = rngstr;\n    delete cell.v;\n    if (R == rng.s.r && C == rng.s.c) {\n      cell.f = formula;\n      if (dynamic) cell.D = true;\n    }\n  }\n  return ws;\n}\nvar utils /*:any*/ = {\n  encode_col: encode_col,\n  encode_row: encode_row,\n  encode_cell: encode_cell,\n  encode_range: encode_range,\n  decode_col: decode_col,\n  decode_row: decode_row,\n  split_cell: split_cell,\n  decode_cell: decode_cell,\n  decode_range: decode_range,\n  format_cell: format_cell,\n  sheet_add_aoa: sheet_add_aoa,\n  sheet_add_json: sheet_add_json,\n  sheet_add_dom: sheet_add_dom,\n  aoa_to_sheet: aoa_to_sheet,\n  json_to_sheet: json_to_sheet,\n  table_to_sheet: parse_dom_table,\n  table_to_book: table_to_book,\n  sheet_to_csv: sheet_to_csv,\n  sheet_to_txt: sheet_to_txt,\n  sheet_to_json: sheet_to_json,\n  sheet_to_html: sheet_to_html,\n  sheet_to_formulae: sheet_to_formulae,\n  sheet_to_row_object_array: sheet_to_json,\n  sheet_get_cell: ws_get_cell_stub,\n  book_new: book_new,\n  book_append_sheet: book_append_sheet,\n  book_set_sheet_visibility: book_set_sheet_visibility,\n  cell_set_number_format: cell_set_number_format,\n  cell_set_hyperlink: cell_set_hyperlink,\n  cell_set_internal_link: cell_set_internal_link,\n  cell_add_comment: cell_add_comment,\n  sheet_set_array_formula: sheet_set_array_formula,\n  consts: {\n    SHEET_VISIBLE: 0,\n    SHEET_HIDDEN: 1,\n    SHEET_VERY_HIDDEN: 2\n  }\n};\nvar _Readable;\nfunction set_readable(R) {\n  _Readable = R;\n}\nfunction write_csv_stream(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) {\n  var stream = _Readable();\n  var o = opts == null ? {} : opts;\n  if (sheet == null || sheet[\"!ref\"] == null) {\n    stream.push(null);\n    return stream;\n  }\n  var r = safe_decode_range(sheet[\"!ref\"]);\n  var FS = o.FS !== undefined ? o.FS : \",\",\n    fs = FS.charCodeAt(0);\n  var RS = o.RS !== undefined ? o.RS : \"\\n\",\n    rs = RS.charCodeAt(0);\n  var endregex = new RegExp((FS == \"|\" ? \"\\\\|\" : FS) + \"+$\");\n  var row /*:?string*/ = \"\",\n    cols /*:Array<string>*/ = [];\n  o.dense = Array.isArray(sheet);\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (var C = r.s.c; C <= r.e.c; ++C) if (!(colinfo[C] || {}).hidden) cols[C] = encode_col(C);\n  var R = r.s.r;\n  var BOM = false,\n    w = 0;\n  stream._read = function () {\n    if (!BOM) {\n      BOM = true;\n      return stream.push(\"\\uFEFF\");\n    }\n    while (R <= r.e.r) {\n      ++R;\n      if ((rowinfo[R - 1] || {}).hidden) continue;\n      row = make_csv_row(sheet, r, R - 1, cols, fs, rs, FS, o);\n      if (row != null) {\n        if (o.strip) row = row.replace(endregex, \"\");\n        if (row || o.blankrows !== false) return stream.push((w++ ? RS : \"\") + row);\n      }\n    }\n    return stream.push(null);\n  };\n  return stream;\n}\nfunction write_html_stream(ws /*:Worksheet*/, opts /*:?Sheet2HTMLOpts*/) {\n  var stream = _Readable();\n  var o = opts || {};\n  var header = o.header != null ? o.header : HTML_BEGIN;\n  var footer = o.footer != null ? o.footer : HTML_END;\n  stream.push(header);\n  var r = decode_range(ws['!ref']);\n  o.dense = Array.isArray(ws);\n  stream.push(make_html_preamble(ws, r, o));\n  var R = r.s.r;\n  var end = false;\n  stream._read = function () {\n    if (R > r.e.r) {\n      if (!end) {\n        end = true;\n        stream.push(\"</table>\" + footer);\n      }\n      return stream.push(null);\n    }\n    while (R <= r.e.r) {\n      stream.push(make_html_row(ws, r, R, o));\n      ++R;\n      break;\n    }\n  };\n  return stream;\n}\nfunction write_json_stream(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) {\n  var stream = _Readable({\n    objectMode: true\n  });\n  if (sheet == null || sheet[\"!ref\"] == null) {\n    stream.push(null);\n    return stream;\n  }\n  var val = {\n      t: 'n',\n      v: 0\n    },\n    header = 0,\n    offset = 1,\n    hdr /*:Array<any>*/ = [],\n    v = 0,\n    vv = \"\";\n  var r = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var o = opts || {};\n  var range = o.range != null ? o.range : sheet[\"!ref\"];\n  if (o.header === 1) header = 1;else if (o.header === \"A\") header = 2;else if (Array.isArray(o.header)) header = 3;\n  switch (typeof range) {\n    case 'string':\n      r = safe_decode_range(range);\n      break;\n    case 'number':\n      r = safe_decode_range(sheet[\"!ref\"]);\n      r.s.r = range;\n      break;\n    default:\n      r = range;\n  }\n  if (header > 0) offset = 0;\n  var rr = encode_row(r.s.r);\n  var cols /*:Array<string>*/ = [];\n  var counter = 0;\n  var dense = Array.isArray(sheet);\n  var R = r.s.r,\n    C = 0;\n  var header_cnt = {};\n  if (dense && !sheet[R]) sheet[R] = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<RowInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (C = r.s.c; C <= r.e.c; ++C) {\n    if ((colinfo[C] || {}).hidden) continue;\n    cols[C] = encode_col(C);\n    val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n    switch (header) {\n      case 1:\n        hdr[C] = C - r.s.c;\n        break;\n      case 2:\n        hdr[C] = cols[C];\n        break;\n      case 3:\n        hdr[C] = o.header[C - r.s.c];\n        break;\n      default:\n        if (val == null) val = {\n          w: \"__EMPTY\",\n          t: \"s\"\n        };\n        vv = v = format_cell(val, null, o);\n        counter = header_cnt[v] || 0;\n        if (!counter) header_cnt[v] = 1;else {\n          do {\n            vv = v + \"_\" + counter++;\n          } while (header_cnt[vv]);\n          header_cnt[v] = counter;\n          header_cnt[vv] = 1;\n        }\n        hdr[C] = vv;\n    }\n  }\n  R = r.s.r + offset;\n  stream._read = function () {\n    while (R <= r.e.r) {\n      if ((rowinfo[R - 1] || {}).hidden) continue;\n      var row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n      ++R;\n      if (row.isempty === false || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n        stream.push(row.row);\n        return;\n      }\n    }\n    return stream.push(null);\n  };\n  return stream;\n}\nvar __stream = {\n  to_json: write_json_stream,\n  to_html: write_html_stream,\n  to_csv: write_csv_stream,\n  set_readable: set_readable\n};\nexport const version = XLSX.version;\nexport { parse_xlscfb, parse_zip, readSync as read, readFileSync as readFile, readFileSync, writeSync as write, writeFileSync as writeFile, writeFileSync, writeFileAsync, writeSyncXLSX as writeXLSX, writeFileSyncXLSX as writeFileXLSX, utils, __stream as stream, SSF, CFB };"],"sourceRoot":""}