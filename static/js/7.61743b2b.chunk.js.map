{"version":3,"sources":["pages/BloqueadosDashboardVIRTELECOM.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","antd__WEBPACK_IMPORTED_MODULE_4__","_ant_design_icons__WEBPACK_IMPORTED_MODULE_5__","axios__WEBPACK_IMPORTED_MODULE_6__","BloqueadosDashboardVIRTELECOM","data","setData","useState","loading","setLoading","total","setTotal","useEffect","async","clientes","axios","get","map","cliente","SITUACAO_CONTRATO","mapSituacao","length","error","console","message","fetchData","situacao","columns","title","dataIndex","key","render","text","React","createElement","Button","type","icon","CopyOutlined","onClick","navigator","clipboard","writeText","then","success","catch","handleCopy","className","Spin","size","tip","Table","dataSource","rowKey"],"mappings":"gHAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAA,EAAA,KA+GeY,UAzGuBA,MACpC,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAASC,GAAcF,oBAAS,IAChCG,EAAOC,GAAYJ,mBAAS,GAEnCK,oBAAU,KACUC,WAChB,IACE,MACMC,SADiBC,IAAMC,IAAI,gFACPX,KAAKS,SAASG,IAAIC,IAAO,IAC9CA,EACHC,kBAAmBC,EAAYF,EAAQC,sBAEzCb,EAAQQ,GACRH,EAASG,EAASO,QAClBZ,GAAW,GACX,MAAOa,GACPC,QAAQD,MAAM,0BAA2BA,GACzCb,GAAW,GACXe,IAAQF,MAAM,6BAIlBG,IACC,IAEH,MAAML,EAAeM,IACnB,OAAQA,GACN,IAAK,IACH,MAAO,QACT,IAAK,IACH,MAAO,YACT,IAAK,IACH,MAAO,YACT,IAAK,IACH,MAAO,UACT,QACE,OAAOA,IAYPC,EAAU,CACd,CACEC,MAAO,kBACPC,UAAW,eACXC,IAAK,gBAEP,CACEF,MAAO,WACPC,UAAW,WACXC,IAAK,YAEP,CACEF,MAAO,cACPC,UAAW,cACXC,IAAK,eAEP,CACEF,MAAO,6BACPC,UAAW,oBACXC,IAAK,qBAEP,CACEF,MAAO,iBACPC,UAAW,cACXC,IAAK,eAEP,CACEF,MAAO,iBACPC,UAAW,iBACXC,IAAK,kBAEP,CACEF,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAASC,GACPC,IAAAC,cAAA,YACGF,EAAK,IAACC,IAAAC,cAACC,IAAM,CAACC,KAAK,OAAOC,KAAMJ,IAAAC,cAACI,IAAY,MAAKC,QAASA,IA7ChDP,KAClBQ,UAAUC,UAAUC,UAAUV,GAAMW,KAAK,KACvCnB,IAAQoB,QAAQ,2DACfC,MAAM,KACPrB,IAAQF,MAAM,mCAyCwDwB,CAAWd,QAMrF,OACEC,IAAAC,cAAA,OAAKa,UAAU,kCACbd,IAAAC,cAAA,UAAI,qCACJD,IAAAC,cAAA,SAAG,kCAAgCxB,GAClCF,EACCyB,IAAAC,cAACc,IAAI,CAACC,KAAK,QAAQC,IAAI,wBAEvBjB,IAAAC,cAACiB,IAAK,CAACxB,QAASA,EAASyB,WAAY/C,EAAMgD,OAAO","file":"static/js/7.61743b2b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table, Spin, message, Button } from 'antd';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport './styles/BloqueadosDashboardVIRTELECOM.css';\r\n\r\nconst BloqueadosDashboardVIRTELECOM = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://apidoixc.nexusnerds.com.br/Data/clientes_bloqueados_atualizado.json');\r\n        const clientes = response.data.clientes.map(cliente => ({\r\n          ...cliente,\r\n          SITUACAO_CONTRATO: mapSituacao(cliente.SITUACAO_CONTRATO),\r\n        }));\r\n        setData(clientes);\r\n        setTotal(clientes.length); // Define o total de contratos\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados:', error);\r\n        setLoading(false);\r\n        message.error('Erro ao carregar dados.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const mapSituacao = (situacao) => {\r\n    switch (situacao) {\r\n      case 'A':\r\n        return 'Ativo';\r\n      case 'C':\r\n        return 'Cancelado';\r\n      case 'B':\r\n        return 'Bloqueado';\r\n      case 'I':\r\n        return 'Inativo';\r\n      default:\r\n        return situacao;\r\n    }\r\n  };\r\n\r\n  const handleCopy = (text) => {\r\n    navigator.clipboard.writeText(text).then(() => {\r\n      message.success('Número copiado para a área de transferência!');\r\n    }).catch(() => {\r\n      message.error('Falha ao copiar o número.');\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Razão Social',\r\n      dataIndex: 'RAZAO_SOCIAL',\r\n      key: 'RAZAO_SOCIAL',\r\n    },\r\n    {\r\n      title: 'CPF/CNPJ',\r\n      dataIndex: 'CPF_CNPJ',\r\n      key: 'CPF_CNPJ',\r\n    },\r\n    {\r\n      title: 'ID Contrato',\r\n      dataIndex: 'ID_CONTRATO',\r\n      key: 'ID_CONTRATO',\r\n    },\r\n    {\r\n      title: 'Situação do Contrato',\r\n      dataIndex: 'SITUACAO_CONTRATO',\r\n      key: 'SITUACAO_CONTRATO',\r\n    },\r\n    {\r\n      title: 'Data Início',\r\n      dataIndex: 'DATA_INICIO',\r\n      key: 'DATA_INICIO',\r\n    },\r\n    {\r\n      title: 'Dia Vencimento',\r\n      dataIndex: 'DIA_VENCIMENTO',\r\n      key: 'DIA_VENCIMENTO',\r\n    },\r\n    {\r\n      title: 'Telefone',\r\n      dataIndex: 'telefone',\r\n      key: 'telefone',\r\n      render: (text) => (\r\n        <span>\r\n          {text} <Button type=\"link\" icon={<CopyOutlined />} onClick={() => handleCopy(text)} />\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bloqueados-dashboard-container\">\r\n      <h2>Dashboard - Bloqueados VIRTELECOM</h2>\r\n      <p>Total de Contratos Bloqueados: {total}</p>\r\n      {loading ? (\r\n        <Spin size=\"large\" tip=\"Carregando dados...\" />\r\n      ) : (\r\n        <Table columns={columns} dataSource={data} rowKey=\"ID_CONTRATO\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BloqueadosDashboardVIRTELECOM;\r\n"],"sourceRoot":""}